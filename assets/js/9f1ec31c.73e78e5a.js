"use strict";(self.webpackChunkpolymesh_developer_documentation=self.webpackChunkpolymesh_developer_documentation||[]).push([[5342],{28453:(e,t,i)=>{i.d(t,{R:()=>a,x:()=>r});var s=i(96540);const n={},o=s.createContext(n);function a(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),s.createElement(o.Provider,{value:t},e.children)}},88640:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>l,frontMatter:()=>a,metadata:()=>s,toc:()=>p});const s=JSON.parse('{"id":"api/entities/CorporateActionBase/types/type-aliases/InputTaxWithholding","title":"Type Alias: InputTaxWithholding","description":"InputTaxWithholding = Modify\\\\","source":"@site/sdk-docs_versioned_docs/version-v29.0.x/api/entities/CorporateActionBase/types/type-aliases/InputTaxWithholding.mdx","sourceDirName":"api/entities/CorporateActionBase/types/type-aliases","slug":"/api/entities/CorporateActionBase/types/type-aliases/InputTaxWithholding","permalink":"/polymesh-documentation-site/sdk-docs/api/entities/CorporateActionBase/types/type-aliases/InputTaxWithholding","draft":false,"unlisted":false,"tags":[],"version":"v29.0.x","frontMatter":{"sidebar_label":"InputTaxWithholding"},"sidebar":"defaultSidebar","previous":{"title":"InputTargets","permalink":"/polymesh-documentation-site/sdk-docs/api/entities/CorporateActionBase/types/type-aliases/InputTargets"},"next":{"title":"CorporateBallot","permalink":"/polymesh-documentation-site/sdk-docs/api/entities/CorporateBallot/"}}');var n=i(74848),o=i(28453);const a={sidebar_label:"InputTaxWithholding"},r="Type Alias: InputTaxWithholding",d={},p=[];function c(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",header:"header",p:"p",strong:"strong",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"type-alias-inputtaxwithholding",children:"Type Alias: InputTaxWithholding"})}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"InputTaxWithholding"})," = ",(0,n.jsx)(t.a,{href:"/polymesh-documentation-site/sdk-docs/types/utils/type-aliases/Modify",children:(0,n.jsx)(t.code,{children:"Modify"})}),"<",(0,n.jsx)(t.a,{href:"/polymesh-documentation-site/sdk-docs/api/entities/CorporateActionBase/types/interfaces/TaxWithholding",children:(0,n.jsx)(t.code,{children:"TaxWithholding"})}),", { ",(0,n.jsx)(t.code,{children:"identity"}),": ",(0,n.jsx)(t.code,{children:"string"})," | ",(0,n.jsx)(t.a,{href:"/polymesh-documentation-site/sdk-docs/api/entities/Identity/classes/Identity",children:(0,n.jsx)(t.code,{children:"Identity"})}),"; }>"]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["Defined in: ",(0,n.jsx)(t.a,{href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/bee6a2fe7a8ce5db42a6982e793782182cde2153/src/api/entities/CorporateActionBase/types.ts#L28",children:"src/api/entities/CorporateActionBase/types.ts:28"})]})]})}function l(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}}}]);