"use strict";(self.webpackChunkpolymesh_developer_documentation=self.webpackChunkpolymesh_developer_documentation||[]).push([[38133],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=i.createContext({}),d=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=d(e.components);return i.createElement(l.Provider,{value:t},e.children)},m="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=d(n),u=a,h=m["".concat(l,".").concat(u)]||m[u]||k[u]||r;return n?i.createElement(h,s(s({ref:t},p),{},{components:n})):i.createElement(h,s({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,s=new Array(r);s[0]=u;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[m]="string"==typeof e?e:a,s[1]=o;for(var d=2;d<r;d++)s[d]=n[d];return i.createElement.apply(null,s)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},15017:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var i=n(87462),a=(n(67294),n(3905));const r={id:"DividendDistribution",title:"Class: DividendDistribution",sidebar_label:"DividendDistribution"},s=void 0,o={unversionedId:"classes/API/Entities/DividendDistribution/DividendDistribution",id:"version-20.0.x/classes/API/Entities/DividendDistribution/DividendDistribution",title:"Class: DividendDistribution",description:"api/entities/DividendDistribution.DividendDistribution",source:"@site/sdk-docs_versioned_docs/version-20.0.x/classes/API/Entities/DividendDistribution/DividendDistribution.md",sourceDirName:"classes/API/Entities/DividendDistribution",slug:"/classes/API/Entities/DividendDistribution/",permalink:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/DividendDistribution/",draft:!1,tags:[],version:"20.0.x",frontMatter:{id:"DividendDistribution",title:"Class: DividendDistribution",sidebar_label:"DividendDistribution"},sidebar:"defaultSidebar",previous:{title:"DefaultTrustedClaimIssuer",permalink:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/DefaultTrustedClaimIssuer/"},next:{title:"Entity",permalink:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/Entity/"}},l={},d=[{value:"Hierarchy",id:"hierarchy",level:2},{value:"Properties",id:"properties",level:2},{value:"asset",id:"asset",level:3},{value:"Inherited from",id:"inherited-from",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"currency",id:"currency",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"declarationDate",id:"declarationdate",level:3},{value:"Inherited from",id:"inherited-from-1",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"defaultTaxWithholding",id:"defaulttaxwithholding",level:3},{value:"Inherited from",id:"inherited-from-2",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"description",id:"description",level:3},{value:"Inherited from",id:"inherited-from-3",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"expiryDate",id:"expirydate",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"id",id:"id",level:3},{value:"Inherited from",id:"inherited-from-4",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"maxAmount",id:"maxamount",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"origin",id:"origin",level:3},{value:"Defined in",id:"defined-in-8",level:4},{value:"paymentDate",id:"paymentdate",level:3},{value:"Defined in",id:"defined-in-9",level:4},{value:"perShare",id:"pershare",level:3},{value:"Defined in",id:"defined-in-10",level:4},{value:"targets",id:"targets",level:3},{value:"Inherited from",id:"inherited-from-5",level:4},{value:"Defined in",id:"defined-in-11",level:4},{value:"taxWithholdings",id:"taxwithholdings",level:3},{value:"Inherited from",id:"inherited-from-6",level:4},{value:"Defined in",id:"defined-in-12",level:4},{value:"uuid",id:"uuid",level:3},{value:"Inherited from",id:"inherited-from-7",level:4},{value:"Defined in",id:"defined-in-13",level:4},{value:"Methods",id:"methods",level:2},{value:"checkpoint",id:"checkpoint",level:3},{value:"Returns",id:"returns",level:4},{value:"Overrides",id:"overrides",level:4},{value:"claim",id:"claim",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-1",level:4},{value:"details",id:"details",level:3},{value:"Returns",id:"returns-2",level:4},{value:"exists",id:"exists",level:3},{value:"Returns",id:"returns-3",level:4},{value:"Overrides",id:"overrides-1",level:4},{value:"getParticipant",id:"getparticipant",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-4",level:4},{value:"getParticipants",id:"getparticipants",level:3},{value:"Returns",id:"returns-5",level:4},{value:"getPaymentHistory",id:"getpaymenthistory",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-6",level:4},{value:"getPaymentHistoryV2",id:"getpaymenthistoryv2",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-7",level:4},{value:"getWithheldTax",id:"getwithheldtax",level:3},{value:"Returns",id:"returns-8",level:4},{value:"getWithheldTaxV2",id:"getwithheldtaxv2",level:3},{value:"Returns",id:"returns-9",level:4},{value:"isEqual",id:"isequal",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Inherited from",id:"inherited-from-8",level:4},{value:"linkDocuments",id:"linkdocuments",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-11",level:4},{value:"Inherited from",id:"inherited-from-9",level:4},{value:"modifyCheckpoint",id:"modifycheckpoint",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-12",level:4},{value:"Overrides",id:"overrides-2",level:4},{value:"pay",id:"pay",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-13",level:4},{value:"reclaimFunds",id:"reclaimfunds",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-14",level:4},{value:"toHuman",id:"tohuman",level:3},{value:"Returns",id:"returns-15",level:4},{value:"Overrides",id:"overrides-3",level:4},{value:"generateUuid",id:"generateuuid",level:3},{value:"Type parameters",id:"type-parameters",level:4},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-16",level:4},{value:"Inherited from",id:"inherited-from-10",level:4},{value:"unserialize",id:"unserialize",level:3},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-17",level:4},{value:"Inherited from",id:"inherited-from-11",level:4}],p={toc:d};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/modules/API/Entities/DividendDistribution/"},"api/entities/DividendDistribution"),".DividendDistribution"),(0,a.kt)("p",null,"Represents a Corporate Action via which an Asset issuer wishes to distribute dividends\nbetween a subset of the Asset Holders (targets)"),(0,a.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/CorporateActionBase/"},(0,a.kt)("inlineCode",{parentName:"a"},"CorporateActionBase"))),(0,a.kt)("p",{parentName:"li"},"\u21b3 ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"DividendDistribution"))))),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("h3",{id:"asset"},"asset"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"asset"),": ",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/Asset/"},(0,a.kt)("inlineCode",{parentName:"a"},"Asset"))),(0,a.kt)("p",null,"Asset affected by this Corporate Action"),(0,a.kt)("h4",{id:"inherited-from"},"Inherited from"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/CorporateActionBase/"},"CorporateActionBase"),".",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/CorporateActionBase/#asset"},"asset")),(0,a.kt)("h4",{id:"defined-in"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/91c2d2d8/src/api/entities/CorporateActionBase/index.ts#L80"},"api/entities/CorporateActionBase/index.ts:80")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"currency"},"currency"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"currency"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("p",null,"ticker of the currency in which dividends are being distributed"),(0,a.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/91c2d2d8/src/api/entities/DividendDistribution/index.ts#L102"},"api/entities/DividendDistribution/index.ts:102")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"declarationdate"},"declarationDate"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"declarationDate"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"Date")),(0,a.kt)("p",null,"date at which the Corporate Action was created"),(0,a.kt)("h4",{id:"inherited-from-1"},"Inherited from"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/CorporateActionBase/"},"CorporateActionBase"),".",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/CorporateActionBase/#declarationdate"},"declarationDate")),(0,a.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/91c2d2d8/src/api/entities/CorporateActionBase/index.ts#L85"},"api/entities/CorporateActionBase/index.ts:85")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"defaulttaxwithholding"},"defaultTaxWithholding"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"defaultTaxWithholding"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"BigNumber")),(0,a.kt)("p",null,"default percentage (0-100) of tax withholding for this Corporate Action"),(0,a.kt)("h4",{id:"inherited-from-2"},"Inherited from"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/CorporateActionBase/"},"CorporateActionBase"),".",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/CorporateActionBase/#defaulttaxwithholding"},"defaultTaxWithholding")),(0,a.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/91c2d2d8/src/api/entities/CorporateActionBase/index.ts#L101"},"api/entities/CorporateActionBase/index.ts:101")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"description"},"description"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"description"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("p",null,"brief text description of the Corporate Action"),(0,a.kt)("h4",{id:"inherited-from-3"},"Inherited from"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/CorporateActionBase/"},"CorporateActionBase"),".",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/CorporateActionBase/#description"},"description")),(0,a.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/91c2d2d8/src/api/entities/CorporateActionBase/index.ts#L90"},"api/entities/CorporateActionBase/index.ts:90")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"expirydate"},"expiryDate"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"expiryDate"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"null")," ","|"," ",(0,a.kt)("inlineCode",{parentName:"p"},"Date")),(0,a.kt)("p",null,"date after which dividends can no longer be paid/reclaimed. A null value means the distribution never expires"),(0,a.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/91c2d2d8/src/api/entities/DividendDistribution/index.ts#L118"},"api/entities/DividendDistribution/index.ts:118")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"id"},"id"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"id"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"BigNumber")),(0,a.kt)("p",null,"internal Corporate Action ID"),(0,a.kt)("h4",{id:"inherited-from-4"},"Inherited from"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/CorporateActionBase/"},"CorporateActionBase"),".",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/CorporateActionBase/#id"},"id")),(0,a.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/91c2d2d8/src/api/entities/CorporateActionBase/index.ts#L75"},"api/entities/CorporateActionBase/index.ts:75")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"maxamount"},"maxAmount"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"maxAmount"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"BigNumber")),(0,a.kt)("p",null,"maximum amount of ",(0,a.kt)("inlineCode",{parentName:"p"},"currency"),' to be distributed. Distributions are "first come, first served", so funds can be depleted before\nevery Asset Holder receives their corresponding amount'),(0,a.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/91c2d2d8/src/api/entities/DividendDistribution/index.ts#L113"},"api/entities/DividendDistribution/index.ts:113")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"origin"},"origin"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"origin"),": ",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/NumberedPortfolio/"},(0,a.kt)("inlineCode",{parentName:"a"},"NumberedPortfolio"))," ","|"," ",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/DefaultPortfolio/"},(0,a.kt)("inlineCode",{parentName:"a"},"DefaultPortfolio"))),(0,a.kt)("p",null,"Portfolio from which the dividends will be distributed"),(0,a.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/91c2d2d8/src/api/entities/DividendDistribution/index.ts#L97"},"api/entities/DividendDistribution/index.ts:97")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"paymentdate"},"paymentDate"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"paymentDate"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"Date")),(0,a.kt)("p",null,"date starting from which dividends can be paid/reclaimed"),(0,a.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/91c2d2d8/src/api/entities/DividendDistribution/index.ts#L123"},"api/entities/DividendDistribution/index.ts:123")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"pershare"},"perShare"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"perShare"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"BigNumber")),(0,a.kt)("p",null,"amount of ",(0,a.kt)("inlineCode",{parentName:"p"},"currency")," to pay for each share held by the Asset Holders"),(0,a.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/91c2d2d8/src/api/entities/DividendDistribution/index.ts#L107"},"api/entities/DividendDistribution/index.ts:107")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"targets"},"targets"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"targets"),": ",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/interfaces/API/Entities/CorporateActionBase/Types/CorporateActionTargets/"},(0,a.kt)("inlineCode",{parentName:"a"},"CorporateActionTargets"))),(0,a.kt)("p",null,"Asset Holder Identities related to this Corporate action. If the treatment is ",(0,a.kt)("inlineCode",{parentName:"p"},"Exclude"),", the Identities\nin the array will not be targeted by the Action, Identities not in the array will be targeted, and vice versa"),(0,a.kt)("h4",{id:"inherited-from-5"},"Inherited from"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/CorporateActionBase/"},"CorporateActionBase"),".",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/CorporateActionBase/#targets"},"targets")),(0,a.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/91c2d2d8/src/api/entities/CorporateActionBase/index.ts#L96"},"api/entities/CorporateActionBase/index.ts:96")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"taxwithholdings"},"taxWithholdings"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"taxWithholdings"),": ",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/interfaces/API/Entities/CorporateActionBase/Types/TaxWithholding/"},(0,a.kt)("inlineCode",{parentName:"a"},"TaxWithholding")),"[]"),(0,a.kt)("p",null,"percentage (0-100) of tax withholding per Identity. Any Identity not present\nin this array uses the default tax withholding percentage"),(0,a.kt)("h4",{id:"inherited-from-6"},"Inherited from"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/CorporateActionBase/"},"CorporateActionBase"),".",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/CorporateActionBase/#taxwithholdings"},"taxWithholdings")),(0,a.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/91c2d2d8/src/api/entities/CorporateActionBase/index.ts#L107"},"api/entities/CorporateActionBase/index.ts:107")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"uuid"},"uuid"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"uuid"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("h4",{id:"inherited-from-7"},"Inherited from"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/CorporateActionBase/"},"CorporateActionBase"),".",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/CorporateActionBase/#uuid"},"uuid")),(0,a.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/91c2d2d8/src/api/entities/Entity.ts#L46"},"api/entities/Entity.ts:46")),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("h3",{id:"checkpoint"},"checkpoint"),(0,a.kt)("p",null,"\u25b8 ",(0,a.kt)("strong",{parentName:"p"},"checkpoint"),"(): ",(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/CheckpointSchedule/"},(0,a.kt)("inlineCode",{parentName:"a"},"CheckpointSchedule"))," ","|"," ",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/Checkpoint/"},(0,a.kt)("inlineCode",{parentName:"a"},"Checkpoint")),">"),(0,a.kt)("p",null,"Retrieve the Checkpoint associated with this Dividend Distribution. If the Checkpoint is scheduled and has not been created yet,\nthe corresponding CheckpointSchedule is returned instead"),(0,a.kt)("h4",{id:"returns"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/CheckpointSchedule/"},(0,a.kt)("inlineCode",{parentName:"a"},"CheckpointSchedule"))," ","|"," ",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/Checkpoint/"},(0,a.kt)("inlineCode",{parentName:"a"},"Checkpoint")),">"),(0,a.kt)("h4",{id:"overrides"},"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/CorporateActionBase/"},"CorporateActionBase"),".",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/CorporateActionBase/#checkpoint"},"checkpoint")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"claim"},"claim"),(0,a.kt)("p",null,"\u25b8 ",(0,a.kt)("strong",{parentName:"p"},"claim"),"(",(0,a.kt)("inlineCode",{parentName:"p"},"opts?"),"): ",(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/modules/Types/#genericpolymeshtransaction"},(0,a.kt)("inlineCode",{parentName:"a"},"GenericPolymeshTransaction")),"<",(0,a.kt)("inlineCode",{parentName:"p"},"void"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"void"),">",">"),(0,a.kt)("p",null,"Claim the Dividends corresponding to the signing Identity"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Note"))),(0,a.kt)("p",null," if ",(0,a.kt)("inlineCode",{parentName:"p"},"currency")," is indivisible, the Identity's share will be rounded down to the nearest integer (after taxes are withheld)"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Note"))),(0,a.kt)("p",null," this method is of type ",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/interfaces/Types/NoArgsProcedureMethod/"},"NoArgsProcedureMethod"),", which means you can call ",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/interfaces/Types/NoArgsProcedureMethod/#checkauthorization"},"claim.checkAuthorization"),"\non it to see whether the signing Account and Identity have the required roles and permissions to run it"),(0,a.kt)("h4",{id:"parameters"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"opts?")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"/polymesh-documentation-site/sdk-docs/interfaces/Types/ProcedureOpts/"},(0,a.kt)("inlineCode",{parentName:"a"},"ProcedureOpts")))))),(0,a.kt)("h4",{id:"returns-1"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/modules/Types/#genericpolymeshtransaction"},(0,a.kt)("inlineCode",{parentName:"a"},"GenericPolymeshTransaction")),"<",(0,a.kt)("inlineCode",{parentName:"p"},"void"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"void"),">",">"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"details"},"details"),(0,a.kt)("p",null,"\u25b8 ",(0,a.kt)("strong",{parentName:"p"},"details"),"(): ",(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/interfaces/API/Entities/DividendDistribution/Types/DividendDistributionDetails/"},(0,a.kt)("inlineCode",{parentName:"a"},"DividendDistributionDetails")),">"),(0,a.kt)("p",null,"Retrieve details associated with this Dividend Distribution"),(0,a.kt)("h4",{id:"returns-2"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/interfaces/API/Entities/DividendDistribution/Types/DividendDistributionDetails/"},(0,a.kt)("inlineCode",{parentName:"a"},"DividendDistributionDetails")),">"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"exists"},"exists"),(0,a.kt)("p",null,"\u25b8 ",(0,a.kt)("strong",{parentName:"p"},"exists"),"(): ",(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,a.kt)("inlineCode",{parentName:"p"},"boolean"),">"),(0,a.kt)("p",null,"Retrieve whether the Distribution exists"),(0,a.kt)("h4",{id:"returns-3"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,a.kt)("inlineCode",{parentName:"p"},"boolean"),">"),(0,a.kt)("h4",{id:"overrides-1"},"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/CorporateActionBase/"},"CorporateActionBase"),".",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/CorporateActionBase/#exists"},"exists")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getparticipant"},"getParticipant"),(0,a.kt)("p",null,"\u25b8 ",(0,a.kt)("strong",{parentName:"p"},"getParticipant"),"(",(0,a.kt)("inlineCode",{parentName:"p"},"args?"),"): ",(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,a.kt)("inlineCode",{parentName:"p"},"null")," ","|"," ",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/interfaces/API/Entities/DividendDistribution/Types/DistributionParticipant/"},(0,a.kt)("inlineCode",{parentName:"a"},"DistributionParticipant")),">"),(0,a.kt)("p",null,"Retrieve an Identity that is entitled to dividends in this Distribution (participant),\nthe amount it is entitled to and whether it has been paid or not"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Note"))),(0,a.kt)("p",null," if the Distribution Checkpoint hasn't been created yet, the result will be null.\nThis is because the Distribution participant's corresponding payment cannot be determined without a Checkpoint"),(0,a.kt)("h4",{id:"parameters-1"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"args?")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"Object")),(0,a.kt)("td",{parentName:"tr",align:"left"},"-")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"args.identity")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,a.kt)("a",{parentName:"td",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/Identity/"},(0,a.kt)("inlineCode",{parentName:"a"},"Identity"))),(0,a.kt)("td",{parentName:"tr",align:"left"},"defaults to the signing Identity")))),(0,a.kt)("h4",{id:"returns-4"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,a.kt)("inlineCode",{parentName:"p"},"null")," ","|"," ",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/interfaces/API/Entities/DividendDistribution/Types/DistributionParticipant/"},(0,a.kt)("inlineCode",{parentName:"a"},"DistributionParticipant")),">"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getparticipants"},"getParticipants"),(0,a.kt)("p",null,"\u25b8 ",(0,a.kt)("strong",{parentName:"p"},"getParticipants"),"(): ",(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/interfaces/API/Entities/DividendDistribution/Types/DistributionParticipant/"},(0,a.kt)("inlineCode",{parentName:"a"},"DistributionParticipant")),"[]",">"),(0,a.kt)("p",null,"Retrieve a comprehensive list of all Identities that are entitled to dividends in this Distribution (participants),\nthe amount they are entitled to and whether they have been paid or not"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Note"))),(0,a.kt)("p",null," this request can take a lot of time with large amounts of Asset Holders"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Note"))),(0,a.kt)("p",null," if the Distribution Checkpoint hasn't been created yet, the result will be an empty array.\nThis is because the Distribution participants cannot be determined without a Checkpoint"),(0,a.kt)("h4",{id:"returns-5"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/interfaces/API/Entities/DividendDistribution/Types/DistributionParticipant/"},(0,a.kt)("inlineCode",{parentName:"a"},"DistributionParticipant")),"[]",">"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getpaymenthistory"},"getPaymentHistory"),(0,a.kt)("p",null,"\u25b8 ",(0,a.kt)("strong",{parentName:"p"},"getPaymentHistory"),"(",(0,a.kt)("inlineCode",{parentName:"p"},"opts?"),"): ",(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/interfaces/Types/ResultSet/"},(0,a.kt)("inlineCode",{parentName:"a"},"ResultSet")),"<",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/interfaces/Types/DistributionPayment/"},(0,a.kt)("inlineCode",{parentName:"a"},"DistributionPayment")),">",">"),(0,a.kt)("p",null,"Retrieve the payment history for this Distribution"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Note"))),(0,a.kt)("p",null," uses the middleware"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Note"))),(0,a.kt)("p",null," supports pagination"),(0,a.kt)("h4",{id:"parameters-2"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"opts")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"Object"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"opts.size?")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"BigNumber"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"opts.start?")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"BigNumber"))))),(0,a.kt)("h4",{id:"returns-6"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/interfaces/Types/ResultSet/"},(0,a.kt)("inlineCode",{parentName:"a"},"ResultSet")),"<",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/interfaces/Types/DistributionPayment/"},(0,a.kt)("inlineCode",{parentName:"a"},"DistributionPayment")),">",">"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getpaymenthistoryv2"},"getPaymentHistoryV2"),(0,a.kt)("p",null,"\u25b8 ",(0,a.kt)("strong",{parentName:"p"},"getPaymentHistoryV2"),"(",(0,a.kt)("inlineCode",{parentName:"p"},"opts?"),"): ",(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/interfaces/Types/ResultSet/"},(0,a.kt)("inlineCode",{parentName:"a"},"ResultSet")),"<",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/interfaces/Types/DistributionPayment/"},(0,a.kt)("inlineCode",{parentName:"a"},"DistributionPayment")),">",">"),(0,a.kt)("p",null,"Retrieve the payment history for this Distribution"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Note"))),(0,a.kt)("p",null," uses the middleware V2"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Note"))),(0,a.kt)("p",null," supports pagination"),(0,a.kt)("h4",{id:"parameters-3"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"opts")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"Object"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"opts.size?")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"BigNumber"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"opts.start?")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"BigNumber"))))),(0,a.kt)("h4",{id:"returns-7"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/interfaces/Types/ResultSet/"},(0,a.kt)("inlineCode",{parentName:"a"},"ResultSet")),"<",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/interfaces/Types/DistributionPayment/"},(0,a.kt)("inlineCode",{parentName:"a"},"DistributionPayment")),">",">"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getwithheldtax"},"getWithheldTax"),(0,a.kt)("p",null,"\u25b8 ",(0,a.kt)("strong",{parentName:"p"},"getWithheldTax"),"(): ",(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,a.kt)("inlineCode",{parentName:"p"},"BigNumber"),">"),(0,a.kt)("p",null,"Retrieve the amount of taxes that have been withheld up to this point in this Distribution"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Note"))),(0,a.kt)("p",null," uses the middleware"),(0,a.kt)("h4",{id:"returns-8"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,a.kt)("inlineCode",{parentName:"p"},"BigNumber"),">"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getwithheldtaxv2"},"getWithheldTaxV2"),(0,a.kt)("p",null,"\u25b8 ",(0,a.kt)("strong",{parentName:"p"},"getWithheldTaxV2"),"(): ",(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,a.kt)("inlineCode",{parentName:"p"},"BigNumber"),">"),(0,a.kt)("p",null,"Retrieve the amount of taxes that have been withheld up to this point in this Distribution"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Note"))),(0,a.kt)("p",null," uses the middlewareV2"),(0,a.kt)("h4",{id:"returns-9"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,a.kt)("inlineCode",{parentName:"p"},"BigNumber"),">"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"isequal"},"isEqual"),(0,a.kt)("p",null,"\u25b8 ",(0,a.kt)("strong",{parentName:"p"},"isEqual"),"(",(0,a.kt)("inlineCode",{parentName:"p"},"entity"),"): ",(0,a.kt)("inlineCode",{parentName:"p"},"boolean")),(0,a.kt)("p",null,"Determine whether this Entity is the same as another one"),(0,a.kt)("h4",{id:"parameters-4"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"entity")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/Entity/"},(0,a.kt)("inlineCode",{parentName:"a"},"Entity")),"<",(0,a.kt)("inlineCode",{parentName:"td"},"unknown"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"unknown"),">")))),(0,a.kt)("h4",{id:"returns-10"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"boolean")),(0,a.kt)("h4",{id:"inherited-from-8"},"Inherited from"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/CorporateActionBase/"},"CorporateActionBase"),".",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/CorporateActionBase/#isequal"},"isEqual")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"linkdocuments"},"linkDocuments"),(0,a.kt)("p",null,"\u25b8 ",(0,a.kt)("strong",{parentName:"p"},"linkDocuments"),"(",(0,a.kt)("inlineCode",{parentName:"p"},"args"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"opts?"),"): ",(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/modules/Types/#genericpolymeshtransaction"},(0,a.kt)("inlineCode",{parentName:"a"},"GenericPolymeshTransaction")),"<",(0,a.kt)("inlineCode",{parentName:"p"},"void"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"void"),">",">"),(0,a.kt)("p",null,"Link a list of documents to this corporate action"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Note"))),(0,a.kt)("p",null," any previous links are removed in favor of the new list"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Note"))),(0,a.kt)("p",null," this method is of type ",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/interfaces/Types/ProcedureMethod/"},"ProcedureMethod"),", which means you can call ",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/interfaces/Types/ProcedureMethod/#checkauthorization"},"linkDocuments.checkAuthorization"),"\non it to see whether the signing Account and Identity have the required roles and permissions to run it"),(0,a.kt)("h4",{id:"parameters-5"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"args")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"/polymesh-documentation-site/sdk-docs/interfaces/API/Procedures/Types/LinkCaDocsParams/"},(0,a.kt)("inlineCode",{parentName:"a"},"LinkCaDocsParams")))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"opts?")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"/polymesh-documentation-site/sdk-docs/interfaces/Types/ProcedureOpts/"},(0,a.kt)("inlineCode",{parentName:"a"},"ProcedureOpts")))))),(0,a.kt)("h4",{id:"returns-11"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/modules/Types/#genericpolymeshtransaction"},(0,a.kt)("inlineCode",{parentName:"a"},"GenericPolymeshTransaction")),"<",(0,a.kt)("inlineCode",{parentName:"p"},"void"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"void"),">",">"),(0,a.kt)("h4",{id:"inherited-from-9"},"Inherited from"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/CorporateActionBase/"},"CorporateActionBase"),".",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/CorporateActionBase/#linkdocuments"},"linkDocuments")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"modifycheckpoint"},"modifyCheckpoint"),(0,a.kt)("p",null,"\u25b8 ",(0,a.kt)("strong",{parentName:"p"},"modifyCheckpoint"),"(",(0,a.kt)("inlineCode",{parentName:"p"},"args"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"opts?"),"): ",(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/modules/Types/#genericpolymeshtransaction"},(0,a.kt)("inlineCode",{parentName:"a"},"GenericPolymeshTransaction")),"<",(0,a.kt)("inlineCode",{parentName:"p"},"void"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"void"),">",">"),(0,a.kt)("p",null,"Modify the Distribution's Checkpoint"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Note"))),(0,a.kt)("p",null," this method is of type ",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/interfaces/Types/ProcedureMethod/"},"ProcedureMethod"),", which means you can call ",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/interfaces/Types/ProcedureMethod/#checkauthorization"},"modifyCheckpoint.checkAuthorization"),"\non it to see whether the signing Account and Identity have the required roles and permissions to run it"),(0,a.kt)("h4",{id:"parameters-6"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"args")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"/polymesh-documentation-site/sdk-docs/modules/Types/Utils/#modify"},(0,a.kt)("inlineCode",{parentName:"a"},"Modify")),"<",(0,a.kt)("a",{parentName:"td",href:"/polymesh-documentation-site/sdk-docs/interfaces/API/Procedures/Types/ModifyCaCheckpointParams/"},(0,a.kt)("inlineCode",{parentName:"a"},"ModifyCaCheckpointParams")),", { ",(0,a.kt)("inlineCode",{parentName:"td"},"checkpoint"),": ",(0,a.kt)("a",{parentName:"td",href:"/polymesh-documentation-site/sdk-docs/modules/API/Entities/Asset/Checkpoints/Types/#inputcacheckpoint"},(0,a.kt)("inlineCode",{parentName:"a"},"InputCaCheckpoint")),"  }",">")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"opts?")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"/polymesh-documentation-site/sdk-docs/interfaces/Types/ProcedureOpts/"},(0,a.kt)("inlineCode",{parentName:"a"},"ProcedureOpts")))))),(0,a.kt)("h4",{id:"returns-12"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/modules/Types/#genericpolymeshtransaction"},(0,a.kt)("inlineCode",{parentName:"a"},"GenericPolymeshTransaction")),"<",(0,a.kt)("inlineCode",{parentName:"p"},"void"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"void"),">",">"),(0,a.kt)("h4",{id:"overrides-2"},"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/CorporateActionBase/"},"CorporateActionBase"),".",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/CorporateActionBase/#modifycheckpoint"},"modifyCheckpoint")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"pay"},"pay"),(0,a.kt)("p",null,"\u25b8 ",(0,a.kt)("strong",{parentName:"p"},"pay"),"(",(0,a.kt)("inlineCode",{parentName:"p"},"args"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"opts?"),"): ",(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/modules/Types/#genericpolymeshtransaction"},(0,a.kt)("inlineCode",{parentName:"a"},"GenericPolymeshTransaction")),"<",(0,a.kt)("inlineCode",{parentName:"p"},"void"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"void"),">",">"),(0,a.kt)("p",null,"Transfer the corresponding share of the dividends to a list of Identities"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Note"))),(0,a.kt)("p",null," due to performance issues, we do not validate that the distribution has enough remaining funds to pay the corresponding amount to the supplied Identities"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Note"))),(0,a.kt)("p",null," if ",(0,a.kt)("inlineCode",{parentName:"p"},"currency")," is indivisible, the Identity's share will be rounded down to the nearest integer (after taxes are withheld)"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Note"))),(0,a.kt)("p",null," this method is of type ",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/interfaces/Types/ProcedureMethod/"},"ProcedureMethod"),", which means you can call ",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/interfaces/Types/ProcedureMethod/#checkauthorization"},"pay.checkAuthorization"),"\non it to see whether the signing Account and Identity have the required roles and permissions to run it"),(0,a.kt)("h4",{id:"parameters-7"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"args")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"/polymesh-documentation-site/sdk-docs/interfaces/API/Procedures/Types/PayDividendsParams/"},(0,a.kt)("inlineCode",{parentName:"a"},"PayDividendsParams")))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"opts?")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"/polymesh-documentation-site/sdk-docs/interfaces/Types/ProcedureOpts/"},(0,a.kt)("inlineCode",{parentName:"a"},"ProcedureOpts")))))),(0,a.kt)("h4",{id:"returns-13"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/modules/Types/#genericpolymeshtransaction"},(0,a.kt)("inlineCode",{parentName:"a"},"GenericPolymeshTransaction")),"<",(0,a.kt)("inlineCode",{parentName:"p"},"void"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"void"),">",">"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"reclaimfunds"},"reclaimFunds"),(0,a.kt)("p",null,"\u25b8 ",(0,a.kt)("strong",{parentName:"p"},"reclaimFunds"),"(",(0,a.kt)("inlineCode",{parentName:"p"},"opts?"),"): ",(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/modules/Types/#genericpolymeshtransaction"},(0,a.kt)("inlineCode",{parentName:"a"},"GenericPolymeshTransaction")),"<",(0,a.kt)("inlineCode",{parentName:"p"},"void"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"void"),">",">"),(0,a.kt)("p",null,"Reclaim any remaining funds back to the origin Portfolio. This can only be done after the Distribution has expired"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Note"))),(0,a.kt)("p",null," withheld taxes are also reclaimed in the same transaction"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Note"))),(0,a.kt)("p",null," required roles:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Origin Portfolio Custodian")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Note"))),(0,a.kt)("p",null," this method is of type ",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/interfaces/Types/NoArgsProcedureMethod/"},"NoArgsProcedureMethod"),", which means you can call ",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/interfaces/Types/NoArgsProcedureMethod/#checkauthorization"},"reclaimFunds.checkAuthorization"),"\non it to see whether the signing Account and Identity have the required roles and permissions to run it"),(0,a.kt)("h4",{id:"parameters-8"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"opts?")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"/polymesh-documentation-site/sdk-docs/interfaces/Types/ProcedureOpts/"},(0,a.kt)("inlineCode",{parentName:"a"},"ProcedureOpts")))))),(0,a.kt)("h4",{id:"returns-14"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/modules/Types/#genericpolymeshtransaction"},(0,a.kt)("inlineCode",{parentName:"a"},"GenericPolymeshTransaction")),"<",(0,a.kt)("inlineCode",{parentName:"p"},"void"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"void"),">",">"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"tohuman"},"toHuman"),(0,a.kt)("p",null,"\u25b8 ",(0,a.kt)("strong",{parentName:"p"},"toHuman"),"(): ",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/interfaces/API/Entities/DividendDistribution/HumanReadable/"},(0,a.kt)("inlineCode",{parentName:"a"},"HumanReadable"))),(0,a.kt)("p",null,"Return the Dividend Distribution's static data"),(0,a.kt)("h4",{id:"returns-15"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/interfaces/API/Entities/DividendDistribution/HumanReadable/"},(0,a.kt)("inlineCode",{parentName:"a"},"HumanReadable"))),(0,a.kt)("h4",{id:"overrides-3"},"Overrides"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/CorporateActionBase/"},"CorporateActionBase"),".",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/CorporateActionBase/#tohuman"},"toHuman")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"generateuuid"},"generateUuid"),(0,a.kt)("p",null,"\u25b8 ",(0,a.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,a.kt)("strong",{parentName:"p"},"generateUuid"),"<",(0,a.kt)("inlineCode",{parentName:"p"},"Identifiers"),">","(",(0,a.kt)("inlineCode",{parentName:"p"},"identifiers"),"): ",(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("p",null,"Generate the Entity's UUID from its identifying properties"),(0,a.kt)("h4",{id:"type-parameters"},"Type parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"Identifiers"))))),(0,a.kt)("h4",{id:"parameters-9"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"identifiers")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"Identifiers"))))),(0,a.kt)("h4",{id:"returns-16"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("h4",{id:"inherited-from-10"},"Inherited from"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/CorporateActionBase/"},"CorporateActionBase"),".",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/CorporateActionBase/#generateuuid"},"generateUuid")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"unserialize"},"unserialize"),(0,a.kt)("p",null,"\u25b8 ",(0,a.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,a.kt)("strong",{parentName:"p"},"unserialize"),"<",(0,a.kt)("inlineCode",{parentName:"p"},"Identifiers"),">","(",(0,a.kt)("inlineCode",{parentName:"p"},"serialized"),"): ",(0,a.kt)("inlineCode",{parentName:"p"},"Identifiers")),(0,a.kt)("p",null,"Unserialize a UUID into its Unique Identifiers"),(0,a.kt)("h4",{id:"type-parameters-1"},"Type parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"Identifiers"))))),(0,a.kt)("h4",{id:"parameters-10"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"serialized")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"string")),(0,a.kt)("td",{parentName:"tr",align:"left"},"UUID to unserialize")))),(0,a.kt)("h4",{id:"returns-17"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Identifiers")),(0,a.kt)("h4",{id:"inherited-from-11"},"Inherited from"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/CorporateActionBase/"},"CorporateActionBase"),".",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/CorporateActionBase/#unserialize"},"unserialize")))}m.isMDXComponent=!0}}]);