"use strict";(self.webpackChunkpolymesh_developer_documentation=self.webpackChunkpolymesh_developer_documentation||[]).push([[66354],{18065:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"core-concepts/assets/asset-metadata","title":"Asset Metadata","description":"Asset Metadata Management","source":"@site/docs/200-core-concepts/040-assets/040-metadata.md","sourceDirName":"200-core-concepts/040-assets","slug":"/core/assets/metadata","permalink":"/polymesh-documentation-site/core/assets/metadata","draft":false,"unlisted":false,"editUrl":"https://github.com/PolymeshAssociation/polymesh-documentation-site/edit/develop/docs/200-core-concepts/040-assets/040-metadata.md","tags":[{"inline":true,"label":"assets","permalink":"/polymesh-documentation-site/tags/assets"},{"inline":true,"label":"metadata","permalink":"/polymesh-documentation-site/tags/metadata"},{"inline":true,"label":"management","permalink":"/polymesh-documentation-site/tags/management"}],"version":"current","sidebarPosition":40,"frontMatter":{"title":"Asset Metadata","description":"Asset Metadata Management","id":"asset-metadata","slug":"/core/assets/metadata","sidebar_label":"Asset Metadata","tags":["assets","metadata","management"]},"sidebar":"docs","previous":{"title":"Confidential Assets","permalink":"/polymesh-documentation-site/core/assets/confidential"},"next":{"title":"Ownership Transfer","permalink":"/polymesh-documentation-site/core/assets/ownership-transfer"}}');var a=t(74848),i=t(28453);const l={title:"Asset Metadata",description:"Asset Metadata Management",id:"asset-metadata",slug:"/core/assets/metadata",sidebar_label:"Asset Metadata",tags:["assets","metadata","management"]},r=void 0,o={},d=[{value:"Overview",id:"overview",level:2},{value:"Common Use Cases",id:"common-use-cases",level:2},{value:"Metadata Types",id:"metadata-types",level:2},{value:"Local Metadata",id:"local-metadata",level:3},{value:"Global Metadata",id:"global-metadata",level:3},{value:"Structure",id:"structure",level:2},{value:"Metadata Management",id:"metadata-management",level:2},{value:"Registration and Usage",id:"registration-and-usage",level:3},{value:"Value Management",id:"value-management",level:3},{value:"NFT Collection Keys",id:"nft-collection-keys",level:3},{value:"Metadata Specifications",id:"metadata-specifications",level:2},{value:"Specification Components",id:"specification-components",level:3},{value:"Value Types",id:"value-types",level:3},{value:"Security and Access Control",id:"security-and-access-control",level:2},{value:"Locking Mechanisms",id:"locking-mechanisms",level:3},{value:"Access Control",id:"access-control",level:3}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,a.jsx)(n.p,{children:"Asset metadata provides a flexible and powerful way to associate additional information with assets on Polymesh. It enables storing both informational data and parameters that can drive automated business logic through smart contracts."}),"\n",(0,a.jsx)(n.h2,{id:"common-use-cases",children:"Common Use Cases"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Regulatory Information"}),": Store compliance and regulatory details"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Asset Classifications"}),": Define asset types and categories"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Investment Terms"}),": Document key investment parameters"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"External References"}),": Link to off-chain documentation"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Business Logic"}),": Enable smart contract automation"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"NFT Properties"}),": Define required properties for NFT collections"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Extended Asset Information"}),": Descriptions, issuer information etc."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"metadata-types",children:"Metadata Types"}),"\n",(0,a.jsx)(n.p,{children:"Polymesh supports two distinct categories of metadata:"}),"\n",(0,a.jsx)(n.h3,{id:"local-metadata",children:"Local Metadata"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Asset-specific metadata defined by issuers"}),"\n",(0,a.jsx)(n.li,{children:"Managed by the asset issuer or their authorized agents"}),"\n",(0,a.jsx)(n.li,{children:"Customizable per asset requirements"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"global-metadata",children:"Global Metadata"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Standardized metadata definitions usable across all assets"}),"\n",(0,a.jsx)(n.li,{children:"Defined through on-chain governance"}),"\n",(0,a.jsx)(n.li,{children:"Provide a consistent structure with asset-specific values"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:'For example, a global metadata key might define a standardized way to specify "Risk Rating", but each asset would still set its own individual risk rating value using this standardized format.'}),"\n",(0,a.jsx)(n.h2,{id:"structure",children:"Structure"}),"\n",(0,a.jsx)(n.p,{children:"Each metadata entry has the following properties:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Key"}),": A unique identifier within its scope (local or global)"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Name"}),": A human-readable identifier for the metadata field"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Value"}),": The actual data stored in the metadata field"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.a,{href:"#metadata-specifications",children:"Specifications"})})," (Optional): Information such as an external url, description and type definition"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Details"})," (Optional): Additional properties including expiry and lock status"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"metadata-management",children:"Metadata Management"}),"\n",(0,a.jsx)(n.h3,{id:"registration-and-usage",children:"Registration and Usage"}),"\n",(0,a.jsx)(n.p,{children:"There are several ways to register and use metadata keys:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Standard Two-Step Process"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["First register the metadata key using ",(0,a.jsx)(n.code,{children:"register_asset_metadata_local_type"})," (or ",(0,a.jsx)(n.code,{children:"register_asset_metadata_global_type"})," through the onchain governance process)"]}),"\n",(0,a.jsxs)(n.li,{children:["Then set the value using ",(0,a.jsx)(n.code,{children:"set_asset_metadata"})]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Combined Registration and Setting"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Use ",(0,a.jsx)(n.code,{children:"register_and_set_local_asset_metadata"})," to register a local metadata key and set its value in a single transaction"]}),"\n",(0,a.jsx)(n.li,{children:"This is more efficient for initial setup of asset/collection level metadata"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Batched Operations"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Use the utility batch function to combine multiple metadata operations in one transaction"}),"\n",(0,a.jsx)(n.li,{children:"Particularly useful when setting up multiple metadata keys for an NFT collection"}),"\n",(0,a.jsx)(n.li,{children:"Example: Register multiple collection keys and set their values in a single atomic transaction"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"value-management",children:"Value Management"}),"\n",(0,a.jsx)(n.p,{children:"Metadata values (not including NFT properties) can be:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Set when registering the metadata"}),"\n",(0,a.jsx)(n.li,{children:"Modified later (unless locked)"}),"\n",(0,a.jsx)(n.li,{children:"Cleared when no longer needed"}),"\n",(0,a.jsx)(n.li,{children:"Given an optional expiry date (informational only)"}),"\n",(0,a.jsx)(n.li,{children:"Protected through various locking options"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"nft-collection-keys",children:"NFT Collection Keys"}),"\n",(0,a.jsxs)(n.p,{children:["When creating an NFT collection, metadata keys serve as collection keys that define required properties for each NFT in the collection. Refer to the ",(0,a.jsx)(n.a,{href:"/core/assets/nft/#collection-metadata-keys",children:"Non-Fungible Assets"})," page for more details."]}),"\n",(0,a.jsx)(n.h2,{id:"metadata-specifications",children:"Metadata Specifications"}),"\n",(0,a.jsx)(n.p,{children:"The specification of each metadata entry is defined by the following optional properties that provide structure and context for the metadata values:"}),"\n",(0,a.jsx)(n.h3,{id:"specification-components",children:"Specification Components"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"URL Reference"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"External reference URL relating to the metadata"}),"\n",(0,a.jsx)(n.li,{children:"Can link to additional documentation or resources"}),"\n",(0,a.jsx)(n.li,{children:"Useful for providing more context about the metadata"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Description"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Human-readable description of the metadata's purpose"}),"\n",(0,a.jsx)(n.li,{children:"Explains what the metadata represents"}),"\n",(0,a.jsx)(n.li,{children:"Helps other parties understand the intended use"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Type Definition"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Defines the format and structure of valid values"}),"\n",(0,a.jsx)(n.li,{children:"Can specify SCALE encoding formats for complex data"}),"\n",(0,a.jsx)(n.li,{children:"Can be used for offchain validation of metadata values"}),"\n",(0,a.jsx)(n.li,{children:"Can be used to define a schema for smart contract use"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"value-types",children:"Value Types"}),"\n",(0,a.jsx)(n.p,{children:"Metadata values can be:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Simple Values"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Basic text strings for straightforward data"}),"\n",(0,a.jsx)(n.li,{children:"Human-readable information"}),"\n",(0,a.jsx)(n.li,{children:"Simple key-value pairs"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Complex Values"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"SCALE encoded data following the type definition"}),"\n",(0,a.jsx)(n.li,{children:"Structured data that can be validated"}),"\n",(0,a.jsx)(n.li,{children:"Machine-readable formats for automated processing"}),"\n",(0,a.jsx)(n.li,{children:"Custom schemas for specific use cases"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"security-and-access-control",children:"Security and Access Control"}),"\n",(0,a.jsx)(n.h3,{id:"locking-mechanisms",children:"Locking Mechanisms"}),"\n",(0,a.jsx)(n.p,{children:"Metadata entries support three lock states:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Unlocked"}),": Value can be freely modified"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Locked"}),": Value cannot be modified"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"LockedUntil"}),": Value locked until a specified date"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"access-control",children:"Access Control"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Only asset issuers or ",(0,a.jsx)(n.a,{href:"/asset-agents",children:"authorized agents"})," can modify local metadata"]}),"\n",(0,a.jsx)(n.li,{children:"Global metadata modifications require governance approval"}),"\n",(0,a.jsx)(n.li,{children:"Lock status can prevent modifications even by authorized parties"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>r});var s=t(96540);const a={},i=s.createContext(a);function l(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);