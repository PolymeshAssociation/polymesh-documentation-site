"use strict";(self.webpackChunkpolymesh_developer_documentation=self.webpackChunkpolymesh_developer_documentation||[]).push([[18340],{8043:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>a,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"api/procedures/types/interfaces/SetAssetRequirementsParams","title":"Interface: SetAssetRequirementsParams","description":"Defined in1277","source":"@site/sdk-docs_versioned_docs/version-v29.0.x/api/procedures/types/interfaces/SetAssetRequirementsParams.mdx","sourceDirName":"api/procedures/types/interfaces","slug":"/api/procedures/types/interfaces/SetAssetRequirementsParams","permalink":"/polymesh-documentation-site/sdk-docs/api/procedures/types/interfaces/SetAssetRequirementsParams","draft":false,"unlisted":false,"tags":[],"version":"v29.0.x","frontMatter":{"sidebar_label":"SetAssetRequirementsParams"},"sidebar":"defaultSidebar","previous":{"title":"SetAssetDocumentsParams","permalink":"/polymesh-documentation-site/sdk-docs/api/procedures/types/interfaces/SetAssetDocumentsParams"},"next":{"title":"SetClaimCountTransferRestrictionsParams","permalink":"/polymesh-documentation-site/sdk-docs/api/procedures/types/interfaces/SetClaimCountTransferRestrictionsParams"}}');var n=t(74848),i=t(28453);const a={sidebar_label:"SetAssetRequirementsParams"},o="Interface: SetAssetRequirementsParams",c={},d=[{value:"Properties",id:"properties",level:2},{value:"requirements",id:"requirements",level:3}];function p(e){const s={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"interface-setassetrequirementsparams",children:"Interface: SetAssetRequirementsParams"})}),"\n",(0,n.jsxs)(s.p,{children:["Defined in: ",(0,n.jsx)(s.a,{href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/bee6a2fe7a8ce5db42a6982e793782182cde2153/src/api/procedures/types.ts#L1277",children:"src/api/procedures/types.ts:1277"})]}),"\n",(0,n.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsx)(s.h3,{id:"requirements",children:"requirements"}),"\n",(0,n.jsxs)(s.blockquote,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"requirements"}),": ",(0,n.jsx)(s.a,{href:"/polymesh-documentation-site/sdk-docs/api/entities/types/type-aliases/InputCondition",children:(0,n.jsx)(s.code,{children:"InputCondition"})}),"[][]"]}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:["Defined in: ",(0,n.jsx)(s.a,{href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/bee6a2fe7a8ce5db42a6982e793782182cde2153/src/api/procedures/types.ts#L1282",children:"src/api/procedures/types.ts:1282"})]}),"\n",(0,n.jsxs)(s.p,{children:["array of array of conditions. For a transfer to be successful, it must comply with all the conditions of at least one of the arrays.\nIn other words, higher level arrays are ",(0,n.jsx)(s.em,{children:"OR"})," between them, while conditions inside each array are ",(0,n.jsx)(s.em,{children:"AND"})," between them"]})]})}function l(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>a,x:()=>o});var r=t(96540);const n={},i=r.createContext(n);function a(e){const s=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),r.createElement(i.Provider,{value:s},e.children)}}}]);