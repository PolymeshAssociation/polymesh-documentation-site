"use strict";(self.webpackChunkpolymesh_developer_documentation=self.webpackChunkpolymesh_developer_documentation||[]).push([[40168],{81696:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>f,frontMatter:()=>i,metadata:()=>s,toc:()=>r});var t=a(74848),c=a(28453);const i={sidebar_position:3,title:"Walkthrough - REST API",description:"",subsite:"polymesh-private-docs"},d=void 0,s={id:"polymesh-private/development-environment/walkthrough-rest-api",title:"Walkthrough - REST API",description:"",source:"@site/polymesh-docs/polymesh-private/development-environment/walkthrough-rest-api.md",sourceDirName:"polymesh-private/development-environment",slug:"/polymesh-private/development-environment/walkthrough-rest-api",permalink:"/polymesh-documentation-site/polymesh-docs/polymesh-private/development-environment/walkthrough-rest-api",draft:!1,unlisted:!1,editUrl:"https://github.com/PolymeshAssociation/polymesh-documentation-site/edit/develop/polymesh-docs/polymesh-private/development-environment/walkthrough-rest-api.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Walkthrough - REST API",description:"",subsite:"polymesh-private-docs"},sidebar:"defaultSidebar",previous:{title:"Developer Tooling",permalink:"/polymesh-documentation-site/polymesh-docs/polymesh-private/development-environment/tooling"}},o={},r=[{value:"Introduction",id:"introduction",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"1 Confidential Account Setup",id:"1-confidential-account-setup",level:2},{value:"1.1 Generate ElGamal Key Pair for the Sender",id:"11-generate-elgamal-key-pair-for-the-sender",level:3},{value:"1.2 Register Confidential Account for the Sender",id:"12-register-confidential-account-for-the-sender",level:3},{value:"1.3 Generate ElGamal Key Pair for the Receiver",id:"13-generate-elgamal-key-pair-for-the-receiver",level:3},{value:"1.4 Register Confidential Account for the Receiver",id:"14-register-confidential-account-for-the-receiver",level:3},{value:"1.5 Generate ElGamal Key Pair for the Mediator",id:"15-generate-elgamal-key-pair-for-the-mediator",level:3},{value:"1.6 Generate ElGamal Key Pair for the Auditor",id:"16-generate-elgamal-key-pair-for-the-auditor",level:3},{value:"2 Confidential Asset and Settlement Venue Creation",id:"2-confidential-asset-and-settlement-venue-creation",level:2},{value:"2.3 Initialises Confidential Asset Specifying Auditors and Mediators",id:"23-initialises-confidential-asset-specifying-auditors-and-mediators",level:3},{value:"2.5 Submits transaction to issue tokens, specifying the unencrypted amount and the Sender&#39;s Confidential Account to credit",id:"25-submits-transaction-to-issue-tokens-specifying-the-unencrypted-amount-and-the-senders-confidential-account-to-credit",level:3},{value:"2.8 Submits transaction to enable venue filtering (restrict permitted venues)",id:"28-submits-transaction-to-enable-venue-filtering-restrict-permitted-venues",level:3},{value:"2.9 Creates Confidential Venue",id:"29-creates-confidential-venue",level:3},{value:"2.12 Submits transaction to allow trading on the provided venue ID",id:"212-submits-transaction-to-allow-trading-on-the-provided-venue-id",level:3},{value:"Settlement Process",id:"settlement-process",level:2},{value:"3 Instruction Creation",id:"3-instruction-creation",level:3},{value:"3.7 Creates Confidential Asset settlement instruction including Asset ID, Sender, Receive and optional additional Auditors and Mediators - no amount is specified",id:"37-creates-confidential-asset-settlement-instruction-including-asset-id-sender-receive-and-optional-additional-auditors-and-mediators---no-amount-is-specified",level:4},{value:"4 Sender proof generation and affirmation",id:"4-sender-proof-generation-and-affirmation",level:3},{value:"4.2 Requests pending instructions",id:"42-requests-pending-instructions",level:4},{value:"4.4 Requests instruction details",id:"44-requests-instruction-details",level:4},{value:"4.6-13 Generate sender proof using current encrypted balance, amount to send and all required auditor and mediator confidential accounts. Submit proof to the chain",id:"46-13-generate-sender-proof-using-current-encrypted-balance-amount-to-send-and-all-required-auditor-and-mediator-confidential-accounts-submit-proof-to-the-chain",level:4},{value:"5 Receiver zero knowledge proof verification",id:"5-receiver-zero-knowledge-proof-verification",level:3},{value:"5.5 Query previously emitted instruction affirmation events to retrieve sender proof(s)",id:"55-query-previously-emitted-instruction-affirmation-events-to-retrieve-sender-proofs",level:4},{value:"5.6 Verify or decrypt sender proof using their confidential account to view the amount being sent",id:"56-verify-or-decrypt-sender-proof-using-their-confidential-account-to-view-the-amount-being-sent",level:4},{value:"6 Mediator zero knowledge proof verification",id:"6-mediator-zero-knowledge-proof-verification",level:3},{value:"6.5 Query previously emitted instruction affirmation events to retrieve sender proof(s)",id:"65-query-previously-emitted-instruction-affirmation-events-to-retrieve-sender-proofs",level:4},{value:"6.7 Query instruction leg details to determine the correct index of the mediators confidential account in the array of auditors",id:"67-query-instruction-leg-details-to-determine-the-correct-index-of-the-mediators-confidential-account-in-the-array-of-auditors",level:4},{value:"6.9 Verify or decrypt sender proof using their confidential account to view the amount being sent",id:"69-verify-or-decrypt-sender-proof-using-their-confidential-account-to-view-the-amount-being-sent",level:4},{value:"7 Auditor zero knowledge proof verification",id:"7-auditor-zero-knowledge-proof-verification",level:3},{value:"7.1 Query previously emitted instruction affirmation events to retrieve sender proof(s)",id:"71-query-previously-emitted-instruction-affirmation-events-to-retrieve-sender-proofs",level:4},{value:"7.3 Query instruction leg details to determine the correct index of the auditor confidential account in the array of auditors",id:"73-query-instruction-leg-details-to-determine-the-correct-index-of-the-auditor-confidential-account-in-the-array-of-auditors",level:4},{value:"7.5 Verify or decrypt sender proof using their confidential account to view the amount being sent",id:"75-verify-or-decrypt-sender-proof-using-their-confidential-account-to-view-the-amount-being-sent",level:4},{value:"8 Instruction Affirmation",id:"8-instruction-affirmation",level:3},{value:"8.1 Submit affirm transaction for Receiver providing instruction ID and leg ID(s)",id:"81-submit-affirm-transaction-for-receiver-providing-instruction-id-and-leg-ids",level:4},{value:"8.2 Submit affirm transaction for Mediator providing instruction ID and leg ID(s)",id:"82-submit-affirm-transaction-for-mediator-providing-instruction-id-and-leg-ids",level:4},{value:"8.3 Execute the settlement instruction providing instruction ID",id:"83-execute-the-settlement-instruction-providing-instruction-id",level:4},{value:"8.7 Check receiver has incoming balance",id:"87-check-receiver-has-incoming-balance",level:4},{value:"8.8 Apply receiver incoming balance to their current balance",id:"88-apply-receiver-incoming-balance-to-their-current-balance",level:4}];function l(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,t.jsxs)(n.p,{children:["This page provides code snippets and example responses for each ",(0,t.jsx)(n.a,{href:"/polymesh-documentation-site/polymesh-docs/polymesh-private/confidential-assets/diagrams",children:"sequence diagram"})," demonstrating how the various Confidential Assets related transactions can be executed utilizing the Polymesh Private REST API."]}),"\n",(0,t.jsx)(n.p,{children:"As some code relies on the output of previous steps the code snippets must be executed in the same order as they appear on this page. Environment variables are used to store intermediary values needed for later steps."}),"\n",(0,t.jsx)(n.p,{children:"The actors involved in these examples are:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Sender: this is the entity that creates and issues the Confidential Asset, and then transfers some tokens to the Receiver."}),"\n",(0,t.jsx)(n.li,{children:"Receiver: this is the entity that receives tokens of the Confidential Asset from the Sender."}),"\n",(0,t.jsx)(n.li,{children:"Auditor: this is the entity that receives an encrypted copy of the settlement instruction details between the Sender and Receiver."}),"\n",(0,t.jsx)(n.li,{children:"Mediator: this is the entity that, as well as receiving an encrypted copy of the settlement instruction details, also is required to affirm the settlement instruction."}),"\n",(0,t.jsx)(n.li,{children:"Venue Owner: this is the entity that, creates the settlement instructions."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsxs)(n.p,{children:["Ensure you have ",(0,t.jsx)(n.code,{children:"curl"})," and ",(0,t.jsx)(n.code,{children:"jq"})," installed."]}),"\n",(0,t.jsxs)(n.p,{children:["If you are using the ",(0,t.jsx)(n.a,{href:"/polymesh-documentation-site/polymesh-docs/polymesh-private/development-environment/overview",children:"Polymesh Private Development Environment"}),", you can run the examples without additional steps."]}),"\n",(0,t.jsxs)(n.p,{children:["The examples use the Polymesh Private Rest API, as detailed ",(0,t.jsx)(n.a,{href:"/polymesh-documentation-site/polymesh-docs/polymesh-private/development-environment/tooling#usage-via-polymesh-rest-api",children:"here"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"/polymesh-documentation-site/polymesh-docs/polymesh-private/development-environment/overview",children:"Development Environment"})," includes initial setup of the external signing manager and keys which are used in these examples."]}),"\n",(0,t.jsx)(n.p,{children:"You can check if the Polymesh Private Development Environment has finished initialization as follows:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"docker compose logs polymesh-private-rest-api-init\n"})}),"\n",(0,t.jsx)(n.p,{children:"Example response:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"(...)\npolymesh-private-rest-api-init-1  | Venue_Owner DiD: 0x74ad11e9f627b7dbc0fa7177b1d8fa5c7897d002a20e7d38665b54b64c48cb07\npolymesh-private-rest-api-init-1  | Setup has been completed\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The last line should indicate either ",(0,t.jsx)(n.em,{children:"Setup has been completed"})," or ",(0,t.jsx)(n.em,{children:"Setup has already been completed"}),"."]}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["The developer environment hosts Swagger documentation for the REST API, providing insights into the transactions used in the following walkthroughs. The REST API is typically at ",(0,t.jsx)(n.a,{href:"http://localhost:3001",children:"http://localhost:3001"})," by default when running."]})}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["To view on-chain events emitted, visit ",(0,t.jsx)(n.a,{href:"https://testnet-app.polymesh.live/?rpc=ws%3A%2F%2Flocalhost%3A9944#/explorer",children:"https://testnet-app.polymesh.live"}),". This link connects to the default Polymesh Private Developer Environment node via websocket at ",(0,t.jsx)(n.code,{children:"ws://localhost:9944"}),". Note that the UI displays events emitted after it's opened, so ensure it's active before submitting transactions."]})}),"\n",(0,t.jsx)(n.h2,{id:"1-confidential-account-setup",children:"1 Confidential Account Setup"}),"\n",(0,t.jsxs)(n.p,{children:["Refer to the Confidential Account Setup sequence diagram ",(0,t.jsx)(n.a,{href:"/polymesh-documentation-site/polymesh-docs/polymesh-private/confidential-assets/diagrams#1-confidential-account-setup",children:"here"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Make sure you are in the folder with the ",(0,t.jsx)(n.a,{href:"https://github.com/PolymeshAssociation/polymesh-private-dev-env/blob/main/compose.yaml",children:"compose"})," file."]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"/polymesh-documentation-site/polymesh-docs/polymesh-private/development-environment/overview",children:"Development Environment"})," creates a signing key and DID for the Mediator used in the below examples, so we extract that to an environment variable first."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"export MEDIATOR_DID=$(docker compose logs polymesh-private-rest-api-init | grep \"Mediator DiD\" | sed -n -e 's/^.*Mediator DiD: //p')\n"})}),"\n",(0,t.jsxs)(n.p,{children:["You also need to know the addresses of Polymesh Private Rest API and the indexer GraphQL endpoint., below we use defaults from the ",(0,t.jsx)(n.a,{href:"/polymesh-documentation-site/polymesh-docs/polymesh-private/development-environment/overview",children:"Development Environment"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"export PP_REST_API=http://localhost:3001\nexport PP_GRAPHQL=http://localhost:3000\n"})}),"\n",(0,t.jsx)(n.p,{children:"In the next steps we generate ElGamal key pairs for the asset sender, receiver, mediator and auditor. For the sender and receiver their ElGamal public key is registered to their on-chain DID."}),"\n",(0,t.jsx)(n.h3,{id:"11-generate-elgamal-key-pair-for-the-sender",children:"1.1 Generate ElGamal Key Pair for the Sender"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"export RESPONSE_1_1=$(curl --silent --request 'POST' \\\n  ''\"$PP_REST_API\"'/confidential-accounts/create' \\\n  -H 'accept: application/json')\n\nexport SENDER_CONFIDENTIAL_ACCOUNT=$(echo $RESPONSE_1_1 | jq -r .publicKey)\n\necho $RESPONSE_1_1 | jq\n"})}),"\n",(0,t.jsx)(n.p,{children:"Example response:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "publicKey": "0x946e47f48687340014839988255eb4a925ea90308b847ade04e0ab1f1ab92152"\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"12-register-confidential-account-for-the-sender",children:"1.2 Register Confidential Account for the Sender"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"export RESPONSE_1_2=$(curl --silent --request 'POST' \\\n  ''\"$PP_REST_API\"'/confidential-accounts/'\"$SENDER_CONFIDENTIAL_ACCOUNT\"'/link' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"options\": {\n    \"signer\": \"sender-1\",\n    \"processMode\": \"submit\"\n  }\n}')\n\necho $RESPONSE_1_2 | jq\n"})}),"\n",(0,t.jsx)(n.p,{children:"Example response:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "transactions": [\n    {\n      "blockHash": "0x1bba0d5da5b4128a0097f63a4b7cc14b10b90a368b74644c76b45481fc80752b",\n      "transactionHash": "0x7a690d7456ce677bb6e8891a0e8164196be5ec2ff5a912852711c856b4108596",\n      "blockNumber": "179",\n      "type": "single",\n      "transactionTag": "confidentialAsset.createAccount"\n    }\n  ],\n  "details": {\n    "status": "Succeeded",\n    "fees": {\n      "protocol": "0",\n      "gas": "0.083286",\n      "total": "0.083286"\n    },\n    "supportsSubsidy": false,\n    "payingAccount": {\n      "balance": "100000",\n      "type": "Caller",\n      "address": "5CHsus2r3ADdRsCaX6jMtpeyvHPpM6SrDwb5caG56d6RxwtP"\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"13-generate-elgamal-key-pair-for-the-receiver",children:"1.3 Generate ElGamal Key Pair for the Receiver"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"export RESPONSE_1_3=$(curl --silent --request 'POST' \\\n  ''\"$PP_REST_API\"'/confidential-accounts/create' \\\n  -H 'accept: application/json')\n\nexport RECEIVER_CONFIDENTIAL_ACCOUNT=$(echo $RESPONSE_1_3 | jq -r .publicKey)\n\necho $RESPONSE_1_3 | jq\n"})}),"\n",(0,t.jsx)(n.p,{children:"Example response:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "publicKey": "0x2eaf27421aecd0c7ba91382728b62e6083c1185c9ed50ea79307e3409eae025a"\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"14-register-confidential-account-for-the-receiver",children:"1.4 Register Confidential Account for the Receiver"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"export RESPONSE_1_4=$(curl --silent --request 'POST' \\\n  ''\"$PP_REST_API\"'/confidential-accounts/'\"$RECEIVER_CONFIDENTIAL_ACCOUNT\"'/link' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"options\": {\n    \"signer\": \"receiver-1\",\n    \"processMode\": \"submit\"\n  }\n}')\n\necho $RESPONSE_1_4 | jq\n"})}),"\n",(0,t.jsx)(n.p,{children:"Example response:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "transactions": [\n    {\n      "blockHash": "0x7320b7c92ffbda01ede526eb67d90ea4ea86f316957b037a973a7cef24f58b88",\n      "transactionHash": "0x0462aabe8588c239fa1a3cf3a455dddc69c718355201718f91c7b39a632fb49f",\n      "blockNumber": "317",\n      "type": "single",\n      "transactionTag": "confidentialAsset.createAccount"\n    }\n  ],\n  "details": {\n    "status": "Succeeded",\n    "fees": {\n      "protocol": "0",\n      "gas": "0.083286",\n      "total": "0.083286"\n    },\n    "supportsSubsidy": false,\n    "payingAccount": {\n      "balance": "100000",\n      "type": "Caller",\n      "address": "5Cty5Njqs7faujv6T6PnbNexHyPqC1nqNW7DJ4BcJZumkRFW"\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"15-generate-elgamal-key-pair-for-the-mediator",children:"1.5 Generate ElGamal Key Pair for the Mediator"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"export RESPONSE_1_5=$(curl --silent --request 'POST' \\\n  ''\"$PP_REST_API\"'/confidential-accounts/create' \\\n  -H 'accept: application/json')\n\nexport MEDIATOR_CONFIDENTIAL_ACCOUNT=$(echo $RESPONSE_1_5 | jq -r .publicKey)\n\necho $RESPONSE_1_5 | jq\n"})}),"\n",(0,t.jsx)(n.p,{children:"Example response:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "publicKey": "0x0e673548186e8d7cc078ba247c2ef3a38476c4870dfaab28a2304615c7a9a16d"\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"16-generate-elgamal-key-pair-for-the-auditor",children:"1.6 Generate ElGamal Key Pair for the Auditor"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"export RESPONSE_1_6=$(curl --silent --request 'POST' \\\n  ''\"$PP_REST_API\"'/confidential-accounts/create' \\\n  -H 'accept: application/json')\n\nexport AUDITOR_CONFIDENTIAL_ACCOUNT=$(echo $RESPONSE_1_6 | jq -r .publicKey)\n\necho $RESPONSE_1_6 | jq\n"})}),"\n",(0,t.jsx)(n.p,{children:"Example response:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "publicKey": "0x4ec9aae087d1cf0b4ecb7d30367988ddd32d4e14e801db01605b0a0240d70201"\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"2-confidential-asset-and-settlement-venue-creation",children:"2 Confidential Asset and Settlement Venue Creation"}),"\n",(0,t.jsxs)(n.p,{children:["The sequence diagram associated with the following steps can be found ",(0,t.jsx)(n.a,{href:"/polymesh-documentation-site/polymesh-docs/polymesh-private/confidential-assets/diagrams#2-confidential-asset-and-settlement-venue-creation",children:"here"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"23-initialises-confidential-asset-specifying-auditors-and-mediators",children:"2.3 Initialises Confidential Asset Specifying Auditors and Mediators"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'export RESPONSE_2_3=$(curl --silent --request \'POST\' \\\n  \'\'"$PP_REST_API"\'/confidential-assets/create\' \\\n  -H \'accept: application/json\' \\\n  -H \'Content-Type: application/json\' \\\n  -d \'{\n  "options": {\n    "signer": "sender-1",\n    "processMode": "submit"\n  },\n  "data": "Some Random Data",\n  "auditors": [\n    "\'"$AUDITOR_CONFIDENTIAL_ACCOUNT"\'",\n    "\'"$MEDIATOR_CONFIDENTIAL_ACCOUNT"\'"\n  ],\n  "mediators": [\n    "\'"$MEDIATOR_DID"\'"\n  ]\n}\')\n\nexport CONFIDENTIAL_ASSET_ID=$(echo $RESPONSE_2_3 | jq -r .confidentialAsset)\n\necho $RESPONSE_2_3 | jq\n'})}),"\n",(0,t.jsx)(n.p,{children:"Example response:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "transactions": [\n    {\n      "blockHash": "0x95e446de14beb72d46005ffb736d5b6f26381841d37d6b771b9bc3e5aa38bc88",\n      "transactionHash": "0x519df8836af474fa802589cc3642c83d08f0d9c66ff07e76b9848a49d668bb78",\n      "blockNumber": "434",\n      "type": "single",\n      "transactionTag": "confidentialAsset.createAsset"\n    }\n  ],\n  "details": {\n    "status": "Succeeded",\n    "fees": {\n      "protocol": "0",\n      "gas": "0.088817",\n      "total": "0.088817"\n    },\n    "supportsSubsidy": false,\n    "payingAccount": {\n      "balance": "99999.916714",\n      "type": "Caller",\n      "address": "5CHsus2r3ADdRsCaX6jMtpeyvHPpM6SrDwb5caG56d6RxwtP"\n    }\n  },\n  "confidentialAsset": "35f2d907-72b6-5a56-5351-124987913aea"\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"25-submits-transaction-to-issue-tokens-specifying-the-unencrypted-amount-and-the-senders-confidential-account-to-credit",children:"2.5 Submits transaction to issue tokens, specifying the unencrypted amount and the Sender's Confidential Account to credit"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'export RESPONSE_2_5=$(curl --silent --request \'POST\' \\\n  \'\'"$PP_REST_API"\'/confidential-assets/\'"$CONFIDENTIAL_ASSET_ID"\'/issue\' \\\n  -H \'accept: application/json\' \\\n  -H \'Content-Type: application/json\' \\\n  -d \'{\n  "options": {\n    "signer": "sender-1",\n    "processMode": "submit"\n  },\n  "amount": "10000",\n  "confidentialAccount": "\'"$SENDER_CONFIDENTIAL_ACCOUNT"\'"\n}\')\n\necho $RESPONSE_2_5 | jq\n'})}),"\n",(0,t.jsx)(n.p,{children:"Example response:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "transactions": [\n    {\n      "blockHash": "0xd6a5463382e4fc613018c24d643a292b0ed3df2ade96b279be467fd023e2a9da",\n      "transactionHash": "0x05193e6f4b158ebb85e65ac81d6bd062d5b7df60761c46d1b8414c04f40c3f40",\n      "blockNumber": "978",\n      "type": "single",\n      "transactionTag": "confidentialAsset.mint"\n    }\n  ],\n  "details": {\n    "status": "Succeeded",\n    "fees": {\n      "protocol": "0",\n      "gas": "0.111805",\n      "total": "0.111805"\n    },\n    "supportsSubsidy": false,\n    "payingAccount": {\n      "balance": "99999.827897",\n      "type": "Caller",\n      "address": "5CHsus2r3ADdRsCaX6jMtpeyvHPpM6SrDwb5caG56d6RxwtP"\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"28-submits-transaction-to-enable-venue-filtering-restrict-permitted-venues",children:"2.8 Submits transaction to enable venue filtering (restrict permitted venues)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'export RESPONSE_2_8=$(curl --silent --request \'POST\' \\\n  \'\'"$PP_REST_API"\'/confidential-assets/\'"$CONFIDENTIAL_ASSET_ID"\'/venue-filtering\' \\\n  -H \'accept: application/json\' \\\n  -H \'Content-Type: application/json\' \\\n  -d \'{\n  "options": {\n    "signer": "sender-1",\n    "processMode": "submit"\n  },\n  "enabled": true\n}\')\n\necho $RESPONSE_2_8 | jq\n'})}),"\n",(0,t.jsx)(n.p,{children:"Example response:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "transactions": [\n    {\n      "blockHash": "0xf37f03ee5b55fb51bc39f98cffa3dfc467696e3f6b0575b7aea088c8a10147b8",\n      "transactionHash": "0x0f3eff847da0e8a53308d534e8a82ebf1a44d2fb04d3d57fd316c0a3ab5e71c3",\n      "blockNumber": "1017",\n      "type": "single",\n      "transactionTag": "confidentialAsset.setVenueFiltering"\n    }\n  ],\n  "details": {\n    "status": "Succeeded",\n    "fees": {\n      "protocol": "0",\n      "gas": "0.056528",\n      "total": "0.056528"\n    },\n    "supportsSubsidy": false,\n    "payingAccount": {\n      "balance": "99999.716092",\n      "type": "Caller",\n      "address": "5CHsus2r3ADdRsCaX6jMtpeyvHPpM6SrDwb5caG56d6RxwtP"\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"29-creates-confidential-venue",children:"2.9 Creates Confidential Venue"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"export RESPONSE_2_9=$(curl --silent --request 'POST' \\\n  ''\"$PP_REST_API\"'/confidential-venues/create' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"options\": {\n    \"signer\": \"venue-owner-1\",\n    \"processMode\": \"submit\"\n  }\n}')\n\nexport VENUE_ID=$(echo $RESPONSE_2_9 | jq -r .confidentialVenue)\n\necho $RESPONSE_2_9 | jq\n"})}),"\n",(0,t.jsx)(n.p,{children:"Example response:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "transactions": [\n    {\n      "blockHash": "0xba9586bbafbd584e8185efb1094ed0b1884ce87be56929ebe228fbf4271bd7b1",\n      "transactionHash": "0x86acb6dcc26ca0f1bdf57c9e643d24e0572acec907c8c921adbe3f6ff0c9ee7b",\n      "blockNumber": "1039",\n      "type": "single",\n      "transactionTag": "confidentialAsset.createVenue"\n    }\n  ],\n  "details": {\n    "status": "Succeeded",\n    "fees": {\n      "protocol": "0",\n      "gas": "0.077635",\n      "total": "0.077635"\n    },\n    "supportsSubsidy": false,\n    "payingAccount": {\n      "balance": "100000",\n      "type": "Caller",\n      "address": "5EwoR8pwEmP5LTo7P58khFQMPs79oxx84WG5uucVg21cgtkZ"\n    }\n  },\n  "confidentialVenue": "1"\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"212-submits-transaction-to-allow-trading-on-the-provided-venue-id",children:"2.12 Submits transaction to allow trading on the provided venue ID"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'export RESPONSE_2_12=$(curl --silent --request \'POST\' \\\n  \'\'"$PP_REST_API"\'/confidential-assets/\'"$CONFIDENTIAL_ASSET_ID"\'/venue-filtering/add-allowed-venues\' \\\n  -H \'accept: application/json\' \\\n  -H \'Content-Type: application/json\' \\\n  -d \'{\n  "options": {\n    "signer": "sender-1",\n    "processMode": "submit"\n  },\n  "confidentialVenues": [\n    "\'"$VENUE_ID"\'"\n  ]\n}\')\n\necho $RESPONSE_2_12 | jq\n'})}),"\n",(0,t.jsx)(n.p,{children:"Example response:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "transactions": [\n    {\n      "blockHash": "0x614d18868d492084b93e0d3b26826415848ccdaf7a0476ef4e9c56254ac6cf4a",\n      "transactionHash": "0x62416496e394bd627cf465a93a482c7be806260e5dce4dcaeed3b7e2ea5c00aa",\n      "blockNumber": "1086",\n      "type": "single",\n      "transactionTag": "confidentialAsset.allowVenues"\n    }\n  ],\n  "details": {\n    "status": "Succeeded",\n    "fees": {\n      "protocol": "0",\n      "gas": "0.060476",\n      "total": "0.060476"\n    },\n    "supportsSubsidy": false,\n    "payingAccount": {\n      "balance": "99999.659564",\n      "type": "Caller",\n      "address": "5CHsus2r3ADdRsCaX6jMtpeyvHPpM6SrDwb5caG56d6RxwtP"\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"settlement-process",children:"Settlement Process"}),"\n",(0,t.jsx)(n.h3,{id:"3-instruction-creation",children:"3 Instruction Creation"}),"\n",(0,t.jsxs)(n.p,{children:["The sequence diagram associated with the following steps can be found ",(0,t.jsx)(n.a,{href:"/polymesh-documentation-site/polymesh-docs/polymesh-private/confidential-assets/diagrams#3-instruction-creation",children:"here"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"37-creates-confidential-asset-settlement-instruction-including-asset-id-sender-receive-and-optional-additional-auditors-and-mediators---no-amount-is-specified",children:"3.7 Creates Confidential Asset settlement instruction including Asset ID, Sender, Receive and optional additional Auditors and Mediators - no amount is specified"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'export RESPONSE_3_7=$(curl --silent --request \'POST\' \\\n  \'\'"$PP_REST_API"\'/confidential-venues/\'"$VENUE_ID"\'/transactions/create\' \\\n  -H \'accept: application/json\' \\\n  -H \'Content-Type: application/json\' \\\n  -d \'{\n  "options": {\n    "signer": "venue-owner-1",\n    "processMode": "submit"\n  },\n  "legs": [\n    {\n      "assets": [\n        "\'"$CONFIDENTIAL_ASSET_ID"\'"\n      ],\n      "sender": "\'"$SENDER_CONFIDENTIAL_ACCOUNT"\'",\n      "receiver": "\'"$RECEIVER_CONFIDENTIAL_ACCOUNT"\'",\n      "auditors": [\n      ],\n      "mediators": [\n      ]\n    }\n  ],\n  "memo": "Transfer of ACME Asset"\n}\')\n\necho $RESPONSE_3_7 | jq\n'})}),"\n",(0,t.jsx)(n.p,{children:"Example response:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "transactions": [\n    {\n      "blockHash": "0x803ffa27d57ae15479aae6e41860fbbe87627834f70765772bde023cab6ef9d3",\n      "transactionHash": "0x28c4c1515002d301c0bf40864314dab961769704f0ed11a7b2e9b64a2a966944",\n      "blockNumber": "1163",\n      "type": "single",\n      "transactionTag": "confidentialAsset.addTransaction"\n    }\n  ],\n  "details": {\n    "status": "Succeeded",\n    "fees": {\n      "protocol": "0",\n      "gas": "0.563099",\n      "total": "0.563099"\n    },\n    "supportsSubsidy": false,\n    "payingAccount": {\n      "balance": "99999.922365",\n      "type": "Caller",\n      "address": "5EwoR8pwEmP5LTo7P58khFQMPs79oxx84WG5uucVg21cgtkZ"\n    }\n  },\n  "confidentialTransaction": "1"\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"4-sender-proof-generation-and-affirmation",children:"4 Sender proof generation and affirmation"}),"\n",(0,t.jsxs)(n.p,{children:["The sequence diagram associated with the following steps can be found ",(0,t.jsx)(n.a,{href:"/polymesh-documentation-site/polymesh-docs/polymesh-private/confidential-assets/diagrams#4-sender-proof-generation-and-affirmation",children:"here"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"42-requests-pending-instructions",children:"4.2 Requests pending instructions"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"export RESPONSE_4_2=$(curl --silent --request 'GET' \\\n  ''\"$PP_REST_API\"'/confidential-accounts/'\"$SENDER_CONFIDENTIAL_ACCOUNT\"'/associated-transactions?direction=Outgoing' \\\n  -H 'accept: application/json')\n\n# For this example we will just take the first instruction\nexport CONFIDENTIAL_TRANSACTION_ID=$(echo $RESPONSE_4_2 | jq -r '.results[0]')\n\necho $RESPONSE_4_2 | jq\n"})}),"\n",(0,t.jsx)(n.p,{children:"Example response:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "results": ["1"],\n  "total": "1"\n}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"44-requests-instruction-details",children:"4.4 Requests instruction details"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"export RESPONSE_4_4=$(curl --silent --request 'GET' \\\n  ''\"$PP_REST_API\"'/confidential-transactions/'\"$CONFIDENTIAL_TRANSACTION_ID\"'' \\\n  -H 'accept: application/json')\n\n# For this example we just use the first leg for simplicity\nexport LEG_ID=$(echo $RESPONSE_4_4 | jq -r '.legs[0].id')\n\necho $RESPONSE_4_4 | jq\n"})}),"\n",(0,t.jsx)(n.p,{children:"Example response:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "id": "1",\n  "venueId": "1",\n  "memo": "Transfer of ACME Asset",\n  "status": "Pending",\n  "createdAt": "1970-01-01T00:00:01.163Z",\n  "legs": [\n    {\n      "id": "0",\n      "sender": {\n        "publicKey": "0x946e47f48687340014839988255eb4a925ea90308b847ade04e0ab1f1ab92152"\n      },\n      "receiver": {\n        "publicKey": "0x2eaf27421aecd0c7ba91382728b62e6083c1185c9ed50ea79307e3409eae025a"\n      },\n      "mediators": [\n        {\n          "did": "0x25c8feea244481af359313276fe44540d93d22e1cff4facd18a618cd86ecbd2a"\n        }\n      ],\n      "assetAuditors": [\n        {\n          "asset": {\n            "id": "35f2d907-72b6-5a56-5351-124987913aea"\n          },\n          "auditors": [\n            {\n              "publicKey": "0x0e673548186e8d7cc078ba247c2ef3a38476c4870dfaab28a2304615c7a9a16d"\n            },\n            {\n              "publicKey": "0x4ec9aae087d1cf0b4ecb7d30367988ddd32d4e14e801db01605b0a0240d70201"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"46-13-generate-sender-proof-using-current-encrypted-balance-amount-to-send-and-all-required-auditor-and-mediator-confidential-accounts-submit-proof-to-the-chain",children:"4.6-13 Generate sender proof using current encrypted balance, amount to send and all required auditor and mediator confidential accounts. Submit proof to the chain"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'export RESPONSE_4_12=$(curl --silent --request \'POST\' \\\n  \'\'"$PP_REST_API"\'/confidential-transactions/\'"$CONFIDENTIAL_TRANSACTION_ID"\'/affirm-leg/sender\' \\\n  -H \'accept: application/json\' \\\n  -H \'Content-Type: application/json\' \\\n  -d \'{\n  "options": {\n    "signer": "sender-1",\n    "processMode": "submit"\n  },\n  "legId": "\'"$LEG_ID"\'",\n  "legAmounts": [\n    {\n      "confidentialAsset": "\'"$CONFIDENTIAL_ASSET_ID"\'",\n      "amount": "1000"\n    }\n  ]\n}\')\n\necho $RESPONSE_4_12 | jq\n'})}),"\n",(0,t.jsx)(n.p,{children:"Example response:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "transactions": [\n    {\n      "blockHash": "0x8eb237e52ff5962f59b160a8b0ab2e5296e3e91bddb54724f8b8e1d61318cb76",\n      "transactionHash": "0x61a04ded6e8164d261b91cca2f1a640e3214551bd31b35ddee0a62d5f21d843d",\n      "blockNumber": "1364",\n      "type": "single",\n      "transactionTag": "confidentialAsset.affirmTransactions"\n    }\n  ],\n  "details": {\n    "status": "Succeeded",\n    "fees": {\n      "protocol": "0",\n      "gas": "0.540327",\n      "total": "0.540327"\n    },\n    "supportsSubsidy": false,\n    "payingAccount": {\n      "balance": "99999.599088",\n      "type": "Caller",\n      "address": "5CHsus2r3ADdRsCaX6jMtpeyvHPpM6SrDwb5caG56d6RxwtP"\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"5-receiver-zero-knowledge-proof-verification",children:"5 Receiver zero knowledge proof verification"}),"\n",(0,t.jsxs)(n.p,{children:["The sequence diagram associated with the following steps can be found ",(0,t.jsx)(n.a,{href:"/polymesh-documentation-site/polymesh-docs/polymesh-private/confidential-assets/diagrams#5-receiver-zero-knowledge-proof-verification",children:"here"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"55-query-previously-emitted-instruction-affirmation-events-to-retrieve-sender-proofs",children:"5.5 Query previously emitted instruction affirmation events to retrieve sender proof(s)"}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:["The next step is querying the ",(0,t.jsx)(n.strong,{children:"GraphQL"})," endpoint to retrieve information"]})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"export RESPONSE_5_5=$(curl --silent ''\"$PP_GRAPHQL\"'' \\\n    --header 'Accept-Encoding: gzip, deflate, br' \\\n    --header 'Content-Type: application/json' \\\n    --header 'Accept: application/json' \\\n    --header 'Connection: keep-alive' \\\n    --data-binary '{\"query\":\"query cta {confidentialTransactionAffirmations(filter:{transactionId:{equalTo:\\\"'\"$CONFIDENTIAL_TRANSACTION_ID\"'\\\"},legId:{equalTo:'\"$LEG_ID\"'},party:{equalTo:Sender}}){nodes{transactionId,id,proofs,accountId,identityId,party,legId}}}\"}' \\\n    --compressed)\n\nexport SENDER_PROOF_5_5=$(echo $RESPONSE_5_5 | jq -r '.data.confidentialTransactionAffirmations.nodes[0].proofs[0].proof')\n\necho $RESPONSE_5_5 | jq\n"})}),"\n",(0,t.jsx)(n.p,{children:"Example response:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "data": {\n    "confidentialTransactionAffirmations": {\n      "nodes": [\n        {\n          "transactionId": "1",\n          "id": "1/Sender/0xbf84839e6bc8ad6fe969f560895663fdd2c175b40c9ab3ca63df9fd7010b64f8",\n          "proofs": [\n            {\n              "proof": "0x1004f1e8f24f21c51c9ea8ade48e370d9817eb6651ace219d3dc28dd9d07359b56f05a8c0ab21bc5596d77ea1e5cf88d25dc85986693ac7d1a9fe3f1e6c1671f6f7603df4f786d7f97accc16a4fb4b89d823a935dce7d38066f98c01e10ecb5806da780642af9abe518833dc0d22df8cb63d1d1b65c75c200017c83e07628f884fbc20316152b908be989155f7d74e6ba568b87c566a2851345d97dddf279449058d11109adb6007a43ccdd3d951653072a753b50934e91f86891edfe4c8fc516b2caa3be202dd562a5a1167a57b26de3f0f81277805b3865df82c846fab025da47f2712304def158f95ebeaf443229660ba97fb2f554637307d9f9aa5a335c0a5860a7558ecdb0b1e6f866c67c3585facb776e94870c211c03ada6741b844c6a258790242888271dc10ddcf375fcd952b4d57c42239421d4f6c2e5098087be33b5f0a47ac9bceed4df69ac63d7bc1882304d5a0cd9fc232c3bb5c0b0fd857394a334900ec9f43ffd88002ae51cf7279c005a3a21bd051e76d44ecfe079d65657da87f01544914ba4b72345652526d6a4cb8f85a6a70e644baf857d199d39b0bd6fca15eca59f01960bac31ef77d523b102b048a22322da5ebb4edb518285c5a0d9a181482b411b6bb56ce97741156e3ae64654e98d0ecdd4a9d9595dd2bc64eab793238c079d020c8859f551a93e7d1b0c382dac80bc99c2ed9265e628615e44187cf52055af6d8d7c43a1dc121340a82357dfe1af4a4652d645630749199efdcd06707810bda8bc3f2f42f1f30ac01639de25739b48672f3cc6772515036a6c1a00c7f45550ab930e39cea9932bfd2fad7c33e0cca27c0ef147d1ce8ef0b324b5df125a86db41c0272daa7b25a841e68daedd0ed99269c10d2c4a828c865f9409d5171e570d04205ed8e41702c2158284a4faaedc00c484374f62fb9e9ac802d386cca6b1830b6cc140cef84b1c614455b73ede66d7b054255b7d7e4e9b5b1025cc0f5a5086c3edfd9d552475b1a0c0e459214b8d00647c7bd6b09c1d856cfdf66133dbf0bce30429a139cb98885a31cafd782525b415871d2912ff8df0fe29e0ea2d4e7011c205f5fe16e09a4eb35e3ef4d75c11e3af5d38e752c31dabbbd9700bbd71058d6fe09ad7f28490189eb8ead7fb2780d3fe27cc526c51f8cdca896fd0bb75c770863c0e73d1e61c45073cf8f7af086071af8eabc0588681cbfc23d8a861383771cd1a8d03471059ae4e964ba9655fc6c07b6e9d72b8b6c22389b07171f36690e9aba8c1c8147cb4bb74b5bbe8aed7f1ca2e8670f6e3c6427111eabdbd9d59477fc93dfd5a284f2b5d90bbdfd8c6727790e94c83a60103d1a59f373c52b970815806598e516a8dd841c207884f15939dbc96b719179460409879c2813dc3c116e840fce3abb725e2d90f1f18c4e75a34e31d8c8b128178c1cf14212d4f0462b435c1538f9ac45b2f7f6acc663d319476a6bf810d46b0fa3fdeb93a6df83145c31c0d51c9bf43f028c2f5e0c2387bb26ff7e2655621797540034bacfa81e33177ffa2cd21c6a9c6414087f6a36c9f42b7ee2375499dba71c715c9a05edb684ba4afae5ecff26d547cae075fc0ce8a09043d9443111019b4cac3ca5b5b5c96dec7068abc08fe9c31e8ae49cd61181d810530d6d43c630e71c192cb2c869e7aba5799050072f4feccaf028d7329eaffa89aefbc06cd4ae1337882286827c33ce952f4d913f571b998d1ad662bccae070768f47130110a31a768177f0d2795b821d0552a4293f75efcb760b3fb69160003d718ced0d0001f029f22a065634276c1d00",\n              "assetId": "0x35f2d90772b65a565351124987913aea"\n            }\n          ],\n          "accountId": null,\n          "identityId": "0xbf84839e6bc8ad6fe969f560895663fdd2c175b40c9ab3ca63df9fd7010b64f8",\n          "party": "Sender",\n          "legId": 0\n        }\n      ]\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"56-verify-or-decrypt-sender-proof-using-their-confidential-account-to-view-the-amount-being-sent",children:"5.6 Verify or decrypt sender proof using their confidential account to view the amount being sent"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"export RESPONSE_5_6=$(curl --silent --request 'POST' \\\n  ''\"$PP_REST_API\"'/confidential-accounts/'\"$RECEIVER_CONFIDENTIAL_ACCOUNT\"'/receiver-verify' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"senderProof\": \"'\"$SENDER_PROOF_5_5\"'\"\n}')\n\necho $RESPONSE_5_6 | jq\n"})}),"\n",(0,t.jsx)(n.p,{children:"Example response:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "isValid": true,\n  "amount": "1000",\n  "errMsg": null\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"6-mediator-zero-knowledge-proof-verification",children:"6 Mediator zero knowledge proof verification"}),"\n",(0,t.jsxs)(n.p,{children:["The sequence diagram associated with the following steps can be found ",(0,t.jsx)(n.a,{href:"/polymesh-documentation-site/polymesh-docs/polymesh-private/confidential-assets/diagrams#6-mediator-zero-knowledge-proof-verification",children:"here"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"65-query-previously-emitted-instruction-affirmation-events-to-retrieve-sender-proofs",children:"6.5 Query previously emitted instruction affirmation events to retrieve sender proof(s)"}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:["The next step is querying the ",(0,t.jsx)(n.strong,{children:"GraphQL"})," endpoint to retrieve information"]})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"export RESPONSE_6_5=$(curl --silent ''\"$PP_GRAPHQL\"'' \\\n    --header 'Accept-Encoding: gzip, deflate, br' \\\n    --header 'Content-Type: application/json' \\\n    --header 'Accept: application/json' \\\n    --header 'Connection: keep-alive' \\\n    --data-binary '{\"query\":\"query cta {confidentialTransactionAffirmations(filter:{transactionId:{equalTo:\\\"'\"$CONFIDENTIAL_TRANSACTION_ID\"'\\\"},legId:{equalTo:'\"$LEG_ID\"'},party:{equalTo:Sender}}){nodes{transactionId,id,proofs,accountId,identityId,party,legId}}}\"}' \\\n    --compressed)\n\nexport SENDER_PROOF_6_5=$(echo $RESPONSE_6_5 | jq -r '.data.confidentialTransactionAffirmations.nodes[0].proofs[0].proof')\n\necho $RESPONSE_6_5 | jq\n"})}),"\n",(0,t.jsx)(n.p,{children:"Example response:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "data": {\n    "confidentialTransactionAffirmations": {\n      "nodes": [\n        {\n          "transactionId": "1",\n          "id": "1/Sender/0xbf84839e6bc8ad6fe969f560895663fdd2c175b40c9ab3ca63df9fd7010b64f8",\n          "proofs": [\n            {\n              "proof": "0x1004f1e8f24f21c51c9ea8ade48e370d9817eb6651ace219d3dc28dd9d07359b56f05a8c0ab21bc5596d77ea1e5cf88d25dc85986693ac7d1a9fe3f1e6c1671f6f7603df4f786d7f97accc16a4fb4b89d823a935dce7d38066f98c01e10ecb5806da780642af9abe518833dc0d22df8cb63d1d1b65c75c200017c83e07628f884fbc20316152b908be989155f7d74e6ba568b87c566a2851345d97dddf279449058d11109adb6007a43ccdd3d951653072a753b50934e91f86891edfe4c8fc516b2caa3be202dd562a5a1167a57b26de3f0f81277805b3865df82c846fab025da47f2712304def158f95ebeaf443229660ba97fb2f554637307d9f9aa5a335c0a5860a7558ecdb0b1e6f866c67c3585facb776e94870c211c03ada6741b844c6a258790242888271dc10ddcf375fcd952b4d57c42239421d4f6c2e5098087be33b5f0a47ac9bceed4df69ac63d7bc1882304d5a0cd9fc232c3bb5c0b0fd857394a334900ec9f43ffd88002ae51cf7279c005a3a21bd051e76d44ecfe079d65657da87f01544914ba4b72345652526d6a4cb8f85a6a70e644baf857d199d39b0bd6fca15eca59f01960bac31ef77d523b102b048a22322da5ebb4edb518285c5a0d9a181482b411b6bb56ce97741156e3ae64654e98d0ecdd4a9d9595dd2bc64eab793238c079d020c8859f551a93e7d1b0c382dac80bc99c2ed9265e628615e44187cf52055af6d8d7c43a1dc121340a82357dfe1af4a4652d645630749199efdcd06707810bda8bc3f2f42f1f30ac01639de25739b48672f3cc6772515036a6c1a00c7f45550ab930e39cea9932bfd2fad7c33e0cca27c0ef147d1ce8ef0b324b5df125a86db41c0272daa7b25a841e68daedd0ed99269c10d2c4a828c865f9409d5171e570d04205ed8e41702c2158284a4faaedc00c484374f62fb9e9ac802d386cca6b1830b6cc140cef84b1c614455b73ede66d7b054255b7d7e4e9b5b1025cc0f5a5086c3edfd9d552475b1a0c0e459214b8d00647c7bd6b09c1d856cfdf66133dbf0bce30429a139cb98885a31cafd782525b415871d2912ff8df0fe29e0ea2d4e7011c205f5fe16e09a4eb35e3ef4d75c11e3af5d38e752c31dabbbd9700bbd71058d6fe09ad7f28490189eb8ead7fb2780d3fe27cc526c51f8cdca896fd0bb75c770863c0e73d1e61c45073cf8f7af086071af8eabc0588681cbfc23d8a861383771cd1a8d03471059ae4e964ba9655fc6c07b6e9d72b8b6c22389b07171f36690e9aba8c1c8147cb4bb74b5bbe8aed7f1ca2e8670f6e3c6427111eabdbd9d59477fc93dfd5a284f2b5d90bbdfd8c6727790e94c83a60103d1a59f373c52b970815806598e516a8dd841c207884f15939dbc96b719179460409879c2813dc3c116e840fce3abb725e2d90f1f18c4e75a34e31d8c8b128178c1cf14212d4f0462b435c1538f9ac45b2f7f6acc663d319476a6bf810d46b0fa3fdeb93a6df83145c31c0d51c9bf43f028c2f5e0c2387bb26ff7e2655621797540034bacfa81e33177ffa2cd21c6a9c6414087f6a36c9f42b7ee2375499dba71c715c9a05edb684ba4afae5ecff26d547cae075fc0ce8a09043d9443111019b4cac3ca5b5b5c96dec7068abc08fe9c31e8ae49cd61181d810530d6d43c630e71c192cb2c869e7aba5799050072f4feccaf028d7329eaffa89aefbc06cd4ae1337882286827c33ce952f4d913f571b998d1ad662bccae070768f47130110a31a768177f0d2795b821d0552a4293f75efcb760b3fb69160003d718ced0d0001f029f22a065634276c1d00",\n              "assetId": "0x35f2d90772b65a565351124987913aea"\n            }\n          ],\n          "accountId": null,\n          "identityId": "0xbf84839e6bc8ad6fe969f560895663fdd2c175b40c9ab3ca63df9fd7010b64f8",\n          "party": "Sender",\n          "legId": 0\n        }\n      ]\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"67-query-instruction-leg-details-to-determine-the-correct-index-of-the-mediators-confidential-account-in-the-array-of-auditors",children:"6.7 Query instruction leg details to determine the correct index of the mediators confidential account in the array of auditors"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Instruction details were previously retrieved so we will reuse in this step\nexport AUDITORS=$(echo "$RESPONSE_4_4" | jq -c \'.legs[0].assetAuditors[0].auditors[]\')\n\nindex=0\nfor auditor in $AUDITORS; do\n    publicKey=$(echo "$auditor" | jq -r \'.publicKey\')\n    if [ "$publicKey" == "$MEDIATOR_CONFIDENTIAL_ACCOUNT" ]; then\n        export MEDIATOR_INDEX="$index"\n        break\n    fi\n    ((index++))\ndone\n\necho "Index of the Mediator\'s confidential key: $MEDIATOR_INDEX"\n'})}),"\n",(0,t.jsx)(n.p,{children:"Example response:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"Index of the Mediator's confidential key: 0\n"})}),"\n",(0,t.jsx)(n.h4,{id:"69-verify-or-decrypt-sender-proof-using-their-confidential-account-to-view-the-amount-being-sent",children:"6.9 Verify or decrypt sender proof using their confidential account to view the amount being sent"}),"\n",(0,t.jsxs)(n.p,{children:["We made the mediator an auditor ",(0,t.jsx)(n.a,{href:"#23-initialises-confidential-asset-specifying-auditors-and-mediators",children:"here"}),", so we can use the auditor-verify endpoint."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"export RESPONSE_6_9=$(curl --silent --request 'POST' \\\n  ''\"$PP_REST_API\"'/confidential-accounts/'\"$MEDIATOR_CONFIDENTIAL_ACCOUNT\"'/auditor-verify' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"auditorId\": \"'\"$MEDIATOR_INDEX\"'\",\n  \"senderProof\": \"'\"$SENDER_PROOF_6_5\"'\"\n}')\n\necho $RESPONSE_6_9 | jq\n"})}),"\n",(0,t.jsx)(n.h3,{id:"7-auditor-zero-knowledge-proof-verification",children:"7 Auditor zero knowledge proof verification"}),"\n",(0,t.jsxs)(n.p,{children:["The sequence diagram associated with the following steps can be found ",(0,t.jsx)(n.a,{href:"/polymesh-documentation-site/polymesh-docs/polymesh-private/confidential-assets/diagrams#7-auditor-zero-knowledge-proof-review",children:"here"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"71-query-previously-emitted-instruction-affirmation-events-to-retrieve-sender-proofs",children:"7.1 Query previously emitted instruction affirmation events to retrieve sender proof(s)"}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:["The next step is querying the ",(0,t.jsx)(n.strong,{children:"GraphQL"})," endpoint to retrieve information"]})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"export RESPONSE_7_1=$(curl --silent ''\"$PP_GRAPHQL\"'' \\\n    --header 'Accept-Encoding: gzip, deflate, br' \\\n    --header 'Content-Type: application/json' \\\n    --header 'Accept: application/json' \\\n    --header 'Connection: keep-alive' \\\n    --data-binary '{\"query\":\"query cta {confidentialTransactionAffirmations(filter:{transactionId:{equalTo:\\\"'\"$CONFIDENTIAL_TRANSACTION_ID\"'\\\"},legId:{equalTo:'\"$LEG_ID\"'},party:{equalTo:Sender}}){nodes{transactionId,id,proofs,accountId,identityId,party,legId}}}\"}' \\\n    --compressed)\n\nexport SENDER_PROOF_7_1=$(echo $RESPONSE_7_1 | jq -r '.data.confidentialTransactionAffirmations.nodes[0].proofs[0].proof')\n\necho $RESPONSE_7_1 | jq\n"})}),"\n",(0,t.jsx)(n.p,{children:"Example response:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "data": {\n    "confidentialTransactionAffirmations": {\n      "nodes": [\n        {\n          "transactionId": "1",\n          "id": "1/Sender/0xbf84839e6bc8ad6fe969f560895663fdd2c175b40c9ab3ca63df9fd7010b64f8",\n          "proofs": [\n            {\n              "proof": "0x1004f1e8f24f21c51c9ea8ade48e370d9817eb6651ace219d3dc28dd9d07359b56f05a8c0ab21bc5596d77ea1e5cf88d25dc85986693ac7d1a9fe3f1e6c1671f6f7603df4f786d7f97accc16a4fb4b89d823a935dce7d38066f98c01e10ecb5806da780642af9abe518833dc0d22df8cb63d1d1b65c75c200017c83e07628f884fbc20316152b908be989155f7d74e6ba568b87c566a2851345d97dddf279449058d11109adb6007a43ccdd3d951653072a753b50934e91f86891edfe4c8fc516b2caa3be202dd562a5a1167a57b26de3f0f81277805b3865df82c846fab025da47f2712304def158f95ebeaf443229660ba97fb2f554637307d9f9aa5a335c0a5860a7558ecdb0b1e6f866c67c3585facb776e94870c211c03ada6741b844c6a258790242888271dc10ddcf375fcd952b4d57c42239421d4f6c2e5098087be33b5f0a47ac9bceed4df69ac63d7bc1882304d5a0cd9fc232c3bb5c0b0fd857394a334900ec9f43ffd88002ae51cf7279c005a3a21bd051e76d44ecfe079d65657da87f01544914ba4b72345652526d6a4cb8f85a6a70e644baf857d199d39b0bd6fca15eca59f01960bac31ef77d523b102b048a22322da5ebb4edb518285c5a0d9a181482b411b6bb56ce97741156e3ae64654e98d0ecdd4a9d9595dd2bc64eab793238c079d020c8859f551a93e7d1b0c382dac80bc99c2ed9265e628615e44187cf52055af6d8d7c43a1dc121340a82357dfe1af4a4652d645630749199efdcd06707810bda8bc3f2f42f1f30ac01639de25739b48672f3cc6772515036a6c1a00c7f45550ab930e39cea9932bfd2fad7c33e0cca27c0ef147d1ce8ef0b324b5df125a86db41c0272daa7b25a841e68daedd0ed99269c10d2c4a828c865f9409d5171e570d04205ed8e41702c2158284a4faaedc00c484374f62fb9e9ac802d386cca6b1830b6cc140cef84b1c614455b73ede66d7b054255b7d7e4e9b5b1025cc0f5a5086c3edfd9d552475b1a0c0e459214b8d00647c7bd6b09c1d856cfdf66133dbf0bce30429a139cb98885a31cafd782525b415871d2912ff8df0fe29e0ea2d4e7011c205f5fe16e09a4eb35e3ef4d75c11e3af5d38e752c31dabbbd9700bbd71058d6fe09ad7f28490189eb8ead7fb2780d3fe27cc526c51f8cdca896fd0bb75c770863c0e73d1e61c45073cf8f7af086071af8eabc0588681cbfc23d8a861383771cd1a8d03471059ae4e964ba9655fc6c07b6e9d72b8b6c22389b07171f36690e9aba8c1c8147cb4bb74b5bbe8aed7f1ca2e8670f6e3c6427111eabdbd9d59477fc93dfd5a284f2b5d90bbdfd8c6727790e94c83a60103d1a59f373c52b970815806598e516a8dd841c207884f15939dbc96b719179460409879c2813dc3c116e840fce3abb725e2d90f1f18c4e75a34e31d8c8b128178c1cf14212d4f0462b435c1538f9ac45b2f7f6acc663d319476a6bf810d46b0fa3fdeb93a6df83145c31c0d51c9bf43f028c2f5e0c2387bb26ff7e2655621797540034bacfa81e33177ffa2cd21c6a9c6414087f6a36c9f42b7ee2375499dba71c715c9a05edb684ba4afae5ecff26d547cae075fc0ce8a09043d9443111019b4cac3ca5b5b5c96dec7068abc08fe9c31e8ae49cd61181d810530d6d43c630e71c192cb2c869e7aba5799050072f4feccaf028d7329eaffa89aefbc06cd4ae1337882286827c33ce952f4d913f571b998d1ad662bccae070768f47130110a31a768177f0d2795b821d0552a4293f75efcb760b3fb69160003d718ced0d0001f029f22a065634276c1d00",\n              "assetId": "0x35f2d90772b65a565351124987913aea"\n            }\n          ],\n          "accountId": null,\n          "identityId": "0xbf84839e6bc8ad6fe969f560895663fdd2c175b40c9ab3ca63df9fd7010b64f8",\n          "party": "Sender",\n          "legId": 0\n        }\n      ]\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"73-query-instruction-leg-details-to-determine-the-correct-index-of-the-auditor-confidential-account-in-the-array-of-auditors",children:"7.3 Query instruction leg details to determine the correct index of the auditor confidential account in the array of auditors"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'index=0\nfor auditor in $AUDITORS; do\n    publicKey=$(echo "$auditor" | jq -r \'.publicKey\')\n    if [ "$publicKey" == "$AUDITOR_CONFIDENTIAL_ACCOUNT" ]; then\n        export AUDITOR_INDEX="$index"\n        break\n    fi\n    ((index++))\ndone\n\necho "Index of the Auditor\'s confidential key: $AUDITOR_INDEX"\n'})}),"\n",(0,t.jsx)(n.p,{children:"Example response:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"Index of the Auditor's confidential key: 1\n"})}),"\n",(0,t.jsx)(n.h4,{id:"75-verify-or-decrypt-sender-proof-using-their-confidential-account-to-view-the-amount-being-sent",children:"7.5 Verify or decrypt sender proof using their confidential account to view the amount being sent"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"export RESPONSE_7_5=$(curl --silent --request 'POST' \\\n  ''\"$PP_REST_API\"'/confidential-accounts/'\"$AUDITOR_CONFIDENTIAL_ACCOUNT\"'/auditor-verify' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"auditorId\": \"'\"$AUDITOR_INDEX\"'\",\n  \"senderProof\": \"'\"$SENDER_PROOF_7_1\"'\"\n}')\n\necho $RESPONSE_7_5 | jq\n"})}),"\n",(0,t.jsx)(n.p,{children:"Example response:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "isValid": true,\n  "amount": "1000",\n  "errMsg": null\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"8-instruction-affirmation",children:"8 Instruction Affirmation"}),"\n",(0,t.jsxs)(n.p,{children:["The sequence diagram associated with the following steps can be found ",(0,t.jsx)(n.a,{href:"/polymesh-documentation-site/polymesh-docs/polymesh-private/confidential-assets/diagrams#8-instruction-affirmation",children:"here"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"81-submit-affirm-transaction-for-receiver-providing-instruction-id-and-leg-ids",children:"8.1 Submit affirm transaction for Receiver providing instruction ID and leg ID(s)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'export RESPONSE_8_1=$(curl --silent --request \'POST\' \\\n  \'\'"$PP_REST_API"\'/confidential-transactions/\'"$CONFIDENTIAL_TRANSACTION_ID"\'/affirm-leg/observer\' \\\n  -H \'accept: application/json\' \\\n  -H \'Content-Type: application/json\' \\\n  -d \'{\n  "options": {\n    "signer": "receiver-1",\n    "processMode": "submit"\n  },\n  "legId": "\'"$LEG_ID"\'",\n  "party": "Receiver"\n}\')\n\necho $RESPONSE_8_1 | jq\n'})}),"\n",(0,t.jsx)(n.p,{children:"Example response:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "transactions": [\n    {\n      "blockHash": "0x3984a247bf89de7d19a6e6692a87007cee27036991f94a1f32bea21cda6f6d2b",\n      "transactionHash": "0x19578f6f3ca484a186278f070cdf65fa279223e8ce257d5704e56e05a7300d76",\n      "blockNumber": "10063",\n      "type": "single",\n      "transactionTag": "confidentialAsset.affirmTransactions"\n    }\n  ],\n  "details": {\n    "status": "Succeeded",\n    "fees": {\n      "protocol": "0",\n      "gas": "0.077544",\n      "total": "0.077544"\n    },\n    "supportsSubsidy": false,\n    "payingAccount": {\n      "balance": "99999.916714",\n      "type": "Caller",\n      "address": "5Cty5Njqs7faujv6T6PnbNexHyPqC1nqNW7DJ4BcJZumkRFW"\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"82-submit-affirm-transaction-for-mediator-providing-instruction-id-and-leg-ids",children:"8.2 Submit affirm transaction for Mediator providing instruction ID and leg ID(s)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'export RESPONSE_8_2=$(curl --silent --request \'POST\' \\\n  \'\'"$PP_REST_API"\'/confidential-transactions/\'"$CONFIDENTIAL_TRANSACTION_ID"\'/affirm-leg/observer\' \\\n  -H \'accept: application/json\' \\\n  -H \'Content-Type: application/json\' \\\n  -d \'{\n  "options": {\n    "signer": "mediator-1",\n    "processMode": "submit"\n  },\n  "legId": "\'"$LEG_ID"\'",\n  "party": "Mediator"\n}\')\n\necho $RESPONSE_8_2 | jq\n'})}),"\n",(0,t.jsx)(n.p,{children:"Example response:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "transactions": [\n    {\n      "blockHash": "0x3984a247bf89de7d19a6e6692a87007cee27036991f94a1f32bea21cda6f6d2b",\n      "transactionHash": "0x19578f6f3ca484a186278f070cdf65fa279223e8ce257d5704e56e05a7300d76",\n      "blockNumber": "10067",\n      "type": "single",\n      "transactionTag": "confidentialAsset.affirmTransactions"\n    }\n  ],\n  "details": {\n    "status": "Succeeded",\n    "fees": {\n      "protocol": "0",\n      "gas": "0.077544",\n      "total": "0.077544"\n    },\n    "supportsSubsidy": false,\n    "payingAccount": {\n      "balance": "99999.916714",\n      "type": "Caller",\n      "address": "5EPBnKAMr7Pk726MuPgR5D5FvYTvdd23oeTpSofyvJEajLQo"\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"83-execute-the-settlement-instruction-providing-instruction-id",children:"8.3 Execute the settlement instruction providing instruction ID"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"export RESPONSE_8_3=$(curl --silent --request 'POST' \\\n  ''\"$PP_REST_API\"'/confidential-transactions/'\"$CONFIDENTIAL_TRANSACTION_ID\"'/execute' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"options\": {\n    \"signer\": \"sender-1\",\n    \"processMode\": \"submit\"\n  }\n  }')\n\necho $RESPONSE_8_3 | jq\n"})}),"\n",(0,t.jsx)(n.p,{children:"Example response:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "transactions": [\n    {\n      "blockHash": "0x3984a247bf89de7d19a6e6692a87007cee27036991f94a1f32bea21cda6f6d2b",\n      "transactionHash": "0x19578f6f3ca484a186278f070cdf65fa279223e8ce257d5704e56e05a7300d76",\n      "blockNumber": "10067",\n      "type": "single",\n      "transactionTag": "confidentialAsset.affirmTransactions"\n    }\n  ],\n  "details": {\n    "status": "Succeeded",\n    "fees": {\n      "protocol": "0",\n      "gas": "0.077544",\n      "total": "0.077544"\n    },\n    "supportsSubsidy": false,\n    "payingAccount": {\n      "balance": "99999.916714",\n      "type": "Caller",\n      "address": "5EPBnKAMr7Pk726MuPgR5D5FvYTvdd23oeTpSofyvJEajLQo"\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"87-check-receiver-has-incoming-balance",children:"8.7 Check receiver has incoming balance"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"export RESPONSE_8_7=$(curl --silent --request 'GET' \\\n  ''\"$PP_REST_API\"'/confidential-accounts/'\"$RECEIVER_CONFIDENTIAL_ACCOUNT\"'/incoming-balances/'\"$CONFIDENTIAL_ASSET_ID\" \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json')\n\necho $RESPONSE_8_7\n"})}),"\n",(0,t.jsx)(n.p,{children:"Example response:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"0x446e63c2e9302a98a548c38339524b3ed82ee9a280db564c2d8c4285d608f9450097e69147a457e4ab55f4ae5104b0a88d1e173212ff69248febe259b9dfd42b\n"})}),"\n",(0,t.jsx)(n.p,{children:"Now that we have the encrypted balance we can decrypt it."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"export RESPONSE_8_7_1=$(curl --silent --request 'POST' \\\n  ''\"$PP_REST_API\"'/confidential-accounts/'\"$RECEIVER_CONFIDENTIAL_ACCOUNT\"'/decrypt-balance' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n    \"encryptedValue\": \"'\"$RESPONSE_8_7\"'\"\n  }')\n\necho $RESPONSE_8_7_1 | jq\n"})}),"\n",(0,t.jsx)(n.p,{children:"Example response:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "value": "1000"\n}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"88-apply-receiver-incoming-balance-to-their-current-balance",children:"8.8 Apply receiver incoming balance to their current balance"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"export RESPONSE_8_8=$(curl --silent --request 'POST' \\\n  ''\"$PP_REST_API\"'/confidential-accounts/'\"$RECEIVER_CONFIDENTIAL_ACCOUNT\"'/incoming-balances/apply' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"options\": {\n    \"signer\": \"receiver-1\",\n    \"processMode\": \"submit\"\n  }\n  }')\n\necho $RESPONSE_8_8 | jq\n"})}),"\n",(0,t.jsx)(n.p,{children:"Example response:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "transactions": [\n    {\n      "blockHash": "0x48d35a0b9eb500e87b9bcef00ad64bc97843d1adb252968bf93b8e793009d6f7",\n      "transactionHash": "0xf6645f5b7b59c32675bfdf5290318f409ccabc163c672f4ebcb6baa229de73e1",\n      "blockNumber": "10167",\n      "type": "single",\n      "transactionTag": "confidentialAsset.applyIncomingBalances"\n    }\n  ],\n  "details": {\n    "status": "Succeeded",\n    "fees": {\n      "protocol": "0",\n      "gas": "0.149623",\n      "total": "0.149623"\n    },\n    "supportsSubsidy": false,\n    "payingAccount": {\n      "balance": "99999.83917",\n      "type": "Caller",\n      "address": "5Cty5Njqs7faujv6T6PnbNexHyPqC1nqNW7DJ4BcJZumkRFW"\n    }\n  }\n}\n'})})]})}function f(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,n,a)=>{a.d(n,{R:()=>d,x:()=>s});var t=a(96540);const c={},i=t.createContext(c);function d(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:d(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);