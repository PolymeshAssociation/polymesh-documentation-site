"use strict";(self.webpackChunkpolymesh_developer_documentation=self.webpackChunkpolymesh_developer_documentation||[]).push([[42263],{28453:(e,i,t)=>{t.d(i,{R:()=>n,x:()=>c});var s=t(96540);const a={},o=s.createContext(a);function n(e){const i=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:n(e.components),s.createElement(o.Provider,{value:i},e.children)}},31870:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>n,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"api/entities/types/type-aliases/ScopedClaim","title":"Type Alias: ScopedClaim","description":"ScopedClaim = JurisdictionClaim \\\\| AccreditedClaim \\\\| AffiliateClaim \\\\| BuyLockupClaim \\\\| SellLockupClaim \\\\| KycClaim \\\\| ExemptedClaim \\\\| BlockedClaim \\\\| CustomClaim","source":"@site/sdk-docs_versioned_docs/version-v29.0.x/api/entities/types/type-aliases/ScopedClaim.mdx","sourceDirName":"api/entities/types/type-aliases","slug":"/api/entities/types/type-aliases/ScopedClaim","permalink":"/polymesh-documentation-site/sdk-docs/api/entities/types/type-aliases/ScopedClaim","draft":false,"unlisted":false,"tags":[],"version":"v29.0.x","frontMatter":{"sidebar_label":"ScopedClaim"},"sidebar":"defaultSidebar","previous":{"title":"RotatePrimaryKeyToSecondaryData","permalink":"/polymesh-documentation-site/sdk-docs/api/entities/types/type-aliases/RotatePrimaryKeyToSecondaryData"},"next":{"title":"Signer","permalink":"/polymesh-documentation-site/sdk-docs/api/entities/types/type-aliases/Signer"}}');var a=t(74848),o=t(28453);const n={sidebar_label:"ScopedClaim"},c="Type Alias: ScopedClaim",d={},l=[];function r(e){const i={a:"a",blockquote:"blockquote",code:"code",h1:"h1",header:"header",p:"p",strong:"strong",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(i.header,{children:(0,a.jsx)(i.h1,{id:"type-alias-scopedclaim",children:"Type Alias: ScopedClaim"})}),"\n",(0,a.jsxs)(i.blockquote,{children:["\n",(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.strong,{children:"ScopedClaim"})," = ",(0,a.jsx)(i.a,{href:"/polymesh-documentation-site/sdk-docs/api/entities/types/interfaces/JurisdictionClaim",children:(0,a.jsx)(i.code,{children:"JurisdictionClaim"})})," | ",(0,a.jsx)(i.a,{href:"/polymesh-documentation-site/sdk-docs/api/entities/types/interfaces/AccreditedClaim",children:(0,a.jsx)(i.code,{children:"AccreditedClaim"})})," | ",(0,a.jsx)(i.a,{href:"/polymesh-documentation-site/sdk-docs/api/entities/types/interfaces/AffiliateClaim",children:(0,a.jsx)(i.code,{children:"AffiliateClaim"})})," | ",(0,a.jsx)(i.a,{href:"/polymesh-documentation-site/sdk-docs/api/entities/types/interfaces/BuyLockupClaim",children:(0,a.jsx)(i.code,{children:"BuyLockupClaim"})})," | ",(0,a.jsx)(i.a,{href:"/polymesh-documentation-site/sdk-docs/api/entities/types/interfaces/SellLockupClaim",children:(0,a.jsx)(i.code,{children:"SellLockupClaim"})})," | ",(0,a.jsx)(i.a,{href:"/polymesh-documentation-site/sdk-docs/api/entities/types/interfaces/KycClaim",children:(0,a.jsx)(i.code,{children:"KycClaim"})})," | ",(0,a.jsx)(i.a,{href:"/polymesh-documentation-site/sdk-docs/api/entities/types/interfaces/ExemptedClaim",children:(0,a.jsx)(i.code,{children:"ExemptedClaim"})})," | ",(0,a.jsx)(i.a,{href:"/polymesh-documentation-site/sdk-docs/api/entities/types/interfaces/BlockedClaim",children:(0,a.jsx)(i.code,{children:"BlockedClaim"})})," | ",(0,a.jsx)(i.a,{href:"/polymesh-documentation-site/sdk-docs/api/entities/types/interfaces/CustomClaim",children:(0,a.jsx)(i.code,{children:"CustomClaim"})})]}),"\n"]}),"\n",(0,a.jsxs)(i.p,{children:["Defined in: ",(0,a.jsx)(i.a,{href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/bee6a2fe7a8ce5db42a6982e793782182cde2153/src/api/entities/types.ts#L229",children:"src/api/entities/types.ts:229"})]})]})}function p(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,a.jsx)(i,{...e,children:(0,a.jsx)(r,{...e})}):r(e)}}}]);