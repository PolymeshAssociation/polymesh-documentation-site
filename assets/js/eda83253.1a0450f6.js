"use strict";(self.webpackChunkpolymesh_developer_documentation=self.webpackChunkpolymesh_developer_documentation||[]).push([[60996],{28453:(e,s,i)=>{i.d(s,{R:()=>l,x:()=>r});var n=i(96540);const o={},t=n.createContext(o);function l(e){const s=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),n.createElement(t.Provider,{value:s},e.children)}},31840:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>d,contentTitle:()=>r,default:()=>p,frontMatter:()=>l,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"modules/API/Entities/MultiSigProposal/Types/Types","title":"Module: MultiSigProposal Types","description":"Enumerations","source":"@site/sdk-docs_versioned_docs/version-27.5.x/modules/API/Entities/MultiSigProposal/Types/Types.md","sourceDirName":"modules/API/Entities/MultiSigProposal/Types","slug":"/modules/API/Entities/MultiSigProposal/Types/","permalink":"/polymesh-documentation-site/sdk-docs/modules/API/Entities/MultiSigProposal/Types/","draft":false,"unlisted":false,"tags":[],"version":"27.5.x","frontMatter":{"id":"Types","title":"Module: MultiSigProposal Types","sidebar_label":"Types"},"sidebar":"autogeneratedSidebar","previous":{"title":"MultiSigProposal","permalink":"/polymesh-documentation-site/sdk-docs/modules/API/Entities/MultiSigProposal/"},"next":{"title":"NumberedPortfolio","permalink":"/polymesh-documentation-site/sdk-docs/modules/API/Entities/NumberedPortfolio/"}}');var o=i(74848),t=i(28453);const l={id:"Types",title:"Module: MultiSigProposal Types",sidebar_label:"Types"},r=void 0,d={},a=[{value:"Enumerations",id:"enumerations",level:2},{value:"Interfaces",id:"interfaces",level:2},{value:"Type Aliases",id:"type-aliases",level:2},{value:"AnyJson",id:"anyjson",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"MultiSigProposalVote",id:"multisigproposalvote",level:3},{value:"Defined in",id:"defined-in-1",level:4}];function c(e){const s={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.h2,{id:"enumerations",children:"Enumerations"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"/polymesh-documentation-site/sdk-docs/enums/API/Entities/MultiSigProposal/Types/MultiSigProposalAction/",children:"MultiSigProposalAction"})}),"\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"/polymesh-documentation-site/sdk-docs/enums/API/Entities/MultiSigProposal/Types/ProposalStatus/",children:"ProposalStatus"})}),"\n"]}),"\n",(0,o.jsx)(s.h2,{id:"interfaces",children:"Interfaces"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"/polymesh-documentation-site/sdk-docs/interfaces/API/Entities/MultiSigProposal/Types/MultiSigProposalDetails/",children:"MultiSigProposalDetails"})}),"\n"]}),"\n",(0,o.jsx)(s.h2,{id:"type-aliases",children:"Type Aliases"}),"\n",(0,o.jsx)(s.h3,{id:"anyjson",children:"AnyJson"}),"\n",(0,o.jsxs)(s.p,{children:["\u01ac ",(0,o.jsx)(s.strong,{children:"AnyJson"}),": ",(0,o.jsx)(s.code,{children:"string"})," | ",(0,o.jsx)(s.code,{children:"number"})," | ",(0,o.jsx)(s.code,{children:"boolean"})," | ",(0,o.jsx)(s.code,{children:"null"})," | ",(0,o.jsx)(s.code,{children:"undefined"})," | ",(0,o.jsx)(s.a,{href:"/polymesh-documentation-site/sdk-docs/modules/API/Entities/MultiSigProposal/Types/#anyjson",children:(0,o.jsx)(s.code,{children:"AnyJson"})}),"[] | { ",(0,o.jsx)(s.code,{children:"[index: string]"}),": ",(0,o.jsx)(s.a,{href:"/polymesh-documentation-site/sdk-docs/modules/API/Entities/MultiSigProposal/Types/#anyjson",children:(0,o.jsx)(s.code,{children:"AnyJson"})}),";  }"]}),"\n",(0,o.jsx)(s.p,{children:"Represents JSON serializable data. Used for cases when the value can take on many types, like args for a MultiSig proposal."}),"\n",(0,o.jsx)(s.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,o.jsx)(s.p,{children:(0,o.jsx)(s.a,{href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/49a0066c3/src/api/entities/MultiSigProposal/types.ts#L18",children:"api/entities/MultiSigProposal/types.ts:18"})}),"\n",(0,o.jsx)(s.hr,{}),"\n",(0,o.jsx)(s.h3,{id:"multisigproposalvote",children:"MultiSigProposalVote"}),"\n",(0,o.jsxs)(s.p,{children:["\u01ac ",(0,o.jsx)(s.strong,{children:"MultiSigProposalVote"}),": ",(0,o.jsx)(s.a,{href:"/polymesh-documentation-site/sdk-docs/interfaces/API/Client/Types/EventIdentifier/",children:(0,o.jsx)(s.code,{children:"EventIdentifier"})})," & { ",(0,o.jsx)(s.code,{children:"action"}),": ",(0,o.jsx)(s.a,{href:"/polymesh-documentation-site/sdk-docs/enums/Types/MultiSigProposalVoteActionEnum/",children:(0,o.jsx)(s.code,{children:"MultiSigProposalVoteActionEnum"})})," ; ",(0,o.jsx)(s.code,{children:"signer"}),": ",(0,o.jsx)(s.a,{href:"/polymesh-documentation-site/sdk-docs/modules/API/Entities/Types/#signer",children:(0,o.jsx)(s.code,{children:"Signer"})}),"  }"]}),"\n",(0,o.jsx)(s.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,o.jsx)(s.p,{children:(0,o.jsx)(s.a,{href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/49a0066c3/src/api/entities/MultiSigProposal/types.ts#L69",children:"api/entities/MultiSigProposal/types.ts:69"})})]})}function p(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}}}]);