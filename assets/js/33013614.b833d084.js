"use strict";(self.webpackChunkpolymesh_developer_documentation=self.webpackChunkpolymesh_developer_documentation||[]).push([[58752],{3905:(e,t,i)=>{i.d(t,{Zo:()=>u,kt:()=>m});var n=i(67294);function o(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function r(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function s(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?r(Object(i),!0).forEach((function(t){o(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function a(e,t){if(null==e)return{};var i,n,o=function(e,t){if(null==e)return{};var i,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)i=r[n],t.indexOf(i)>=0||(o[i]=e[i]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)i=r[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(o[i]=e[i])}return o}var l=n.createContext({}),c=function(e){var t=n.useContext(l),i=t;return e&&(i="function"==typeof e?e(t):s(s({},t),e)),i},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var i=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),p=c(i),d=o,m=p["".concat(l,".").concat(d)]||p[d]||h[d]||r;return i?n.createElement(m,s(s({ref:t},u),{},{components:i})):n.createElement(m,s({ref:t},u))}));function m(e,t){var i=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=i.length,s=new Array(r);s[0]=d;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a[p]="string"==typeof e?e:o,s[1]=a;for(var c=2;c<r;c++)s[c]=i[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,i)}d.displayName="MDXCreateElement"},87976:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var n=i(87462),o=(i(67294),i(3905));const r={sidebar_position:2,title:"Distribution Process",description:"Distributing Polymesh security tokens",slug:"/distribute/distribution-process"},s=void 0,a={unversionedId:"distribute/distribute-introduction",id:"distribute/distribute-introduction",title:"Distribution Process",description:"Distributing Polymesh security tokens",source:"@site/docs/04-distribute/distribute-introduction.mdx",sourceDirName:"04-distribute",slug:"/distribute/distribution-process",permalink:"/polymesh-documentation-site/docs/distribute/distribution-process",draft:!1,editUrl:"https://github.com/PolymeshAssociation/polymesh-documentation-site/edit/develop/docs/04-distribute/distribute-introduction.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Distribution Process",description:"Distributing Polymesh security tokens",slug:"/distribute/distribution-process"},sidebar:"defaultSidebar",previous:{title:"Distributing Assets",permalink:"/polymesh-documentation-site/docs/distribute/distributing-assets"},next:{title:"Token Studio Dashboard",permalink:"/polymesh-documentation-site/docs/distribute/with-dashboard"}},l={},c=[{value:"Atomicity",id:"atomicity",level:2},{value:"Instruction",id:"instruction",level:2},{value:"Asset checkpoints - Permanent records",id:"asset-checkpoints---permanent-records",level:2},{value:"Conclusion",id:"conclusion",level:2}],u={toc:c};function p(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Let's start with: ",(0,o.kt)("strong",{parentName:"p"},"What is a distribution?")),(0,o.kt)("p",null,"Capital distributions are a ",(0,o.kt)("strong",{parentName:"p"},"common procedure in the financial world"),". Most capital distributions are payments related to assets from an account, fund, or individual security to investors or other beneficiaries, or those related to payments of stock or other payouts to shareholders."),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"source for a distribution")," can be a number of financial products. Still, a distribution usually consists of a direct payment to a beneficiary."),(0,o.kt)("p",null,"As distributions are essential for financial products, especially securities, they have also found their way into the Polymesh design."),(0,o.kt)("p",null,"What we already covered in ",(0,o.kt)("em",{parentName:"p"},"Origination"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"How the underlying asset has a lifecycle of its own, different from that of the security token. Typically expressed with the on-chain actions:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Minting, a.k.a. issuance,"),(0,o.kt)("li",{parentName:"ul"},"Distributing, a.k.a. transfer;"))),(0,o.kt)("li",{parentName:"ul"},"How the primary issuance agent (PIA) is in charge of minting the asset, and so of its total supply.")),(0,o.kt)("p",null,"Now, how does it take place in practice?"),(0,o.kt)("p",null,"The owner of the token has delegated a large amount of trust to the PIA. The PIA issues to themselves the amount of shares that they have been tasked with distributing to the ultimate beneficiaries. With this action done, in one or multiple steps, they can proceed to the distribution."),(0,o.kt)("p",null,"As has been repeated many times, and will be later too, most actions on Polymesh carry consequences, and for this reason, targets and recipients need to accept actions too. This is no different for the recipient of a capital distribution. Each recipient needs to accept, and perhaps reject."),(0,o.kt)("h2",{id:"atomicity"},"Atomicity"),(0,o.kt)("p",null,"An important property of all blockchains is the ",(0,o.kt)("strong",{parentName:"p"},"indivisibility, or atomicity, of operations"),' they enable. For instance, if the desired operation is to send 10 shares to Alice, then when Alice accepts, she receives her 10 shares. This is simple. It bears nonetheless repeating that "Alice receives 10 shares" was the indivisible operation.'),(0,o.kt)("p",null,"A more complex example would be that the desired operation is:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Alice receives 10 shares, and"),(0,o.kt)("li",{parentName:"ol"},"Bob receives 20 shares.")),(0,o.kt)("p",null,"There is a missing part from this seemingly simple statement. What should happen if Alice rejects the operation? Does Bob still receive his shares, or should he be prevented from collecting them?"),(0,o.kt)("p",null,"It is a matter of desired outcome, and the token owner, or the PIA, may have a preferred outcome. Perhaps, giving a veto to each party is a way to record the consensus of all parties about the shareholding structure."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"For each desired outcome, there is a different way of structuring the distribution.")),(0,o.kt)("h2",{id:"instruction"},"Instruction"),(0,o.kt)("p",null,"The ",(0,o.kt)("em",{parentName:"p"},"indivisible, or atomic, operation when distributing on Polymesh")," is called the ",(0,o.kt)("strong",{parentName:"p"},"instruction"),"."),(0,o.kt)("p",null,"Therefore, if the PIA wants both Alice and Bob to receive their shares independently of the decision emanating from the other party, the PIA would have to structure the instructions the following way:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Instruction 1: Alice receives 10 shares, independently from Instruction 2;"),(0,o.kt)("li",{parentName:"ul"},"Instruction 2: Bob receives 10 shares, independently from Instruction 1.")),(0,o.kt)("p",null,"On the other hand, if the PIA wants both Alice and Bob to be in agreement for both, they would have to structure the instruction thus:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Instruction:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Alice receives 10 shares;"),(0,o.kt)("li",{parentName:"ul"},"Bob receives 10 shares.")))),(0,o.kt)("p",null,"For the avoidance of doubt, if both Alice and Bob approve the instruction, but one of them doesn't satisfy the compliance requirements of the token, the instruction doesn't execute yet, but remains in a pending state."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Distribute instruction",src:i(92314).Z,width:"1917",height:"1045"})),(0,o.kt)("h2",{id:"asset-checkpoints---permanent-records"},"Asset checkpoints - Permanent records"),(0,o.kt)("p",null,"During the life of a token, some actions require knowledge of the asset distribution - ",(0,o.kt)("em",{parentName:"p"},"Who owns how much?")," Examples include capital distribution and corporate ballots. Moreover this knowledge typically needs to be collected for a specific point in time, and available now and later - ",(0,o.kt)("em",{parentName:"p"},"Who owned how much on January 1st, 2021?")),(0,o.kt)("p",null,"To achieve this, Polymesh implements a classic ",(0,o.kt)("strong",{parentName:"p"},"lazy-checkpointing")," mechanism. In effect, upon creation, the checkpoint only records:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"the date at which it was issued, and"),(0,o.kt)("li",{parentName:"ul"},"the total supply at the block height it was issued.")),(0,o.kt)("p",null,'Note how "',(0,o.kt)("em",{parentName:"p"},"who owns how much"),'" is missing from the record at creation. Since there is no limit to the number of investors, there would be no limit to the number of copy operations. Instead, to find out "',(0,o.kt)("em",{parentName:"p"},"how much did Alice own?"),"\", the system first looks into the checkpoint records for a value, and if missing that, picks Alice's balance now."),(0,o.kt)("p",null,"To make it possible, Polymesh keeps an eye out and will record in the checkpoint the previous balances of parties before any transfer between said parties, or any other action that changes balances for that matter."),(0,o.kt)("p",null,"For the avoidance of doubt, if there are no transactions after the checkpoint's creation, then it will not record any held balance as, indeed, the current blockchain data is the same as the desired data at the checkpoint."),(0,o.kt)("p",null,"One can create a checkpoint in two ways:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"create it immediately, or"),(0,o.kt)("li",{parentName:"ul"},"schedule future creation(s) at intervals.")),(0,o.kt)("h2",{id:"conclusion"},"Conclusion"),(0,o.kt)("p",null,"We have seen the concepts that apply to the distribution of capital. Let's see how this looks in the Token Studio with the exercise coming up next."))}p.isMDXComponent=!0},92314:(e,t,i)=>{i.d(t,{Z:()=>n});const n=i.p+"assets/images/distribution-instruction-68313de092210c84209d46eda61f819c.png"}}]);