"use strict";(self.webpackChunkpolymesh_developer_documentation=self.webpackChunkpolymesh_developer_documentation||[]).push([[33462],{28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var t=i(96540);const r={},s=t.createContext(r);function o(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(s.Provider,{value:n},e.children)}},64447:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"developer-resources/tooling/subquery","title":"SubQuery Indexer","description":"Efficiently query Polymesh blockchain data using the SubQuery indexer and GraphQL API","source":"@site/docs/300-developer-resources/010-tooling/040-subquery.mdx","sourceDirName":"300-developer-resources/010-tooling","slug":"/development/tooling/subquery","permalink":"/polymesh-documentation-site/development/tooling/subquery","draft":false,"unlisted":false,"editUrl":"https://github.com/PolymeshAssociation/polymesh-documentation-site/edit/develop/docs/300-developer-resources/010-tooling/040-subquery.mdx","tags":[{"inline":true,"label":"subquery","permalink":"/polymesh-documentation-site/tags/subquery"},{"inline":true,"label":"indexer","permalink":"/polymesh-documentation-site/tags/indexer"},{"inline":true,"label":"graphql","permalink":"/polymesh-documentation-site/tags/graphql"},{"inline":true,"label":"api","permalink":"/polymesh-documentation-site/tags/api"},{"inline":true,"label":"development","permalink":"/polymesh-documentation-site/tags/development"}],"version":"current","sidebarPosition":40,"frontMatter":{"title":"SubQuery Indexer","description":"Efficiently query Polymesh blockchain data using the SubQuery indexer and GraphQL API","id":"subquery","slug":"/development/tooling/subquery","sidebar_label":"SubQuery Indexer","tags":["subquery","indexer","graphql","api","development"]},"sidebar":"docs","previous":{"title":"REST API","permalink":"/polymesh-documentation-site/development/tooling/rest-api"},"next":{"title":"Validator Node Guide","permalink":"/polymesh-documentation-site/developer-resources/validator-node-guide"}}');var r=i(74848),s=i(28453);const o={title:"SubQuery Indexer",description:"Efficiently query Polymesh blockchain data using the SubQuery indexer and GraphQL API",id:"subquery",slug:"/development/tooling/subquery",sidebar_label:"SubQuery Indexer",tags:["subquery","indexer","graphql","api","development"]},l=void 0,a={},d=[{value:"Overview",id:"overview",level:2},{value:"Purpose and Use Cases",id:"purpose-and-use-cases",level:2},{value:"GraphQL API",id:"graphql-api",level:2},{value:"Running Locally",id:"running-locally",level:2}];function c(e){const n={a:"a",code:"code",em:"em",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(n.p,{children:["The Polymesh SubQuery Indexer is a dedicated service that processes Polymesh blockchain data, transforming it into a structured format that can be easily queried. Built using the ",(0,r.jsx)(n.a,{href:"https://subquery.network/",children:"SubQuery framework"}),", it provides an efficient way to access both historical and real-time chain state without directly querying the blockchain node, which can be resource-intensive for complex data retrieval."]}),"\n",(0,r.jsxs)(n.p,{children:["The official Polymesh SubQuery project is open source and ",(0,r.jsx)(n.a,{href:"https://github.com/PolymeshAssociation/polymesh-subquery",children:"available on GitHub"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"purpose-and-use-cases",children:"Purpose and Use Cases"}),"\n",(0,r.jsx)(n.p,{children:"Querying blockchain nodes directly for anything beyond basic information (like current balance) can be slow and inefficient, especially for historical data or aggregated results. The SubQuery indexer solves this by:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Listening"})," to new blocks and events on the Polymesh chain."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Processing"})," the data according to a predefined schema (defining entities like ",(0,r.jsx)(n.code,{children:"Account"}),", ",(0,r.jsx)(n.code,{children:"Asset"}),", ",(0,r.jsx)(n.code,{children:"Settlement"}),", ",(0,r.jsx)(n.code,{children:"Event"}),", ",(0,r.jsx)(n.code,{children:"Extrinsic"}),", etc.)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Storing"})," this structured data in a PostgreSQL database."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Exposing"})," the data through a standard GraphQL API endpoint."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"This approach enables:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Efficient Data Retrieval"}),": Complex queries for historical transactions, asset holders, event logs, or identity claims become much faster."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Powering dApps & Frontends"}),": Provides a performant backend for applications like the ",(0,r.jsx)(n.a,{href:"https://portal.polymesh.network/",children:"Polymesh Portal"})," or custom dashboards."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Supporting APIs"}),": The ",(0,r.jsx)(n.a,{href:"/development/tooling/rest-api",children:"Polymesh REST API"})," relies heavily on the SubQuery indexer for many of its endpoints."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Data Analysis"}),": Enables easier analysis of on-chain activity and trends."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"graphql-api",children:"GraphQL API"}),"\n",(0,r.jsx)(n.p,{children:"The primary way to interact with the indexed data is through the GraphQL endpoint exposed by the SubQuery service. GraphQL allows clients to request exactly the data they need, reducing over-fetching and improving performance."}),"\n",(0,r.jsx)(n.p,{children:"You can explore the schema and run queries using tools like GraphQL Playground or Postman, or directly within your application code using GraphQL client libraries."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Query (Conceptual):"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-graphql",children:'query holdersByAsset {\n  assetHolders(filter: { assetId: { equalTo: "0x..." } }) {\n    nodes {\n      identityId\n      assetId\n      asset {\n        ticker\n      }\n      amount\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Note: The actual query structure depends on the specific schema version deployed."})}),"\n",(0,r.jsx)(n.h2,{id:"running-locally",children:"Running Locally"}),"\n",(0,r.jsxs)(n.p,{children:["The SubQuery indexer and its GraphQL endpoint are included in the ",(0,r.jsx)(n.a,{href:"/development/tooling/local-setup",children:(0,r.jsx)(n.strong,{children:"Polymesh Local Development Environment"})}),". Follow that guide to easily run the complete stack, including the indexer service (",(0,r.jsx)(n.code,{children:"subquery-node"}),") and the GraphQL server (",(0,r.jsx)(n.code,{children:"subquery-graphql"}),"), typically available at ",(0,r.jsx)(n.code,{children:"http://localhost:3000"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"This local instance allows you to test integrations and explore the indexed data from your development chain."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);