"use strict";(self.webpackChunkpolymesh_developer_documentation=self.webpackChunkpolymesh_developer_documentation||[]).push([[27450],{28453:(e,i,t)=>{t.d(i,{R:()=>a,x:()=>c});var n=t(96540);const s={},o=n.createContext(s);function a(e){const i=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(o.Provider,{value:i},e.children)}},38590:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>r,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"api/entities/types/interfaces/SingleClaimCondition","title":"Interface: SingleClaimCondition","description":"Defined in368","source":"@site/sdk-docs_versioned_docs/version-v29.0.x/api/entities/types/interfaces/SingleClaimCondition.mdx","sourceDirName":"api/entities/types/interfaces","slug":"/api/entities/types/interfaces/SingleClaimCondition","permalink":"/polymesh-documentation-site/sdk-docs/api/entities/types/interfaces/SingleClaimCondition","draft":false,"unlisted":false,"tags":[],"version":"v29.0.x","frontMatter":{"sidebar_label":"SingleClaimCondition"},"sidebar":"defaultSidebar","previous":{"title":"SimplePermissions","permalink":"/polymesh-documentation-site/sdk-docs/api/entities/types/interfaces/SimplePermissions"},"next":{"title":"StatAccreditedClaimInput","permalink":"/polymesh-documentation-site/sdk-docs/api/entities/types/interfaces/StatAccreditedClaimInput"}}');var s=t(74848),o=t(28453);const a={sidebar_label:"SingleClaimCondition"},c="Interface: SingleClaimCondition",r={},l=[{value:"Properties",id:"properties",level:2},{value:"claim",id:"claim",level:3},{value:"type",id:"type",level:3}];function d(e){const i={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",p:"p",strong:"strong",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"interface-singleclaimcondition",children:"Interface: SingleClaimCondition"})}),"\n",(0,s.jsxs)(i.p,{children:["Defined in: ",(0,s.jsx)(i.a,{href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/bee6a2fe7a8ce5db42a6982e793782182cde2153/src/api/entities/types.ts#L368",children:"src/api/entities/types.ts:368"})]}),"\n",(0,s.jsx)(i.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(i.h3,{id:"claim",children:"claim"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"claim"}),": ",(0,s.jsx)(i.a,{href:"/polymesh-documentation-site/sdk-docs/api/entities/types/type-aliases/Claim",children:(0,s.jsx)(i.code,{children:"Claim"})})]}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["Defined in: ",(0,s.jsx)(i.a,{href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/bee6a2fe7a8ce5db42a6982e793782182cde2153/src/api/entities/types.ts#L370",children:"src/api/entities/types.ts:370"})]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h3,{id:"type",children:"type"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"type"}),": ",(0,s.jsx)(i.a,{href:"/polymesh-documentation-site/sdk-docs/api/entities/types/enumerations/ConditionType#ispresent",children:(0,s.jsx)(i.code,{children:"IsPresent"})})," | ",(0,s.jsx)(i.a,{href:"/polymesh-documentation-site/sdk-docs/api/entities/types/enumerations/ConditionType#isabsent",children:(0,s.jsx)(i.code,{children:"IsAbsent"})})]}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["Defined in: ",(0,s.jsx)(i.a,{href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/bee6a2fe7a8ce5db42a6982e793782182cde2153/src/api/entities/types.ts#L369",children:"src/api/entities/types.ts:369"})]})]})}function p(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);