"use strict";(self.webpackChunkpolymesh_developer_documentation=self.webpackChunkpolymesh_developer_documentation||[]).push([[29052],{93019:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var i=t(74848),s=t(28453);const o={id:"StatType",title:"Enumeration: StatType",sidebar_label:"StatType"},d=void 0,c={id:"enums/API/Entities/Types/StatType/StatType",title:"Enumeration: StatType",description:"api/entities/types.StatType",source:"@site/sdk-docs/enums/API/Entities/Types/StatType/StatType.md",sourceDirName:"enums/API/Entities/Types/StatType",slug:"/enums/API/Entities/Types/StatType/",permalink:"/polymesh-documentation-site/sdk-docs/26.0.0-beta.2/enums/API/Entities/Types/StatType/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"StatType",title:"Enumeration: StatType",sidebar_label:"StatType"},sidebar:"defaultSidebar",previous:{title:"SignerType",permalink:"/polymesh-documentation-site/sdk-docs/26.0.0-beta.2/enums/API/Entities/Types/SignerType/"},next:{title:"VenueType",permalink:"/polymesh-documentation-site/sdk-docs/26.0.0-beta.2/enums/API/Entities/Venue/Types/VenueType/"}},a={},l=[{value:"Enumeration Members",id:"enumeration-members",level:2},{value:"Balance",id:"balance",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"Count",id:"count",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"ScopedBalance",id:"scopedbalance",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"ScopedCount",id:"scopedcount",level:3},{value:"Defined in",id:"defined-in-3",level:4}];function r(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",p:"p",strong:"strong",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/polymesh-documentation-site/sdk-docs/26.0.0-beta.2/modules/API/Entities/Types/",children:"api/entities/types"}),".StatType"]}),"\n",(0,i.jsxs)(n.p,{children:["Represents the StatType from the ",(0,i.jsx)(n.code,{children:"statistics"})," module."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"Note"})})}),"\n",(0,i.jsx)(n.p,{children:'the chain doesn\'t use "Scoped" types, but they are needed here to discriminate the input instead of having an optional input'}),"\n",(0,i.jsx)(n.h2,{id:"enumeration-members",children:"Enumeration Members"}),"\n",(0,i.jsx)(n.h3,{id:"balance",children:"Balance"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"Balance"})," = ",(0,i.jsx)(n.code,{children:'"Balance"'})]}),"\n",(0,i.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/5b946f904/src/api/entities/types.ts#L286",children:"api/entities/types.ts:286"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"count",children:"Count"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"Count"})," = ",(0,i.jsx)(n.code,{children:'"Count"'})]}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/5b946f904/src/api/entities/types.ts#L285",children:"api/entities/types.ts:285"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"scopedbalance",children:"ScopedBalance"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"ScopedBalance"})," = ",(0,i.jsx)(n.code,{children:'"ScopedBalance"'})]}),"\n",(0,i.jsxs)(n.p,{children:["ScopedPercentage is an SDK only type, on chain it is ",(0,i.jsx)(n.code,{children:"Balance"})," with a claimType option present"]}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/5b946f904/src/api/entities/types.ts#L294",children:"api/entities/types.ts:294"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"scopedcount",children:"ScopedCount"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"ScopedCount"})," = ",(0,i.jsx)(n.code,{children:'"ScopedCount"'})]}),"\n",(0,i.jsxs)(n.p,{children:["ScopedCount is an SDK only type, on chain it is ",(0,i.jsx)(n.code,{children:"Count"})," with a claimType option present"]}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/5b946f904/src/api/entities/types.ts#L290",children:"api/entities/types.ts:290"})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(r,{...e})}):r(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>c});var i=t(96540);const s={},o=i.createContext(s);function d(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);