"use strict";(self.webpackChunkpolymesh_developer_documentation=self.webpackChunkpolymesh_developer_documentation||[]).push([[50695],{3905:(e,r,t)=>{t.d(r,{Zo:()=>p,kt:()=>f});var a=t(67294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function s(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?s(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function o(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},s=Object.keys(e);for(a=0;a<s.length;a++)t=s[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)t=s[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var d=a.createContext({}),l=function(e){var r=a.useContext(d),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},p=function(e){var r=l(e.components);return a.createElement(d.Provider,{value:r},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},u=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,s=e.originalType,d=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=l(t),u=n,f=c["".concat(d,".").concat(u)]||c[u]||m[u]||s;return t?a.createElement(f,i(i({ref:r},p),{},{components:t})):a.createElement(f,i({ref:r},p))}));function f(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var s=t.length,i=new Array(s);i[0]=u;var o={};for(var d in r)hasOwnProperty.call(r,d)&&(o[d]=r[d]);o.originalType=e,o[c]="string"==typeof e?e:n,i[1]=o;for(var l=2;l<s;l++)i[l]=t[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},53917:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>d,contentTitle:()=>i,default:()=>c,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var a=t(87462),n=(t(67294),t(3905));const s={id:"AddClaimsParams",title:"Interface: AddClaimsParams",sidebar_label:"AddClaimsParams"},i=void 0,o={unversionedId:"interfaces/API/Procedures/Types/AddClaimsParams/AddClaimsParams",id:"version-19.0.0/interfaces/API/Procedures/Types/AddClaimsParams/AddClaimsParams",title:"Interface: AddClaimsParams",description:"api/procedures/types.AddClaimsParams",source:"@site/sdk-docs_versioned_docs/version-19.0.0/interfaces/API/Procedures/Types/AddClaimsParams/AddClaimsParams.md",sourceDirName:"interfaces/API/Procedures/Types/AddClaimsParams",slug:"/interfaces/API/Procedures/Types/AddClaimsParams/",permalink:"/polymesh-documentation-site/sdk-docs/interfaces/API/Procedures/Types/AddClaimsParams/",draft:!1,tags:[],version:"19.0.0",frontMatter:{id:"AddClaimsParams",title:"Interface: AddClaimsParams",sidebar_label:"AddClaimsParams"},sidebar:"defaultSidebar",previous:{title:"AddAssetRequirementParams",permalink:"/polymesh-documentation-site/sdk-docs/interfaces/API/Procedures/Types/AddAssetRequirementParams/"},next:{title:"AddInstructionsParams",permalink:"/polymesh-documentation-site/sdk-docs/interfaces/API/Procedures/Types/AddInstructionsParams/"}},d={},l=[{value:"Properties",id:"properties",level:2},{value:"claims",id:"claims",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"operation",id:"operation",level:3},{value:"Defined in",id:"defined-in-1",level:4}],p={toc:l};function c(e){let{components:r,...t}=e;return(0,n.kt)("wrapper",(0,a.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/modules/API/Procedures/Types/"},"api/procedures/types"),".AddClaimsParams"),(0,n.kt)("h2",{id:"properties"},"Properties"),(0,n.kt)("h3",{id:"claims"},"claims"),(0,n.kt)("p",null,"\u2022 ",(0,n.kt)("strong",{parentName:"p"},"claims"),": ",(0,n.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/interfaces/Types/ClaimTarget/"},(0,n.kt)("inlineCode",{parentName:"a"},"ClaimTarget")),"[]"),(0,n.kt)("p",null,"array of claims to be added"),(0,n.kt)("h4",{id:"defined-in"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/5a778578/src/api/procedures/types.ts#L346"},"api/procedures/types.ts:346")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"operation"},"operation"),(0,n.kt)("p",null,"\u2022 ",(0,n.kt)("strong",{parentName:"p"},"operation"),": ",(0,n.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/enums/API/Procedures/Types/ClaimOperation/#add"},(0,n.kt)("inlineCode",{parentName:"a"},"Add"))),(0,n.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/5a778578/src/api/procedures/types.ts#L347"},"api/procedures/types.ts:347")))}c.isMDXComponent=!0}}]);