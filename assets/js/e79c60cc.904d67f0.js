"use strict";(self.webpackChunkpolymesh_developer_documentation=self.webpackChunkpolymesh_developer_documentation||[]).push([[49836],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=s(r),m=o,f=c["".concat(p,".").concat(m)]||c[m]||d[m]||a;return r?n.createElement(f,i(i({ref:t},u),{},{components:r})):n.createElement(f,i({ref:t},u))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},72318:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var n=r(87462),o=(r(67294),r(3905));const a={id:"MortalProcedureOptValue",title:"Interface: MortalProcedureOptValue",sidebar_label:"MortalProcedureOptValue"},i=void 0,l={unversionedId:"interfaces/Types/MortalProcedureOptValue/MortalProcedureOptValue",id:"version-20.1.x/interfaces/Types/MortalProcedureOptValue/MortalProcedureOptValue",title:"Interface: MortalProcedureOptValue",description:"types.MortalProcedureOptValue",source:"@site/sdk-docs_versioned_docs/version-20.1.x/interfaces/Types/MortalProcedureOptValue/MortalProcedureOptValue.md",sourceDirName:"interfaces/Types/MortalProcedureOptValue",slug:"/interfaces/Types/MortalProcedureOptValue/",permalink:"/polymesh-documentation-site/sdk-docs/20.1.x/interfaces/Types/MortalProcedureOptValue/",draft:!1,tags:[],version:"20.1.x",frontMatter:{id:"MortalProcedureOptValue",title:"Interface: MortalProcedureOptValue",sidebar_label:"MortalProcedureOptValue"},sidebar:"defaultSidebar",previous:{title:"MiddlewareConfig",permalink:"/polymesh-documentation-site/sdk-docs/20.1.x/interfaces/Types/MiddlewareConfig/"},next:{title:"MultiClaimCondition",permalink:"/polymesh-documentation-site/sdk-docs/20.1.x/interfaces/Types/MultiClaimCondition/"}},p={},s=[{value:"Properties",id:"properties",level:2},{value:"immortal",id:"immortal",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"lifetime",id:"lifetime",level:3},{value:"Defined in",id:"defined-in-1",level:4}],u={toc:s};function c(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/20.1.x/modules/Types/"},"types"),".MortalProcedureOptValue"),(0,o.kt)("p",null,"This transaction will be rejected if not included in a block after a while (default: ~5 minutes)"),(0,o.kt)("h2",{id:"properties"},"Properties"),(0,o.kt)("h3",{id:"immortal"},"immortal"),(0,o.kt)("p",null,"\u2022 ",(0,o.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,o.kt)("strong",{parentName:"p"},"immortal"),": ",(0,o.kt)("inlineCode",{parentName:"p"},"false")),(0,o.kt)("h4",{id:"defined-in"},"Defined in"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/07a4c5b0/src/types/index.ts#L1473"},"types/index.ts:1473")),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"lifetime"},"lifetime"),(0,o.kt)("p",null,"\u2022 ",(0,o.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,o.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,o.kt)("strong",{parentName:"p"},"lifetime"),": ",(0,o.kt)("inlineCode",{parentName:"p"},"BigNumber")),(0,o.kt)("p",null,"The number of blocks the for which the transaction remains valid. Target block time is 6 seconds. The default should suffice for most use cases"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"Note"))),(0,o.kt)("p",null," this value will get rounded up to the closest power of 2, e.g. ",(0,o.kt)("inlineCode",{parentName:"p"},"65")," rounds up to ",(0,o.kt)("inlineCode",{parentName:"p"},"128")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"Note"))),(0,o.kt)("p",null," this value should not exceed 4096, which is the chain's ",(0,o.kt)("inlineCode",{parentName:"p"},"BlockHashCount")," as the lesser of the two will be used."),(0,o.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/07a4c5b0/src/types/index.ts#L1480"},"types/index.ts:1480")))}c.isMDXComponent=!0}}]);