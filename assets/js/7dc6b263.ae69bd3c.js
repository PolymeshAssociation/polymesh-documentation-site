"use strict";(self.webpackChunkpolymesh_developer_documentation=self.webpackChunkpolymesh_developer_documentation||[]).push([[21092],{13977:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>n,toc:()=>r});const n=JSON.parse('{"id":"api/entities/Asset/types/type-aliases/CollectionKey","title":"Type Alias: CollectionKey","description":"CollectionKey = MetadataKeyId & MetadataDetails","source":"@site/sdk-docs_versioned_docs/version-v29.0.x/api/entities/Asset/types/type-aliases/CollectionKey.mdx","sourceDirName":"api/entities/Asset/types/type-aliases","slug":"/api/entities/Asset/types/type-aliases/CollectionKey","permalink":"/polymesh-documentation-site/sdk-docs/api/entities/Asset/types/type-aliases/CollectionKey","draft":false,"unlisted":false,"tags":[],"version":"v29.0.x","frontMatter":{"sidebar_label":"CollectionKey"},"sidebar":"defaultSidebar","previous":{"title":"ClaimValue","permalink":"/polymesh-documentation-site/sdk-docs/api/entities/Asset/types/type-aliases/ClaimValue"},"next":{"title":"JurisdictionValue","permalink":"/polymesh-documentation-site/sdk-docs/api/entities/Asset/types/type-aliases/JurisdictionValue"}}');var i=s(74848),a=s(28453);const o={sidebar_label:"CollectionKey"},l="Type Alias: CollectionKey",c={},r=[{value:"Note",id:"note",level:2}];function d(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"type-alias-collectionkey",children:"Type Alias: CollectionKey"})}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"CollectionKey"})," = ",(0,i.jsx)(t.a,{href:"/polymesh-documentation-site/sdk-docs/api/entities/Asset/types/type-aliases/MetadataKeyId",children:(0,i.jsx)(t.code,{children:"MetadataKeyId"})})," & ",(0,i.jsx)(t.a,{href:"/polymesh-documentation-site/sdk-docs/api/entities/MetadataEntry/types/interfaces/MetadataDetails",children:(0,i.jsx)(t.code,{children:"MetadataDetails"})})]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["Defined in: ",(0,i.jsx)(t.a,{href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/bee6a2fe7a8ce5db42a6982e793782182cde2153/src/api/entities/Asset/types.ts#L248",children:"src/api/entities/Asset/types.ts:248"})]}),"\n",(0,i.jsx)(t.p,{children:"A metadata entry for which each NFT in the collection must have an entry for"}),"\n",(0,i.jsx)(t.h2,{id:"note",children:"Note"}),"\n",(0,i.jsxs)(t.p,{children:["each NFT ",(0,i.jsx)(t.strong,{children:"must"})," have an entry for each metadata value, the entry ",(0,i.jsx)(t.strong,{children:"should"})," comply with the relevant spec"]})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>l});var n=s(96540);const i={},a=n.createContext(i);function o(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);