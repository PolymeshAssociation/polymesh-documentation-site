"use strict";(self.webpackChunkpolymesh_developer_documentation=self.webpackChunkpolymesh_developer_documentation||[]).push([[14817],{21374:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>a,frontMatter:()=>c,metadata:()=>i,toc:()=>p});const i=JSON.parse('{"id":"interfaces/API/Entities/Account/Types/AccountTypeInfo/AccountTypeInfo","title":"Interface: AccountTypeInfo","description":"api/entities/Account/types.AccountTypeInfo","source":"@site/sdk-docs_versioned_docs/version-27.0.x/interfaces/API/Entities/Account/Types/AccountTypeInfo/AccountTypeInfo.md","sourceDirName":"interfaces/API/Entities/Account/Types/AccountTypeInfo","slug":"/interfaces/API/Entities/Account/Types/AccountTypeInfo/","permalink":"/polymesh-documentation-site/sdk-docs/interfaces/API/Entities/Account/Types/AccountTypeInfo/","draft":false,"unlisted":false,"tags":[],"version":"27.0.x","frontMatter":{"id":"AccountTypeInfo","title":"Interface: AccountTypeInfo","sidebar_label":"AccountTypeInfo"},"sidebar":"defaultSidebar","previous":{"title":"MultiSigSigners","permalink":"/polymesh-documentation-site/sdk-docs/interfaces/API/Entities/Account/MultiSig/Types/MultiSigSigners/"},"next":{"title":"Balance","permalink":"/polymesh-documentation-site/sdk-docs/interfaces/API/Entities/Account/Types/Balance/"}}');var o=t(74848),s=t(28453);const c={id:"AccountTypeInfo",title:"Interface: AccountTypeInfo",sidebar_label:"AccountTypeInfo"},r=void 0,d={},p=[{value:"Properties",id:"properties",level:2},{value:"keyType",id:"keytype",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"relation",id:"relation",level:3},{value:"Defined in",id:"defined-in-1",level:4}];function l(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",p:"p",strong:"strong",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"/polymesh-documentation-site/sdk-docs/modules/API/Entities/Account/Types/",children:"api/entities/Account/types"}),".AccountTypeInfo"]}),"\n",(0,o.jsx)(n.p,{children:"The type of account, and its relation to an Identity"}),"\n",(0,o.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,o.jsx)(n.h3,{id:"keytype",children:"keyType"}),"\n",(0,o.jsxs)(n.p,{children:["\u2022 ",(0,o.jsx)(n.strong,{children:"keyType"}),": ",(0,o.jsx)(n.a,{href:"/polymesh-documentation-site/sdk-docs/enums/API/Entities/Account/Types/AccountKeyType/",children:(0,o.jsx)(n.code,{children:"AccountKeyType"})})]}),"\n",(0,o.jsx)(n.p,{children:"The type of Account"}),"\n",(0,o.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/8a9158669/src/api/entities/Account/types.ts#L71",children:"api/entities/Account/types.ts:71"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"relation",children:"relation"}),"\n",(0,o.jsxs)(n.p,{children:["\u2022 ",(0,o.jsx)(n.strong,{children:"relation"}),": ",(0,o.jsx)(n.a,{href:"/polymesh-documentation-site/sdk-docs/enums/API/Entities/Account/Types/AccountIdentityRelation/",children:(0,o.jsx)(n.code,{children:"AccountIdentityRelation"})})]}),"\n",(0,o.jsx)(n.p,{children:"How or if the account is associated to an Identity"}),"\n",(0,o.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/8a9158669/src/api/entities/Account/types.ts#L75",children:"api/entities/Account/types.ts:75"})})]})}function a(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>r});var i=t(96540);const o={},s=i.createContext(o);function c(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);