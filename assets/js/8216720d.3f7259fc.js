"use strict";(self.webpackChunkpolymesh_developer_documentation=self.webpackChunkpolymesh_developer_documentation||[]).push([[3599],{28453:(e,i,n)=>{n.d(i,{R:()=>a,x:()=>o});var t=n(96540);const r={},s=t.createContext(r);function a(e){const i=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(s.Provider,{value:i},e.children)}},96608:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>l,contentTitle:()=>o,default:()=>y,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"core-concepts/identity/primary-keys","title":"Primary Keys","description":"Understanding primary keys and their role in Polymesh identities","source":"@site/docs/200-core-concepts/030-identity/020-primary-keys.md","sourceDirName":"200-core-concepts/030-identity","slug":"/identity/advanced/primary-keys","permalink":"/polymesh-documentation-site/identity/advanced/primary-keys","draft":false,"unlisted":false,"editUrl":"https://github.com/PolymeshAssociation/polymesh-documentation-site/edit/develop/docs/200-core-concepts/030-identity/020-primary-keys.md","tags":[{"inline":true,"label":"identity","permalink":"/polymesh-documentation-site/tags/identity"},{"inline":true,"label":"keys","permalink":"/polymesh-documentation-site/tags/keys"},{"inline":true,"label":"security","permalink":"/polymesh-documentation-site/tags/security"},{"inline":true,"label":"primary key","permalink":"/polymesh-documentation-site/tags/primary-key"}],"version":"current","sidebarPosition":20,"frontMatter":{"title":"Primary Keys","description":"Understanding primary keys and their role in Polymesh identities","id":"primary-keys","slug":"/identity/advanced/primary-keys","sidebar_label":"Primary Keys","tags":["identity","keys","security","primary key"]},"sidebar":"docs","previous":{"title":"Identity Verification","permalink":"/polymesh-documentation-site/identity/verification"},"next":{"title":"Permissioned Roles","permalink":"/polymesh-documentation-site/identity/roles"}}');var r=n(74848),s=n(28453);const a={title:"Primary Keys",description:"Understanding primary keys and their role in Polymesh identities",id:"primary-keys",slug:"/identity/advanced/primary-keys",sidebar_label:"Primary Keys",tags:["identity","keys","security","primary key"]},o=void 0,l={},d=[{value:"Overview",id:"overview",level:2},{value:"Supported Key Types",id:"supported-key-types",level:2},{value:"Core Capabilities and Operations",id:"core-capabilities-and-operations",level:2},{value:"Identity Management",id:"identity-management",level:3},{value:"Key Management Operations",id:"key-management-operations",level:3},{value:"Asset and Portfolio Control",id:"asset-and-portfolio-control",level:3},{value:"Key Management",id:"key-management",level:2},{value:"Security Best Practices",id:"security-best-practices",level:3},{value:"Key Rotation",id:"key-rotation",level:3},{value:"Advanced Configurations",id:"advanced-configurations",level:2},{value:"Multisig Primary Keys",id:"multisig-primary-keys",level:3},{value:"Smart Contract Primary Keys",id:"smart-contract-primary-keys",level:3},{value:"Guidelines for Usage",id:"guidelines-for-usage",level:2},{value:"When to Use Primary Key",id:"when-to-use-primary-key",level:3},{value:"When to Use Secondary Keys",id:"when-to-use-secondary-keys",level:3},{value:"Transaction Fee Considerations",id:"transaction-fee-considerations",level:3},{value:"Limitations",id:"limitations",level:3}];function c(e){const i={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(i.p,{children:"A primary key is the ultimate controller of a Polymesh identity. Each identity must have exactly one primary key that serves as its root of authority, able to manage all aspects of the identity including assets, permissions, and key management."}),"\n",(0,r.jsx)(i.admonition,{type:"warning",children:(0,r.jsxs)(i.p,{children:["Primary keys cannot be replaced if lost - they can only be rotated to a new key through a controlled ",(0,r.jsx)(i.a,{href:"/authorizations",children:"authorization"})," process requiring the primary key to initiate the rotation. Secure storage and backup of primary keys is critical."]})}),"\n",(0,r.jsx)(i.h2,{id:"supported-key-types",children:"Supported Key Types"}),"\n",(0,r.jsx)(i.p,{children:"A primary key can be one of the following:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["A public/private key pair using:","\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"ED25519"}),"\n",(0,r.jsx)(i.li,{children:"SR25519"}),"\n",(0,r.jsx)(i.li,{children:"ECDSA (secp256k1)"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["A ",(0,r.jsx)(i.a,{href:"/identity/advanced/multisig",children:"multisig"})," arrangement requiring multiple approvals"]}),"\n",(0,r.jsxs)(i.li,{children:["A ",(0,r.jsx)(i.a,{href:"/development/smart-contracts",children:"smart contract"})," that implements key functionality"]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"Each type has its own security and operational considerations:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Single Key Pairs"}),": Simplest to manage but rely on secure storage of a single private key"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Multisigs"}),": Enhanced security through requiring multiple approvals but more complex operationally"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Smart Contracts"}),": Enable programmatic control and complex logic but require careful implementation and testing"]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"core-capabilities-and-operations",children:"Core Capabilities and Operations"}),"\n",(0,r.jsx)(i.p,{children:"A primary key has unrestricted access to all identity functions and cannot have its permissions limited. The following operations can only be performed by primary keys:"}),"\n",(0,r.jsx)(i.h3,{id:"identity-management",children:"Identity Management"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["Creating and managing ",(0,r.jsx)(i.a,{href:"/identity/advanced/child",children:"child identities"})]}),"\n",(0,r.jsxs)(i.li,{children:["Adding, removing, and modifying permissions of ",(0,r.jsx)(i.a,{href:"/identity/advanced/secondary-keys",children:"secondary keys"})]}),"\n",(0,r.jsxs)(i.li,{children:["Freezing/unfreezing all secondary keys (using ",(0,r.jsx)(i.code,{children:"identity::freeze_secondary_keys"}),"/",(0,r.jsx)(i.code,{children:"identity::unfreeze_secondary_keys"}),")"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"key-management-operations",children:"Key Management Operations"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["Removing secondary keys (via ",(0,r.jsx)(i.code,{children:"identity::remove_secondary_keys"}),")"]}),"\n",(0,r.jsxs)(i.li,{children:["Setting and modifying secondary key permissions (via ",(0,r.jsx)(i.code,{children:"identity::set_secondary_key_permissions"}),")"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"asset-and-portfolio-control",children:"Asset and Portfolio Control"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["Creating ",(0,r.jsx)(i.a,{href:"/identity/advanced/multisig",children:"multisig"})," arrangements"]}),"\n",(0,r.jsx)(i.li,{children:"Transferring asset ownership between identities"}),"\n",(0,r.jsxs)(i.li,{children:["Granting ",(0,r.jsx)(i.a,{href:"/asset-agents",children:"agent permissions"})," for asset management"]}),"\n",(0,r.jsxs)(i.li,{children:["Authorizing ",(0,r.jsx)(i.a,{href:"/portfolios/custody",children:"portfolio custody"})," transfers"]}),"\n"]}),"\n",(0,r.jsx)(i.admonition,{type:"note",children:(0,r.jsxs)(i.p,{children:["While primary keys can execute any transaction the identity is authorized for, it's recommended to use properly permissioned ",(0,r.jsx)(i.a,{href:"/identity/advanced/secondary-keys",children:"secondary keys"})," for routine operations and reserve the primary key for critical identity management functions."]})}),"\n",(0,r.jsx)(i.admonition,{title:"Authorization Capabilities",type:"warning",children:(0,r.jsxs)(i.p,{children:["While primary keys have unrestricted access, ",(0,r.jsx)(i.a,{href:"/identity/advanced/secondary-keys",children:"secondary keys"})," with ",(0,r.jsx)(i.code,{children:"add_authorization"})," permissions can also create authorization requests for sensitive operations, including primary key rotation. Carefully audit which secondary keys have authorization permissions and consider them as having significant security implications for your identity."]})}),"\n",(0,r.jsx)(i.h2,{id:"key-management",children:"Key Management"}),"\n",(0,r.jsx)(i.h3,{id:"security-best-practices",children:"Security Best Practices"}),"\n",(0,r.jsx)(i.p,{children:"To protect your identity:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Store the primary key in cold storage (offline)"}),"\n",(0,r.jsxs)(i.li,{children:["Use ",(0,r.jsx)(i.a,{href:"/identity/advanced/secondary-keys",children:"secondary keys"})," with appropriate permissions for day-to-day operations"]}),"\n",(0,r.jsx)(i.li,{children:"Maintain secure backups of primary key material"}),"\n",(0,r.jsx)(i.li,{children:"Document key recovery procedures"}),"\n",(0,r.jsxs)(i.li,{children:["Consider using a ",(0,r.jsx)(i.a,{href:"/identity/advanced/multisig",children:"multisig"})," as your primary key for enhanced security"]}),"\n"]}),"\n",(0,r.jsx)(i.admonition,{title:"Key Recovery Option",type:"tip",children:(0,r.jsx)(i.p,{children:"If you're concerned about potential primary key loss or compromise, you can create a pending primary key rotation authorization request as a backup. While this creates another potential security vector if the backup key is compromised, it provides a recovery path if the primary key becomes inaccessible. Consider carefully securing both the primary and backup keys if using this approach."})}),"\n",(0,r.jsx)(i.h3,{id:"key-rotation",children:"Key Rotation"}),"\n",(0,r.jsxs)(i.p,{children:["Primary keys can be rotated through a controlled ",(0,r.jsx)(i.a,{href:"/authorizations",children:"authorization"})," process that requires:"]}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:["Creation of a rotation authorization (by primary key or secondary key with ",(0,r.jsx)(i.code,{children:"add_authorization"})," permissions)"]}),"\n",(0,r.jsx)(i.li,{children:"Acceptance by the new primary key"}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"The rotation process can be done in two ways:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["Standard rotation to a new key using an authorization type of ",(0,r.jsx)(i.code,{children:"RotatePrimaryKey"})]}),"\n",(0,r.jsxs)(i.li,{children:["Rotation to an existing secondary key using an authorization of type ",(0,r.jsx)(i.code,{children:"RotatePrimaryKeyToSecondary"})]}),"\n"]}),"\n",(0,r.jsx)(i.admonition,{type:"note",children:(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"During rotation, the current primary key remains in control until the process is complete. This ensures continuity of control over the identity."}),"\n",(0,r.jsxs)(i.li,{children:["When an authorization request of type ",(0,r.jsx)(i.code,{children:"RotatePrimaryKey"})," is enacted, the old primary key is detached from the onchain identity, preventing it from transacting. Any remaining POLYX held on that key will be locked until the key is associated with a new identity."]}),"\n"]})}),"\n",(0,r.jsx)(i.h2,{id:"advanced-configurations",children:"Advanced Configurations"}),"\n",(0,r.jsx)(i.h3,{id:"multisig-primary-keys",children:"Multisig Primary Keys"}),"\n",(0,r.jsx)(i.p,{children:"Using a multisig as your primary key provides additional security through requiring multiple approvals for critical operations. When setting up a multisig primary key:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Configure an appropriate number of required signatures"}),"\n",(0,r.jsx)(i.li,{children:"Carefully select trusted signers"}),"\n",(0,r.jsx)(i.li,{children:"Consider the operational impact of requiring multiple signatures"}),"\n",(0,r.jsx)(i.li,{children:"Plan for key recovery scenarios"}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"smart-contract-primary-keys",children:"Smart Contract Primary Keys"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.a,{href:"/development/smart-contracts",children:"Smart contracts"})," can serve as primary keys, enabling programmatic control over identity management. This configuration:"]}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Allows encoding complex management logic"}),"\n",(0,r.jsx)(i.li,{children:"Can implement time-locks or other controls"}),"\n",(0,r.jsx)(i.li,{children:"Must include logic to handle authorizations"}),"\n",(0,r.jsx)(i.li,{children:"Should be thoroughly tested and audited"}),"\n",(0,r.jsx)(i.li,{children:"Can implement upgrade mechanisms through proxy patterns"}),"\n"]}),"\n",(0,r.jsxs)(i.admonition,{type:"note",children:[(0,r.jsx)(i.p,{children:"Smart contract upgrades require special consideration since Polymesh native assets are associated with identities and not the smart contract address. You can use key rotation as part of your upgrade strategy:"}),(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsx)(i.li,{children:"Deploy the new contract version"}),"\n",(0,r.jsx)(i.li,{children:"Use the old contract to authorize rotation to the new contract"}),"\n",(0,r.jsx)(i.li,{children:"Execute the rotation once the new contract is validated"}),"\n"]}),(0,r.jsx)(i.p,{children:"This process ensures continuous access to identity-associated assets during upgrades."})]}),"\n",(0,r.jsxs)(i.admonition,{type:"warning",children:[(0,r.jsx)(i.p,{children:"Smart contract interactions with the chain runtime can potentially be broken in a major chain upgrade. To mitigate this:"}),(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["Use the ",(0,r.jsx)(i.a,{href:"/development/smart-contracts/#upgradable-polymesh-ink-contract",children:"Upgradable Polymesh Ink Contract"})," for native chain interactions"]}),"\n",(0,r.jsx)(i.li,{children:"Implement a proxy pattern for contract upgrades"}),"\n",(0,r.jsx)(i.li,{children:"Test thoroughly before each network upgrade"}),"\n"]})]}),"\n",(0,r.jsx)(i.h2,{id:"guidelines-for-usage",children:"Guidelines for Usage"}),"\n",(0,r.jsx)(i.h3,{id:"when-to-use-primary-key",children:"When to Use Primary Key"}),"\n",(0,r.jsx)(i.p,{children:"Use your primary key for:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Adding or removing secondary keys"}),"\n",(0,r.jsx)(i.li,{children:"Modifying permissions of secondary keys"}),"\n",(0,r.jsx)(i.li,{children:"Creating child identities"}),"\n",(0,r.jsx)(i.li,{children:"Critical identity management operations"}),"\n",(0,r.jsx)(i.li,{children:"Key rotation procedures"}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"when-to-use-secondary-keys",children:"When to Use Secondary Keys"}),"\n",(0,r.jsxs)(i.p,{children:["Use ",(0,r.jsx)(i.a,{href:"/identity/advanced/secondary-keys",children:"secondary keys"})," for:"]}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Day-to-day operations"}),"\n",(0,r.jsx)(i.li,{children:"Portfolio management"}),"\n",(0,r.jsx)(i.li,{children:"Asset transactions"}),"\n",(0,r.jsx)(i.li,{children:"Regular business activities"}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"transaction-fee-considerations",children:"Transaction Fee Considerations"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Primary keys need POLYX for transaction fees"}),"\n",(0,r.jsx)(i.li,{children:"Cannot access POLYX balances of secondary keys"}),"\n",(0,r.jsxs)(i.li,{children:["Consider setting up ",(0,r.jsx)(i.a,{href:"/accounts/subsidized",children:"subsidized relationships"})," for fee management"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"limitations",children:"Limitations"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Only one primary key per identity"}),"\n",(0,r.jsx)(i.li,{children:"Cannot be restricted in permissions"}),"\n",(0,r.jsx)(i.li,{children:"Cannot be replaced without proper rotation"}),"\n",(0,r.jsx)(i.li,{children:"Must maintain sufficient POLYX for transaction fees"}),"\n",(0,r.jsx)(i.li,{children:"Cannot act as a secondary key for another identity"}),"\n"]})]})}function y(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);