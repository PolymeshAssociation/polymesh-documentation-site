"use strict";(self.webpackChunkpolymesh_developer_documentation=self.webpackChunkpolymesh_developer_documentation||[]).push([[19604],{28453:(e,s,t)=>{t.d(s,{R:()=>c,x:()=>o});var n=t(96540);const r={},i=n.createContext(r);function c(e){const s=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),n.createElement(i.Provider,{value:s},e.children)}},54840:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>c,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"api/procedures/types/interfaces/RegisterIdentityParams","title":"Interface: RegisterIdentityParams","description":"Defined in832","source":"@site/sdk-docs_versioned_docs/version-v29.0.x/api/procedures/types/interfaces/RegisterIdentityParams.mdx","sourceDirName":"api/procedures/types/interfaces","slug":"/api/procedures/types/interfaces/RegisterIdentityParams","permalink":"/polymesh-documentation-site/sdk-docs/api/procedures/types/interfaces/RegisterIdentityParams","draft":false,"unlisted":false,"tags":[],"version":"v29.0.x","frontMatter":{"sidebar_label":"RegisterIdentityParams"},"sidebar":"defaultSidebar","previous":{"title":"RegisterCustomClaimTypeParams","permalink":"/polymesh-documentation-site/sdk-docs/api/procedures/types/interfaces/RegisterCustomClaimTypeParams"},"next":{"title":"RemoveAssetRequirementParams","permalink":"/polymesh-documentation-site/sdk-docs/api/procedures/types/interfaces/RemoveAssetRequirementParams"}}');var r=t(74848),i=t(28453);const c={sidebar_label:"RegisterIdentityParams"},o="Interface: RegisterIdentityParams",d={},a=[{value:"Properties",id:"properties",level:2},{value:"createCdd?",id:"createcdd",level:3},{value:"expiry?",id:"expiry",level:3},{value:"secondaryAccounts?",id:"secondaryaccounts",level:3},{value:"Note",id:"note",level:4},{value:"targetAccount",id:"targetaccount",level:3}];function l(e){const s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",strong:"strong",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"interface-registeridentityparams",children:"Interface: RegisterIdentityParams"})}),"\n",(0,r.jsxs)(s.p,{children:["Defined in: ",(0,r.jsx)(s.a,{href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/bee6a2fe7a8ce5db42a6982e793782182cde2153/src/api/procedures/types.ts#L832",children:"src/api/procedures/types.ts:832"})]}),"\n",(0,r.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsx)(s.h3,{id:"createcdd",children:"createCdd?"}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"optional"})," ",(0,r.jsx)(s.strong,{children:"createCdd"}),": ",(0,r.jsx)(s.code,{children:"boolean"})]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["Defined in: ",(0,r.jsx)(s.a,{href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/bee6a2fe7a8ce5db42a6982e793782182cde2153/src/api/procedures/types.ts#L845",children:"src/api/procedures/types.ts:845"})]}),"\n",(0,r.jsx)(s.p,{children:"(optional) also issue a CDD claim for the created DID, completing the onboarding process for the Account"}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"expiry",children:"expiry?"}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"optional"})," ",(0,r.jsx)(s.strong,{children:"expiry"}),": ",(0,r.jsx)(s.code,{children:"Date"})]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["Defined in: ",(0,r.jsx)(s.a,{href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/bee6a2fe7a8ce5db42a6982e793782182cde2153/src/api/procedures/types.ts#L849",children:"src/api/procedures/types.ts:849"})]}),"\n",(0,r.jsxs)(s.p,{children:["(optional) when the generated CDD claim should expire, ",(0,r.jsx)(s.code,{children:"createCdd"})," must be true if specified"]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"secondaryaccounts",children:"secondaryAccounts?"}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"optional"})," ",(0,r.jsx)(s.strong,{children:"secondaryAccounts"}),": ",(0,r.jsx)(s.a,{href:"/polymesh-documentation-site/sdk-docs/types/utils/type-aliases/Modify",children:(0,r.jsx)(s.code,{children:"Modify"})}),"<",(0,r.jsx)(s.a,{href:"/polymesh-documentation-site/sdk-docs/api/entities/types/interfaces/PermissionedAccount",children:(0,r.jsx)(s.code,{children:"PermissionedAccount"})}),", { ",(0,r.jsx)(s.code,{children:"permissions"}),": ",(0,r.jsx)(s.a,{href:"/polymesh-documentation-site/sdk-docs/api/entities/types/type-aliases/PermissionsLike",children:(0,r.jsx)(s.code,{children:"PermissionsLike"})}),"; }>[]"]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["Defined in: ",(0,r.jsx)(s.a,{href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/bee6a2fe7a8ce5db42a6982e793782182cde2153/src/api/procedures/types.ts#L841",children:"src/api/procedures/types.ts:841"})]}),"\n",(0,r.jsx)(s.p,{children:"(optional) secondary accounts for the new Identity with their corresponding permissions."}),"\n",(0,r.jsx)(s.h4,{id:"note",children:"Note"}),"\n",(0,r.jsx)(s.p,{children:"Each Account will need to accept the generated authorizations before being linked to the Identity"}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"targetaccount",children:"targetAccount"}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"targetAccount"}),": ",(0,r.jsx)(s.code,{children:"string"})," | ",(0,r.jsx)(s.a,{href:"/polymesh-documentation-site/sdk-docs/api/entities/Account/classes/Account",children:(0,r.jsx)(s.code,{children:"Account"})})]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["Defined in: ",(0,r.jsx)(s.a,{href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/bee6a2fe7a8ce5db42a6982e793782182cde2153/src/api/procedures/types.ts#L836",children:"src/api/procedures/types.ts:836"})]}),"\n",(0,r.jsx)(s.p,{children:"The Account that should function as the primary key of the newly created Identity. Can be ss58 encoded address or an instance of Account"})]})}function p(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);