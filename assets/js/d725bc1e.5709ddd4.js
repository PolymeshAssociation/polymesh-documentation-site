"use strict";(self.webpackChunkpolymesh_developer_documentation=self.webpackChunkpolymesh_developer_documentation||[]).push([[52522],{3905:(e,t,s)=>{s.d(t,{Zo:()=>c,kt:()=>f});var r=s(67294);function n(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}function o(e,t){var s=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),s.push.apply(s,r)}return s}function i(e){for(var t=1;t<arguments.length;t++){var s=null!=arguments[t]?arguments[t]:{};t%2?o(Object(s),!0).forEach((function(t){n(e,t,s[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(s)):o(Object(s)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(s,t))}))}return e}function a(e,t){if(null==e)return{};var s,r,n=function(e,t){if(null==e)return{};var s,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)s=o[r],t.indexOf(s)>=0||(n[s]=e[s]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)s=o[r],t.indexOf(s)>=0||Object.prototype.propertyIsEnumerable.call(e,s)&&(n[s]=e[s])}return n}var l=r.createContext({}),u=function(e){var t=r.useContext(l),s=t;return e&&(s="function"==typeof e?e(t):i(i({},t),e)),s},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var s=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),d=u(s),p=n,f=d["".concat(l,".").concat(p)]||d[p]||m[p]||o;return s?r.createElement(f,i(i({ref:t},c),{},{components:s})):r.createElement(f,i({ref:t},c))}));function f(e,t){var s=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=s.length,i=new Array(o);i[0]=p;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a[d]="string"==typeof e?e:n,i[1]=a;for(var u=2;u<o;u++)i[u]=s[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,s)}p.displayName="MDXCreateElement"},44691:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>u});var r=s(87462),n=(s(67294),s(3905));const o={id:"TrustedClaimIssuers",title:"Module: TrustedClaimIssuers",sidebar_label:"TrustedClaimIssuers"},i=void 0,a={unversionedId:"modules/API/Entities/Asset/Compliance/TrustedClaimIssuers/TrustedClaimIssuers",id:"version-22.0.x/modules/API/Entities/Asset/Compliance/TrustedClaimIssuers/TrustedClaimIssuers",title:"Module: TrustedClaimIssuers",description:"Classes",source:"@site/sdk-docs_versioned_docs/version-22.0.x/modules/API/Entities/Asset/Compliance/TrustedClaimIssuers/TrustedClaimIssuers.md",sourceDirName:"modules/API/Entities/Asset/Compliance/TrustedClaimIssuers",slug:"/modules/API/Entities/Asset/Compliance/TrustedClaimIssuers/",permalink:"/polymesh-documentation-site/sdk-docs/22.0.x/modules/API/Entities/Asset/Compliance/TrustedClaimIssuers/",draft:!1,tags:[],version:"22.0.x",frontMatter:{id:"TrustedClaimIssuers",title:"Module: TrustedClaimIssuers",sidebar_label:"TrustedClaimIssuers"},sidebar:"defaultSidebar",previous:{title:"Requirements",permalink:"/polymesh-documentation-site/sdk-docs/22.0.x/modules/API/Entities/Asset/Compliance/Requirements/"},next:{title:"CorporateActions",permalink:"/polymesh-documentation-site/sdk-docs/22.0.x/modules/API/Entities/Asset/CorporateActions/"}},l={},u=[{value:"Classes",id:"classes",level:2}],c={toc:u};function d(e){let{components:t,...s}=e;return(0,n.kt)("wrapper",(0,r.Z)({},c,s,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"classes"},"Classes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/polymesh-documentation-site/sdk-docs/22.0.x/classes/API/Entities/Asset/Compliance/TrustedClaimIssuers/"},"TrustedClaimIssuers"))))}d.isMDXComponent=!0}}]);