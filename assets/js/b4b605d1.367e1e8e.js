"use strict";(self.webpackChunkpolymesh_developer_documentation=self.webpackChunkpolymesh_developer_documentation||[]).push([[52217],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>y});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},s=Object.keys(e);for(i=0;i<s.length;i++)n=s[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(i=0;i<s.length;i++)n=s[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=i.createContext({}),p=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return i.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,c=r(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,y=d["".concat(l,".").concat(m)]||d[m]||u[m]||s;return n?i.createElement(y,o(o({ref:t},c),{},{components:n})):i.createElement(y,o({ref:t},c))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=m;var r={};for(var l in t)hasOwnProperty.call(t,l)&&(r[l]=t[l]);r.originalType=e,r[d]="string"==typeof e?e:a,o[1]=r;for(var p=2;p<s;p++)o[p]=n[p];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},16260:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>r,toc:()=>p});var i=n(87462),a=(n(67294),n(3905));const s={id:"Types",title:"Module: Asset Types",sidebar_label:"Types"},o=void 0,r={unversionedId:"modules/API/Entities/Asset/Types/Types",id:"version-23.0.x/modules/API/Entities/Asset/Types/Types",title:"Module: Asset Types",description:"Interfaces",source:"@site/sdk-docs_versioned_docs/version-23.0.x/modules/API/Entities/Asset/Types/Types.md",sourceDirName:"modules/API/Entities/Asset/Types",slug:"/modules/API/Entities/Asset/Types/",permalink:"/polymesh-documentation-site/sdk-docs/modules/API/Entities/Asset/Types/",draft:!1,tags:[],version:"23.0.x",frontMatter:{id:"Types",title:"Module: Asset Types",sidebar_label:"Types"},sidebar:"defaultSidebar",previous:{title:"NftCollection",permalink:"/polymesh-documentation-site/sdk-docs/modules/API/Entities/Asset/NonFungible/NftCollection/"},next:{title:"AuthorizationRequest",permalink:"/polymesh-documentation-site/sdk-docs/modules/API/Entities/AuthorizationRequest/"}},l={},p=[{value:"Interfaces",id:"interfaces",level:2},{value:"References",id:"references",level:2},{value:"CaCheckpointType",id:"cacheckpointtype",level:3},{value:"CorporateActionDefaultConfig",id:"corporateactiondefaultconfig",level:3},{value:"InputCaCheckpoint",id:"inputcacheckpoint",level:3},{value:"Type Aliases",id:"type-aliases",level:2},{value:"Asset",id:"asset",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"CollectionKey",id:"collectionkey",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"MetadataKeyId",id:"metadatakeyid",level:3},{value:"Defined in",id:"defined-in-2",level:4}],c={toc:p};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"interfaces"},"Interfaces"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/polymesh-documentation-site/sdk-docs/interfaces/API/Entities/Asset/Types/AgentWithGroup/"},"AgentWithGroup")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/polymesh-documentation-site/sdk-docs/interfaces/API/Entities/Asset/Types/AssetDetails/"},"AssetDetails")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/polymesh-documentation-site/sdk-docs/interfaces/API/Entities/Asset/Types/HistoricAssetTransaction/"},"HistoricAssetTransaction")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/polymesh-documentation-site/sdk-docs/interfaces/API/Entities/Asset/Types/IdentityBalance/"},"IdentityBalance")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/polymesh-documentation-site/sdk-docs/interfaces/API/Entities/Asset/Types/NftMetadata/"},"NftMetadata")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/polymesh-documentation-site/sdk-docs/interfaces/API/Entities/Asset/Types/TransferBreakdown/"},"TransferBreakdown")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/polymesh-documentation-site/sdk-docs/interfaces/API/Entities/Asset/Types/TransferRestrictionResult/"},"TransferRestrictionResult")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/polymesh-documentation-site/sdk-docs/interfaces/API/Entities/Asset/Types/UniqueIdentifiers/"},"UniqueIdentifiers"))),(0,a.kt)("h2",{id:"references"},"References"),(0,a.kt)("h3",{id:"cacheckpointtype"},"CaCheckpointType"),(0,a.kt)("p",null,"Re-exports ",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/enums/API/Entities/Asset/Fungible/Checkpoints/Types/CaCheckpointType/"},"CaCheckpointType")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"corporateactiondefaultconfig"},"CorporateActionDefaultConfig"),(0,a.kt)("p",null,"Re-exports ",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/interfaces/API/Entities/Asset/Fungible/CorporateActions/Types/CorporateActionDefaultConfig/"},"CorporateActionDefaultConfig")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"inputcacheckpoint"},"InputCaCheckpoint"),(0,a.kt)("p",null,"Re-exports ",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/modules/API/Entities/Asset/Fungible/Checkpoints/Types/#inputcacheckpoint"},"InputCaCheckpoint")),(0,a.kt)("h2",{id:"type-aliases"},"Type Aliases"),(0,a.kt)("h3",{id:"asset"},"Asset"),(0,a.kt)("p",null,"\u01ac ",(0,a.kt)("strong",{parentName:"p"},"Asset"),": ",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/Asset/Fungible/FungibleAsset"},(0,a.kt)("inlineCode",{parentName:"a"},"FungibleAsset"))," ","|"," ",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/Asset/NonFungible/NftCollection/"},(0,a.kt)("inlineCode",{parentName:"a"},"NftCollection"))),(0,a.kt)("p",null,"Represents a generic asset on chain. Common functionality (e.g. documents) can be interacted with directly. For type specific functionality (e.g. issue) the type can\nbe narrowed via ",(0,a.kt)("inlineCode",{parentName:"p"},"instanceof")," operator, or by using a more specific getter"),(0,a.kt)("h4",{id:"defined-in"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/720afb69c/src/api/entities/Asset/types.ts#L26"},"api/entities/Asset/types.ts:26")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"collectionkey"},"CollectionKey"),(0,a.kt)("p",null,"\u01ac ",(0,a.kt)("strong",{parentName:"p"},"CollectionKey"),": ",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/modules/API/Entities/Asset/Types/#metadatakeyid"},(0,a.kt)("inlineCode",{parentName:"a"},"MetadataKeyId"))," & ",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/interfaces/API/Entities/MetadataEntry/Types/MetadataDetails/"},(0,a.kt)("inlineCode",{parentName:"a"},"MetadataDetails"))),(0,a.kt)("p",null,"A metadata entry for which each NFT in the collection must have an entry for"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Note"))),(0,a.kt)("p",null," each NFT ",(0,a.kt)("strong",{parentName:"p"},"must")," have an entry for each metadata value, the entry ",(0,a.kt)("strong",{parentName:"p"},"should")," comply with the relevant spec"),(0,a.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/720afb69c/src/api/entities/Asset/types.ts#L127"},"api/entities/Asset/types.ts:127")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"metadatakeyid"},"MetadataKeyId"),(0,a.kt)("p",null,"\u01ac ",(0,a.kt)("strong",{parentName:"p"},"MetadataKeyId"),": { ",(0,a.kt)("inlineCode",{parentName:"p"},"id"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"BigNumber")," ; ",(0,a.kt)("inlineCode",{parentName:"p"},"type"),": ",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/enums/API/Entities/MetadataEntry/Types/MetadataType/#global"},(0,a.kt)("inlineCode",{parentName:"a"},"Global")),"  } ","|"," { ",(0,a.kt)("inlineCode",{parentName:"p"},"id"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"BigNumber")," ; ",(0,a.kt)("inlineCode",{parentName:"p"},"ticker"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string")," ; ",(0,a.kt)("inlineCode",{parentName:"p"},"type"),": ",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/enums/API/Entities/MetadataEntry/Types/MetadataType/#local"},(0,a.kt)("inlineCode",{parentName:"a"},"Local")),"  }"),(0,a.kt)("p",null,"The data needed to uniquely identify a metadata specification"),(0,a.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/720afb69c/src/api/entities/Asset/types.ts#L100"},"api/entities/Asset/types.ts:100")))}d.isMDXComponent=!0}}]);