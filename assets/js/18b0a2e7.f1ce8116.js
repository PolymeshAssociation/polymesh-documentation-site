"use strict";(self.webpackChunkpolymesh_developer_documentation=self.webpackChunkpolymesh_developer_documentation||[]).push([[2663],{28453:(e,s,t)=>{t.d(s,{R:()=>n,x:()=>r});var a=t(96540);const i={},d=a.createContext(i);function n(e){const s=a.useContext(d);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:n(e.components),a.createElement(d.Provider,{value:s},e.children)}},45483:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>n,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"api/entities/Asset/Base/Metadata/classes/Metadata","title":"Class: Metadata","description":"Defined in37","source":"@site/sdk-docs_versioned_docs/version-v29.0.x/api/entities/Asset/Base/Metadata/classes/Metadata.mdx","sourceDirName":"api/entities/Asset/Base/Metadata/classes","slug":"/api/entities/Asset/Base/Metadata/classes/Metadata","permalink":"/polymesh-documentation-site/sdk-docs/api/entities/Asset/Base/Metadata/classes/Metadata","draft":false,"unlisted":false,"tags":[],"version":"v29.0.x","frontMatter":{"sidebar_label":"Metadata"},"sidebar":"defaultSidebar","previous":{"title":"Metadata","permalink":"/polymesh-documentation-site/sdk-docs/api/entities/Asset/Base/Metadata/"},"next":{"title":"Permissions","permalink":"/polymesh-documentation-site/sdk-docs/api/entities/Asset/Base/Permissions/"}}');var i=t(74848),d=t(28453);const n={sidebar_label:"Metadata"},r="Class: Metadata",c={},l=[{value:"Extends",id:"extends",level:2},{value:"Methods",id:"methods",level:2},{value:"get()",id:"get",level:3},{value:"Returns",id:"returns",level:4},{value:"Note",id:"note",level:4},{value:"getDetails()",id:"getdetails",level:3},{value:"Returns",id:"returns-1",level:4},{value:"getOne()",id:"getone",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Throws",id:"throws",level:4},{value:"register()",id:"register",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Note",id:"note-1",level:4},{value:"Note",id:"note-2",level:4}];function o(e){const s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,d.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"class-metadata",children:"Class: Metadata"})}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/bee6a2fe7a8ce5db42a6982e793782182cde2153/src/api/entities/Asset/Base/Metadata/index.ts#L37",children:"src/api/entities/Asset/Base/Metadata/index.ts:37"})]}),"\n",(0,i.jsx)(s.p,{children:"Handles all Asset Metadata related functionality"}),"\n",(0,i.jsx)(s.h2,{id:"extends",children:"Extends"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"Namespace"}),"<",(0,i.jsx)(s.a,{href:"/polymesh-documentation-site/sdk-docs/api/entities/Asset/Base/BaseAsset/classes/BaseAsset",children:(0,i.jsx)(s.code,{children:"BaseAsset"})}),">"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(s.h3,{id:"get",children:"get()"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"get"}),"(): ",(0,i.jsx)(s.code,{children:"Promise"}),"<",(0,i.jsx)(s.a,{href:"/polymesh-documentation-site/sdk-docs/api/entities/MetadataEntry/classes/MetadataEntry",children:(0,i.jsx)(s.code,{children:"MetadataEntry"})}),"[]>"]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/bee6a2fe7a8ce5db42a6982e793782182cde2153/src/api/entities/Asset/Base/Metadata/index.ts#L63",children:"src/api/entities/Asset/Base/Metadata/index.ts:63"})]}),"\n",(0,i.jsx)(s.p,{children:"Retrieve all (global + local) the MetadataEntry for this Asset"}),"\n",(0,i.jsx)(s.h4,{id:"returns",children:"Returns"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"Promise"}),"<",(0,i.jsx)(s.a,{href:"/polymesh-documentation-site/sdk-docs/api/entities/MetadataEntry/classes/MetadataEntry",children:(0,i.jsx)(s.code,{children:"MetadataEntry"})}),"[]>"]}),"\n",(0,i.jsx)(s.h4,{id:"note",children:"Note"}),"\n",(0,i.jsx)(s.p,{children:"this returns all available metadata entries for this Asset, with or without any value being associated with the metadata"}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"getdetails",children:"getDetails()"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"getDetails"}),"(): ",(0,i.jsx)(s.code,{children:"Promise"}),"<",(0,i.jsx)(s.a,{href:"/polymesh-documentation-site/sdk-docs/api/entities/MetadataEntry/types/type-aliases/MetadataWithValue",children:(0,i.jsx)(s.code,{children:"MetadataWithValue"})}),"[]>"]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/bee6a2fe7a8ce5db42a6982e793782182cde2153/src/api/entities/Asset/Base/Metadata/index.ts#L177",children:"src/api/entities/Asset/Base/Metadata/index.ts:177"})]}),"\n",(0,i.jsx)(s.p,{children:"Retrieve all (local + global) the MetadataEntry details whose value is set for this Asset"}),"\n",(0,i.jsx)(s.h4,{id:"returns-1",children:"Returns"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"Promise"}),"<",(0,i.jsx)(s.a,{href:"/polymesh-documentation-site/sdk-docs/api/entities/MetadataEntry/types/type-aliases/MetadataWithValue",children:(0,i.jsx)(s.code,{children:"MetadataWithValue"})}),"[]>"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"getone",children:"getOne()"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"getOne"}),"(",(0,i.jsx)(s.code,{children:"args"}),": ",(0,i.jsx)(s.code,{children:"object"}),"): ",(0,i.jsx)(s.code,{children:"Promise"}),"<",(0,i.jsx)(s.a,{href:"/polymesh-documentation-site/sdk-docs/api/entities/MetadataEntry/classes/MetadataEntry",children:(0,i.jsx)(s.code,{children:"MetadataEntry"})}),">"]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/bee6a2fe7a8ce5db42a6982e793782182cde2153/src/api/entities/Asset/Base/Metadata/index.ts#L109",children:"src/api/entities/Asset/Base/Metadata/index.ts:109"})]}),"\n",(0,i.jsx)(s.p,{children:"Retrieve a single MetadataEntry by its ID and type"}),"\n",(0,i.jsx)(s.h4,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)("table",{children:[(0,i.jsx)("thead",{children:(0,i.jsxs)("tr",{children:[(0,i.jsx)("th",{children:"Parameter"}),(0,i.jsx)("th",{children:"Type"})]})}),(0,i.jsxs)("tbody",{children:[(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"args"})})}),(0,i.jsx)("td",{children:(0,i.jsxs)(s.p,{children:["{ ",(0,i.jsx)(s.code,{children:"id"}),": ",(0,i.jsx)(s.code,{children:"BigNumber"}),"; ",(0,i.jsx)(s.code,{children:"type"}),": ",(0,i.jsx)(s.a,{href:"/polymesh-documentation-site/sdk-docs/api/entities/MetadataEntry/types/enumerations/MetadataType",children:(0,i.jsx)(s.code,{children:"MetadataType"})}),"; }"]})})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"args.id"})})}),(0,i.jsx)("td",{children:(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"BigNumber"})})})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"args.type"})})}),(0,i.jsx)("td",{children:(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/polymesh-documentation-site/sdk-docs/api/entities/MetadataEntry/types/enumerations/MetadataType",children:(0,i.jsx)(s.code,{children:"MetadataType"})})})})]})]})]}),"\n",(0,i.jsx)(s.h4,{id:"returns-2",children:"Returns"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"Promise"}),"<",(0,i.jsx)(s.a,{href:"/polymesh-documentation-site/sdk-docs/api/entities/MetadataEntry/classes/MetadataEntry",children:(0,i.jsx)(s.code,{children:"MetadataEntry"})}),">"]}),"\n",(0,i.jsx)(s.h4,{id:"throws",children:"Throws"}),"\n",(0,i.jsx)(s.p,{children:"if there is no MetadataEntry with the passed ID and specified type"}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"register",children:"register()"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"register"}),"(",(0,i.jsx)(s.code,{children:"args"}),": ",(0,i.jsx)(s.a,{href:"/polymesh-documentation-site/sdk-docs/api/procedures/types/type-aliases/RegisterMetadataParams",children:(0,i.jsx)(s.code,{children:"RegisterMetadataParams"})}),", ",(0,i.jsx)(s.code,{children:"opts?"}),": ",(0,i.jsx)(s.a,{href:"/polymesh-documentation-site/sdk-docs/api/procedures/types/interfaces/ProcedureOpts",children:(0,i.jsx)(s.code,{children:"ProcedureOpts"})}),"): ",(0,i.jsx)(s.code,{children:"Promise"}),"<",(0,i.jsx)(s.a,{href:"/polymesh-documentation-site/sdk-docs/api/procedures/types/type-aliases/GenericPolymeshTransaction",children:(0,i.jsx)(s.code,{children:"GenericPolymeshTransaction"})}),"<",(0,i.jsx)(s.a,{href:"/polymesh-documentation-site/sdk-docs/api/entities/MetadataEntry/classes/MetadataEntry",children:(0,i.jsx)(s.code,{children:"MetadataEntry"})}),", ",(0,i.jsx)(s.a,{href:"/polymesh-documentation-site/sdk-docs/api/entities/MetadataEntry/classes/MetadataEntry",children:(0,i.jsx)(s.code,{children:"MetadataEntry"})}),">>"]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/bee6a2fe7a8ce5db42a6982e793782182cde2153/src/api/entities/Asset/Base/Metadata/index.ts#L56",children:"src/api/entities/Asset/Base/Metadata/index.ts:56"})]}),"\n",(0,i.jsxs)(s.p,{children:["Register a metadata for this Asset and optionally set its value.\nThe metadata value can be set by passing ",(0,i.jsx)(s.code,{children:"value"})," parameter and specifying other optional ",(0,i.jsx)(s.code,{children:"details"})," about the value"]}),"\n",(0,i.jsx)(s.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,i.jsxs)("table",{children:[(0,i.jsx)("thead",{children:(0,i.jsxs)("tr",{children:[(0,i.jsx)("th",{children:"Parameter"}),(0,i.jsx)("th",{children:"Type"})]})}),(0,i.jsxs)("tbody",{children:[(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"args"})})}),(0,i.jsx)("td",{children:(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/polymesh-documentation-site/sdk-docs/api/procedures/types/type-aliases/RegisterMetadataParams",children:(0,i.jsx)(s.code,{children:"RegisterMetadataParams"})})})})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"opts?"})})}),(0,i.jsx)("td",{children:(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"/polymesh-documentation-site/sdk-docs/api/procedures/types/interfaces/ProcedureOpts",children:(0,i.jsx)(s.code,{children:"ProcedureOpts"})})})})]})]})]}),"\n",(0,i.jsx)(s.h4,{id:"returns-3",children:"Returns"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"Promise"}),"<",(0,i.jsx)(s.a,{href:"/polymesh-documentation-site/sdk-docs/api/procedures/types/type-aliases/GenericPolymeshTransaction",children:(0,i.jsx)(s.code,{children:"GenericPolymeshTransaction"})}),"<",(0,i.jsx)(s.a,{href:"/polymesh-documentation-site/sdk-docs/api/entities/MetadataEntry/classes/MetadataEntry",children:(0,i.jsx)(s.code,{children:"MetadataEntry"})}),", ",(0,i.jsx)(s.a,{href:"/polymesh-documentation-site/sdk-docs/api/entities/MetadataEntry/classes/MetadataEntry",children:(0,i.jsx)(s.code,{children:"MetadataEntry"})}),">>"]}),"\n",(0,i.jsx)(s.h4,{id:"note-1",children:"Note"}),"\n",(0,i.jsxs)(s.p,{children:["This registers a metadata of type ",(0,i.jsx)(s.code,{children:"Local"})]}),"\n",(0,i.jsx)(s.h4,{id:"note-2",children:"Note"}),"\n",(0,i.jsxs)(s.p,{children:["this method is of type ",(0,i.jsx)(s.a,{href:"/polymesh-documentation-site/sdk-docs/api/procedures/types/interfaces/ProcedureMethod",children:"ProcedureMethod"}),", which means you can call ",(0,i.jsx)(s.a,{href:"/polymesh-documentation-site/sdk-docs/api/procedures/types/interfaces/ProcedureMethod#checkauthorization",children:"register.checkAuthorization"})," on it to see whether the signing Account and Identity have the required roles and permissions to run it"]})]})}function h(e={}){const{wrapper:s}={...(0,d.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}}}]);