"use strict";(self.webpackChunkpolymesh_developer_documentation=self.webpackChunkpolymesh_developer_documentation||[]).push([[97373],{28453:(e,s,n)=>{n.d(s,{R:()=>a,x:()=>l});var t=n(96540);const o={},i=t.createContext(o);function a(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),t.createElement(i.Provider,{value:s},e.children)}},72742:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>r,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"api/entities/MultiSigProposal/types/type-aliases/AnyJson","title":"Type Alias: AnyJson","description":"AnyJson = string \\\\| number \\\\| boolean \\\\| null \\\\| undefined \\\\| AnyJson[] \\\\| \\\\{\\\\[index AnyJson; \\\\}","source":"@site/sdk-docs_versioned_docs/version-v29.0.x/api/entities/MultiSigProposal/types/type-aliases/AnyJson.mdx","sourceDirName":"api/entities/MultiSigProposal/types/type-aliases","slug":"/api/entities/MultiSigProposal/types/type-aliases/AnyJson","permalink":"/polymesh-documentation-site/sdk-docs/api/entities/MultiSigProposal/types/type-aliases/AnyJson","draft":false,"unlisted":false,"tags":[],"version":"v29.0.x","frontMatter":{"sidebar_label":"AnyJson"},"sidebar":"defaultSidebar","previous":{"title":"MultiSigProposalDetails","permalink":"/polymesh-documentation-site/sdk-docs/api/entities/MultiSigProposal/types/interfaces/MultiSigProposalDetails"},"next":{"title":"MultiSigProposalVote","permalink":"/polymesh-documentation-site/sdk-docs/api/entities/MultiSigProposal/types/type-aliases/MultiSigProposalVote"}}');var o=n(74848),i=n(28453);const a={sidebar_label:"AnyJson"},l="Type Alias: AnyJson",r={},c=[];function d(e){const s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",header:"header",p:"p",strong:"strong",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.header,{children:(0,o.jsx)(s.h1,{id:"type-alias-anyjson",children:"Type Alias: AnyJson"})}),"\n",(0,o.jsxs)(s.blockquote,{children:["\n",(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.strong,{children:"AnyJson"})," = ",(0,o.jsx)(s.code,{children:"string"})," | ",(0,o.jsx)(s.code,{children:"number"})," | ",(0,o.jsx)(s.code,{children:"boolean"})," | ",(0,o.jsx)(s.code,{children:"null"})," | ",(0,o.jsx)(s.code,{children:"undefined"})," | ",(0,o.jsx)(s.code,{children:"AnyJson"}),"[] | {[",(0,o.jsx)(s.code,{children:"index"}),": ",(0,o.jsx)(s.code,{children:"string"}),"]: ",(0,o.jsx)(s.code,{children:"AnyJson"}),"; }"]}),"\n"]}),"\n",(0,o.jsxs)(s.p,{children:["Defined in: ",(0,o.jsx)(s.a,{href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/bee6a2fe7a8ce5db42a6982e793782182cde2153/src/api/entities/MultiSigProposal/types.ts#L18",children:"src/api/entities/MultiSigProposal/types.ts:18"})]}),"\n",(0,o.jsx)(s.p,{children:"Represents JSON serializable data. Used for cases when the value can take on many types, like args for a MultiSig proposal."})]})}function p(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);