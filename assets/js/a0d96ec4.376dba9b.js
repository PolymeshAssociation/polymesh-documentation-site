"use strict";(self.webpackChunkpolymesh_developer_documentation=self.webpackChunkpolymesh_developer_documentation||[]).push([[41555],{53744:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"interfaces/API/Procedures/Types/SetAssetRequirementsParams/SetAssetRequirementsParams","title":"Interface: SetAssetRequirementsParams","description":"api/procedures/types.SetAssetRequirementsParams","source":"@site/sdk-docs_versioned_docs/version-27.4.x/interfaces/API/Procedures/Types/SetAssetRequirementsParams/SetAssetRequirementsParams.md","sourceDirName":"interfaces/API/Procedures/Types/SetAssetRequirementsParams","slug":"/interfaces/API/Procedures/Types/SetAssetRequirementsParams/","permalink":"/polymesh-documentation-site/sdk-docs/interfaces/API/Procedures/Types/SetAssetRequirementsParams/","draft":false,"unlisted":false,"tags":[],"version":"27.4.x","frontMatter":{"id":"SetAssetRequirementsParams","title":"Interface: SetAssetRequirementsParams","sidebar_label":"SetAssetRequirementsParams"},"sidebar":"defaultSidebar","previous":{"title":"SetAssetDocumentsParams","permalink":"/polymesh-documentation-site/sdk-docs/interfaces/API/Procedures/Types/SetAssetDocumentsParams/"},"next":{"title":"SetClaimCountTransferRestrictionsParams","permalink":"/polymesh-documentation-site/sdk-docs/interfaces/API/Procedures/Types/SetClaimCountTransferRestrictionsParams/"}}');var n=t(74848),i=t(28453);const o={id:"SetAssetRequirementsParams",title:"Interface: SetAssetRequirementsParams",sidebar_label:"SetAssetRequirementsParams"},a=void 0,c={},d=[{value:"Properties",id:"properties",level:2},{value:"requirements",id:"requirements",level:3},{value:"Defined in",id:"defined-in",level:4}];function m(e){const s={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",p:"p",strong:"strong",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.a,{href:"/polymesh-documentation-site/sdk-docs/modules/API/Procedures/Types/",children:"api/procedures/types"}),".SetAssetRequirementsParams"]}),"\n",(0,n.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsx)(s.h3,{id:"requirements",children:"requirements"}),"\n",(0,n.jsxs)(s.p,{children:["\u2022 ",(0,n.jsx)(s.strong,{children:"requirements"}),": ",(0,n.jsx)(s.a,{href:"/polymesh-documentation-site/sdk-docs/modules/API/Entities/Types/#inputcondition",children:(0,n.jsx)(s.code,{children:"InputCondition"})}),"[][]"]}),"\n",(0,n.jsxs)(s.p,{children:["array of array of conditions. For a transfer to be successful, it must comply with all the conditions of at least one of the arrays.\nIn other words, higher level arrays are ",(0,n.jsx)(s.em,{children:"OR"})," between them, while conditions inside each array are ",(0,n.jsx)(s.em,{children:"AND"})," between them"]}),"\n",(0,n.jsx)(s.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.a,{href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/f8a937f04/src/api/procedures/types.ts#L1306",children:"api/procedures/types.ts:1306"})})]})}function u(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(m,{...e})}):m(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>o,x:()=>a});var r=t(96540);const n={},i=r.createContext(n);function o(e){const s=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),r.createElement(i.Provider,{value:s},e.children)}}}]);