"use strict";(self.webpackChunkpolymesh_developer_documentation=self.webpackChunkpolymesh_developer_documentation||[]).push([[49212],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>y});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=s(n),m=o,y=d["".concat(l,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(y,i(i({ref:t},c),{},{components:n})):r.createElement(y,i({ref:t},c))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[d]="string"==typeof e?e:o,i[1]=p;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},68266:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>p,toc:()=>s});var r=n(87462),o=(n(67294),n(3905));const a={},i=void 0,p={unversionedId:"Enums/Types/StatType",id:"Enums/Types/StatType",title:"StatType",description:"types.StatType",source:"@site/sdk-docs/Enums/Types/StatType.md",sourceDirName:"Enums/Types",slug:"/Enums/Types/StatType",permalink:"/polymesh-documentation-site/sdk-docs/Enums/Types/StatType",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"StatOpTypeEnum",permalink:"/polymesh-documentation-site/sdk-docs/Enums/Types/StatOpTypeEnum"},next:{title:"TransactionArgumentType",permalink:"/polymesh-documentation-site/sdk-docs/Enums/Types/TransactionArgumentType"}},l={},s=[{value:"Enumeration Members",id:"enumeration-members",level:2},{value:"Balance",id:"balance",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"Count",id:"count",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"ScopedBalance",id:"scopedbalance",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"ScopedCount",id:"scopedcount",level:3},{value:"Defined in",id:"defined-in-3",level:4}],c={toc:s};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/Modules/Types/"},"types"),".StatType"),(0,o.kt)("p",null,"Represents the StatType from the ",(0,o.kt)("inlineCode",{parentName:"p"},"statistics")," module."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"Note"))),(0,o.kt)("p",null,'the chain doesn\'t use "Scoped" types, but they are needed here to discriminate the input instead of having an optional input'),(0,o.kt)("h2",{id:"enumeration-members"},"Enumeration Members"),(0,o.kt)("h3",{id:"balance"},"Balance"),(0,o.kt)("p",null,"\u2022 ",(0,o.kt)("strong",{parentName:"p"},"Balance")," = ",(0,o.kt)("inlineCode",{parentName:"p"},'"Balance"')),(0,o.kt)("h4",{id:"defined-in"},"Defined in"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/15be87e8/src/types/index.ts#L340"},"types/index.ts:340")),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"count"},"Count"),(0,o.kt)("p",null,"\u2022 ",(0,o.kt)("strong",{parentName:"p"},"Count")," = ",(0,o.kt)("inlineCode",{parentName:"p"},'"Count"')),(0,o.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/15be87e8/src/types/index.ts#L339"},"types/index.ts:339")),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"scopedbalance"},"ScopedBalance"),(0,o.kt)("p",null,"\u2022 ",(0,o.kt)("strong",{parentName:"p"},"ScopedBalance")," = ",(0,o.kt)("inlineCode",{parentName:"p"},'"ScopedBalance"')),(0,o.kt)("p",null,"ScopedPercentage is an SDK only type, on chain it is ",(0,o.kt)("inlineCode",{parentName:"p"},"Balance")," with a claimType option present"),(0,o.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/15be87e8/src/types/index.ts#L348"},"types/index.ts:348")),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"scopedcount"},"ScopedCount"),(0,o.kt)("p",null,"\u2022 ",(0,o.kt)("strong",{parentName:"p"},"ScopedCount")," = ",(0,o.kt)("inlineCode",{parentName:"p"},'"ScopedCount"')),(0,o.kt)("p",null,"ScopedCount is an SDK only type, on chain it is ",(0,o.kt)("inlineCode",{parentName:"p"},"Count")," with a claimType option present"),(0,o.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/15be87e8/src/types/index.ts#L344"},"types/index.ts:344")))}d.isMDXComponent=!0}}]);