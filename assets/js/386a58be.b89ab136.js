"use strict";(self.webpackChunkpolymesh_developer_documentation=self.webpackChunkpolymesh_developer_documentation||[]).push([[5140],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>f});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var o=n.createContext({}),p=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=p(e.components);return n.createElement(o.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,o=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=p(r),c=a,f=u["".concat(o,".").concat(c)]||u[c]||m[c]||s;return r?n.createElement(f,i(i({ref:t},d),{},{components:r})):n.createElement(f,i({ref:t},d))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,i=new Array(s);i[0]=c;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<s;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},60946:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var n=r(87462),a=(r(67294),r(3905));const s={id:"TrustedClaimIssuer",title:"Interface: TrustedClaimIssuer<IsDefault>",sidebar_label:"TrustedClaimIssuer"},i="Interface: TrustedClaimIssuer<IsDefault>",l={unversionedId:"interfaces/Types/TrustedClaimIssuer/TrustedClaimIssuer",id:"interfaces/Types/TrustedClaimIssuer/TrustedClaimIssuer",title:"Interface: TrustedClaimIssuer<IsDefault>",description:"types.TrustedClaimIssuer",source:"@site/sdk-docs/interfaces/Types/TrustedClaimIssuer/TrustedClaimIssuer.md",sourceDirName:"interfaces/Types/TrustedClaimIssuer",slug:"/interfaces/Types/TrustedClaimIssuer/",permalink:"/polymesh-documentation-site/sdk-docs/interfaces/Types/TrustedClaimIssuer/",draft:!1,tags:[],version:"current",frontMatter:{id:"TrustedClaimIssuer",title:"Interface: TrustedClaimIssuer<IsDefault>",sidebar_label:"TrustedClaimIssuer"},sidebar:"defaultSidebar",previous:{title:"TransactionPermissions",permalink:"/polymesh-documentation-site/sdk-docs/interfaces/Types/TransactionPermissions/"},next:{title:"TxData",permalink:"/polymesh-documentation-site/sdk-docs/interfaces/Types/TxData/"}},o={},p=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Properties",id:"properties",level:2},{value:"identity",id:"identity",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"trustedFor",id:"trustedfor",level:3},{value:"Defined in",id:"defined-in-1",level:4}],d={toc:p};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"interface-trustedclaimissuerisdefault"},"Interface: TrustedClaimIssuer<IsDefault",">"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/modules/Types/"},"types"),".TrustedClaimIssuer"),(0,a.kt)("h2",{id:"type-parameters"},"Type parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"IsDefault")),(0,a.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,a.kt)("inlineCode",{parentName:"td"},"boolean")," = ",(0,a.kt)("inlineCode",{parentName:"td"},"false")),(0,a.kt)("td",{parentName:"tr",align:"left"},"whether the Identity is a default trusted claim issuer for an asset or just for a specific compliance condition. Defaults to false")))),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("h3",{id:"identity"},"identity"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"identity"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"IsDefault")," extends ",(0,a.kt)("inlineCode",{parentName:"p"},"true")," ? ",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/DefaultTrustedClaimIssuer/"},(0,a.kt)("inlineCode",{parentName:"a"},"DefaultTrustedClaimIssuer"))," : ",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/Identity/"},(0,a.kt)("inlineCode",{parentName:"a"},"Identity"))),(0,a.kt)("h4",{id:"defined-in"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/15be87e8/src/types/index.ts#L393"},"types/index.ts:393")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"trustedfor"},"trustedFor"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"trustedFor"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"null")," ","|"," ",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/enums/Types/ClaimType/"},(0,a.kt)("inlineCode",{parentName:"a"},"ClaimType")),"[]"),(0,a.kt)("p",null,"a null value means that the issuer is trusted for all claim types"),(0,a.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/15be87e8/src/types/index.ts#L397"},"types/index.ts:397")))}u.isMDXComponent=!0}}]);