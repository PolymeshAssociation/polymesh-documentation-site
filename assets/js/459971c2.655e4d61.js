"use strict";(self.webpackChunkpolymesh_developer_documentation=self.webpackChunkpolymesh_developer_documentation||[]).push([[88175],{9104:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>d,contentTitle:()=>a,default:()=>l,frontMatter:()=>o,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"api/procedures/types/interfaces/AddAssetRequirementParams","title":"Interface: AddAssetRequirementParams","description":"Defined in1251","source":"@site/sdk-docs_versioned_docs/version-v29.0.x/api/procedures/types/interfaces/AddAssetRequirementParams.mdx","sourceDirName":"api/procedures/types/interfaces","slug":"/api/procedures/types/interfaces/AddAssetRequirementParams","permalink":"/polymesh-documentation-site/sdk-docs/api/procedures/types/interfaces/AddAssetRequirementParams","draft":false,"unlisted":false,"tags":[],"version":"v29.0.x","frontMatter":{"sidebar_label":"AddAssetRequirementParams"},"sidebar":"defaultSidebar","previous":{"title":"AccountWithSignature","permalink":"/polymesh-documentation-site/sdk-docs/api/procedures/types/interfaces/AccountWithSignature"},"next":{"title":"AddClaimsParams","permalink":"/polymesh-documentation-site/sdk-docs/api/procedures/types/interfaces/AddClaimsParams"}}');var r=t(74848),i=t(28453);const o={sidebar_label:"AddAssetRequirementParams"},a="Interface: AddAssetRequirementParams",d={},c=[{value:"Properties",id:"properties",level:2},{value:"conditions",id:"conditions",level:3}];function p(e){const s={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"interface-addassetrequirementparams",children:"Interface: AddAssetRequirementParams"})}),"\n",(0,r.jsxs)(s.p,{children:["Defined in: ",(0,r.jsx)(s.a,{href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/bee6a2fe7a8ce5db42a6982e793782182cde2153/src/api/procedures/types.ts#L1251",children:"src/api/procedures/types.ts:1251"})]}),"\n",(0,r.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsx)(s.h3,{id:"conditions",children:"conditions"}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"conditions"}),": ",(0,r.jsx)(s.a,{href:"/polymesh-documentation-site/sdk-docs/api/entities/types/type-aliases/InputCondition",children:(0,r.jsx)(s.code,{children:"InputCondition"})}),"[]"]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["Defined in: ",(0,r.jsx)(s.a,{href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/bee6a2fe7a8ce5db42a6982e793782182cde2153/src/api/procedures/types.ts#L1257",children:"src/api/procedures/types.ts:1257"})]}),"\n",(0,r.jsxs)(s.p,{children:["array of conditions that form the requirement that must be added.\nConditions within a requirement are ",(0,r.jsx)(s.em,{children:"AND"})," between them. This means that in order\nfor a transfer to comply with this requirement, it must fulfill ",(0,r.jsx)(s.em,{children:"ALL"})," conditions"]})]})}function l(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>o,x:()=>a});var n=t(96540);const r={},i=n.createContext(r);function o(e){const s=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(i.Provider,{value:s},e.children)}}}]);