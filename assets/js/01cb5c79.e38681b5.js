"use strict";(self.webpackChunkpolymesh_developer_documentation=self.webpackChunkpolymesh_developer_documentation||[]).push([[47067],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),y=i,m=u["".concat(l,".").concat(y)]||u[y]||d[y]||o;return n?r.createElement(m,a(a({ref:t},c),{},{components:n})):r.createElement(m,a({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=y;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:i,a[1]=s;for(var p=2;p<o;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},97065:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=n(87462),i=(n(67294),n(3905));const o={},a=void 0,s={unversionedId:"Enums/Types/PayingAccountType",id:"Enums/Types/PayingAccountType",title:"PayingAccountType",description:"types.PayingAccountType",source:"@site/sdk-docs/Enums/Types/PayingAccountType.md",sourceDirName:"Enums/Types",slug:"/Enums/Types/PayingAccountType",permalink:"/polymesh-documentation-site/sdk-docs/Enums/Types/PayingAccountType",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Order",permalink:"/polymesh-documentation-site/sdk-docs/Enums/Types/Order"},next:{title:"PermissionGroupType",permalink:"/polymesh-documentation-site/sdk-docs/Enums/Types/PermissionGroupType"}},l={},p=[{value:"Enumeration Members",id:"enumeration-members",level:2},{value:"Caller",id:"caller",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"Other",id:"other",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"Subsidy",id:"subsidy",level:3},{value:"Defined in",id:"defined-in-2",level:4}],c={toc:p};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/Modules/Types/"},"types"),".PayingAccountType"),(0,i.kt)("p",null,"Type of relationship between a paying account and a beneficiary"),(0,i.kt)("h2",{id:"enumeration-members"},"Enumeration Members"),(0,i.kt)("h3",{id:"caller"},"Caller"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"Caller")," = ",(0,i.kt)("inlineCode",{parentName:"p"},'"Caller"')),(0,i.kt)("p",null,"the caller Account is responsible of paying the fees"),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/15be87e8/src/types/index.ts#L767"},"types/index.ts:767")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"other"},"Other"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"Other")," = ",(0,i.kt)("inlineCode",{parentName:"p"},'"Other"')),(0,i.kt)("p",null,"the paying Account is paying for a specific transaction because of\nchain-specific constraints (e.g. the caller is accepting an invitation to an Identity\nand cannot have any funds to pay for it by definition)"),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/15be87e8/src/types/index.ts#L763"},"types/index.ts:763")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"subsidy"},"Subsidy"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"Subsidy")," = ",(0,i.kt)("inlineCode",{parentName:"p"},'"Subsidy"')),(0,i.kt)("p",null,"the paying Account is currently subsidizing the caller"),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/15be87e8/src/types/index.ts#L757"},"types/index.ts:757")))}u.isMDXComponent=!0}}]);