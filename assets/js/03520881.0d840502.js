"use strict";(self.webpackChunkpolymesh_developer_documentation=self.webpackChunkpolymesh_developer_documentation||[]).push([[26716],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>m});var i=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,i,n=function(e,t){if(null==e)return{};var r,i,n={},a=Object.keys(e);for(i=0;i<a.length;i++)r=a[i],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)r=a[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=i.createContext({}),p=function(e){var t=i.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},d=function(e){var t=p(e.components);return i.createElement(l.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},f=i.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,l=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=p(r),f=n,m=u["".concat(l,".").concat(f)]||u[f]||c[f]||a;return r?i.createElement(m,s(s({ref:t},d),{},{components:r})):i.createElement(m,s({ref:t},d))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,s=new Array(a);s[0]=f;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[u]="string"==typeof e?e:n,s[1]=o;for(var p=2;p<a;p++)s[p]=r[p];return i.createElement.apply(null,s)}return i.createElement.apply(null,r)}f.displayName="MDXCreateElement"},54962:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>p});var i=r(87462),n=(r(67294),r(3905));const a={id:"ModifyMultiSigParams",title:"Interface: ModifyMultiSigParams",sidebar_label:"ModifyMultiSigParams"},s=void 0,o={unversionedId:"interfaces/API/Procedures/Types/ModifyMultiSigParams/ModifyMultiSigParams",id:"version-19.1.x/interfaces/API/Procedures/Types/ModifyMultiSigParams/ModifyMultiSigParams",title:"Interface: ModifyMultiSigParams",description:"api/procedures/types.ModifyMultiSigParams",source:"@site/sdk-docs_versioned_docs/version-19.1.x/interfaces/API/Procedures/Types/ModifyMultiSigParams/ModifyMultiSigParams.md",sourceDirName:"interfaces/API/Procedures/Types/ModifyMultiSigParams",slug:"/interfaces/API/Procedures/Types/ModifyMultiSigParams/",permalink:"/sdk-docs/19.1.x/interfaces/API/Procedures/Types/ModifyMultiSigParams/",draft:!1,tags:[],version:"19.1.x",frontMatter:{id:"ModifyMultiSigParams",title:"Interface: ModifyMultiSigParams",sidebar_label:"ModifyMultiSigParams"},sidebar:"defaultSidebar",previous:{title:"ModifyInstructionAffirmationParams",permalink:"/sdk-docs/19.1.x/interfaces/API/Procedures/Types/ModifyInstructionAffirmationParams/"},next:{title:"ModifyPrimaryIssuanceAgentParams",permalink:"/sdk-docs/19.1.x/interfaces/API/Procedures/Types/ModifyPrimaryIssuanceAgentParams/"}},l={},p=[{value:"Properties",id:"properties",level:2},{value:"multiSig",id:"multisig",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"signers",id:"signers",level:3},{value:"Defined in",id:"defined-in-1",level:4}],d={toc:p};function u(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,i.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/sdk-docs/19.1.x/modules/API/Procedures/Types/"},"api/procedures/types"),".ModifyMultiSigParams"),(0,n.kt)("h2",{id:"properties"},"Properties"),(0,n.kt)("h3",{id:"multisig"},"multiSig"),(0,n.kt)("p",null,"\u2022 ",(0,n.kt)("strong",{parentName:"p"},"multiSig"),": ",(0,n.kt)("a",{parentName:"p",href:"/sdk-docs/19.1.x/classes/API/Entities/MultiSig/"},(0,n.kt)("inlineCode",{parentName:"a"},"MultiSig"))),(0,n.kt)("p",null,"The MultiSig to be modified"),(0,n.kt)("h4",{id:"defined-in"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/31fdce23/src/api/procedures/types.ts#L973"},"api/procedures/types.ts:973")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"signers"},"signers"),(0,n.kt)("p",null,"\u2022 ",(0,n.kt)("strong",{parentName:"p"},"signers"),": ",(0,n.kt)("a",{parentName:"p",href:"/sdk-docs/19.1.x/modules/Types/#signer"},(0,n.kt)("inlineCode",{parentName:"a"},"Signer")),"[]"),(0,n.kt)("p",null,"The signers to set for the MultiSig"),(0,n.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/31fdce23/src/api/procedures/types.ts#L977"},"api/procedures/types.ts:977")))}u.isMDXComponent=!0}}]);