"use strict";(self.webpackChunkpolymesh_developer_documentation=self.webpackChunkpolymesh_developer_documentation||[]).push([[33668],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var d=n.createContext({}),p=function(e){var t=n.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(d.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},l=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,d=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=p(r),l=a,f=m["".concat(d,".").concat(l)]||m[l]||u[l]||s;return r?n.createElement(f,i(i({ref:t},c),{},{components:r})):n.createElement(f,i({ref:t},c))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,i=new Array(s);i[0]=l;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o[m]="string"==typeof e?e:a,i[1]=o;for(var p=2;p<s;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}l.displayName="MDXCreateElement"},19994:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>m,frontMatter:()=>s,metadata:()=>o,toc:()=>p});var n=r(87462),a=(r(67294),r(3905));const s={id:"AddAssetRequirementParams",title:"Interface: AddAssetRequirementParams",sidebar_label:"AddAssetRequirementParams"},i=void 0,o={unversionedId:"interfaces/API/Procedures/Types/AddAssetRequirementParams/AddAssetRequirementParams",id:"interfaces/API/Procedures/Types/AddAssetRequirementParams/AddAssetRequirementParams",title:"Interface: AddAssetRequirementParams",description:"api/procedures/types.AddAssetRequirementParams",source:"@site/sdk-docs/interfaces/API/Procedures/Types/AddAssetRequirementParams/AddAssetRequirementParams.md",sourceDirName:"interfaces/API/Procedures/Types/AddAssetRequirementParams",slug:"/interfaces/API/Procedures/Types/AddAssetRequirementParams/",permalink:"/polymesh-documentation-site/sdk-docs/23.0.0-alpha.27/interfaces/API/Procedures/Types/AddAssetRequirementParams/",draft:!1,tags:[],version:"current",frontMatter:{id:"AddAssetRequirementParams",title:"Interface: AddAssetRequirementParams",sidebar_label:"AddAssetRequirementParams"},sidebar:"defaultSidebar",previous:{title:"AcceptPrimaryKeyRotationParams",permalink:"/polymesh-documentation-site/sdk-docs/23.0.0-alpha.27/interfaces/API/Procedures/Types/AcceptPrimaryKeyRotationParams/"},next:{title:"AddClaimsParams",permalink:"/polymesh-documentation-site/sdk-docs/23.0.0-alpha.27/interfaces/API/Procedures/Types/AddClaimsParams/"}},d={},p=[{value:"Properties",id:"properties",level:2},{value:"conditions",id:"conditions",level:3},{value:"Defined in",id:"defined-in",level:4}],c={toc:p};function m(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/23.0.0-alpha.27/modules/API/Procedures/Types/"},"api/procedures/types"),".AddAssetRequirementParams"),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("h3",{id:"conditions"},"conditions"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"conditions"),": ",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/23.0.0-alpha.27/modules/Types/#inputcondition"},(0,a.kt)("inlineCode",{parentName:"a"},"InputCondition")),"[]"),(0,a.kt)("p",null,"array of conditions that form the requirement that must be added.\nConditions within a requirement are ",(0,a.kt)("em",{parentName:"p"},"AND")," between them. This means that in order\nfor a transfer to comply with this requirement, it must fulfill ",(0,a.kt)("em",{parentName:"p"},"ALL")," conditions"),(0,a.kt)("h4",{id:"defined-in"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/372a67e5d/src/api/procedures/types.ts#L713"},"api/procedures/types.ts:713")))}m.isMDXComponent=!0}}]);