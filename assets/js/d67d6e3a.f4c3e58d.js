"use strict";(self.webpackChunkpolymesh_developer_documentation=self.webpackChunkpolymesh_developer_documentation||[]).push([[10987],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>u});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},d="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=c(r),m=a,u=d["".concat(p,".").concat(m)]||d[m]||y[m]||i;return r?n.createElement(u,o(o({ref:t},l),{},{components:r})):n.createElement(u,o({ref:t},l))}));function u(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[d]="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},15044:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var n=r(87462),a=(r(67294),r(3905));const i={id:"AttestPrimaryKeyRotationParams",title:"Interface: AttestPrimaryKeyRotationParams",sidebar_label:"AttestPrimaryKeyRotationParams"},o=void 0,s={unversionedId:"interfaces/API/Procedures/Types/AttestPrimaryKeyRotationParams/AttestPrimaryKeyRotationParams",id:"version-23.0.x/interfaces/API/Procedures/Types/AttestPrimaryKeyRotationParams/AttestPrimaryKeyRotationParams",title:"Interface: AttestPrimaryKeyRotationParams",description:"api/procedures/types.AttestPrimaryKeyRotationParams",source:"@site/sdk-docs_versioned_docs/version-23.0.x/interfaces/API/Procedures/Types/AttestPrimaryKeyRotationParams/AttestPrimaryKeyRotationParams.md",sourceDirName:"interfaces/API/Procedures/Types/AttestPrimaryKeyRotationParams",slug:"/interfaces/API/Procedures/Types/AttestPrimaryKeyRotationParams/",permalink:"/polymesh-documentation-site/sdk-docs/interfaces/API/Procedures/Types/AttestPrimaryKeyRotationParams/",draft:!1,tags:[],version:"23.0.x",frontMatter:{id:"AttestPrimaryKeyRotationParams",title:"Interface: AttestPrimaryKeyRotationParams",sidebar_label:"AttestPrimaryKeyRotationParams"},sidebar:"defaultSidebar",previous:{title:"AssetBase",permalink:"/polymesh-documentation-site/sdk-docs/interfaces/API/Procedures/Types/AssetBase/"},next:{title:"ClaimCountTransferRestrictionInput",permalink:"/polymesh-documentation-site/sdk-docs/interfaces/API/Procedures/Types/ClaimCountTransferRestrictionInput/"}},p={},c=[{value:"Properties",id:"properties",level:2},{value:"expiry",id:"expiry",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"identity",id:"identity",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"targetAccount",id:"targetaccount",level:3},{value:"Defined in",id:"defined-in-2",level:4}],l={toc:c};function d(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/modules/API/Procedures/Types/"},"api/procedures/types"),".AttestPrimaryKeyRotationParams"),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("h3",{id:"expiry"},"expiry"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"expiry"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"Date")),(0,a.kt)("p",null,"(optional) when the generated authorization should expire"),(0,a.kt)("h4",{id:"defined-in"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/720afb69c/src/api/procedures/types.ts#L469"},"api/procedures/types.ts:469")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"identity"},"identity"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"identity"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string")," ","|"," ",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/Identity/"},(0,a.kt)("inlineCode",{parentName:"a"},"Identity"))),(0,a.kt)("p",null,"Identity or the DID of the Identity that is to be rotated"),(0,a.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/720afb69c/src/api/procedures/types.ts#L464"},"api/procedures/types.ts:464")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"targetaccount"},"targetAccount"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"targetAccount"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string")," ","|"," ",(0,a.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/classes/API/Entities/Account/"},(0,a.kt)("inlineCode",{parentName:"a"},"Account"))),(0,a.kt)("p",null,"The Account that will be attested to become the primary key of the ",(0,a.kt)("inlineCode",{parentName:"p"},"identity"),". Can be ss58 encoded address or an instance of Account"),(0,a.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/720afb69c/src/api/procedures/types.ts#L459"},"api/procedures/types.ts:459")))}d.isMDXComponent=!0}}]);