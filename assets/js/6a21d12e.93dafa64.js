"use strict";(self.webpackChunkpolymesh_developer_documentation=self.webpackChunkpolymesh_developer_documentation||[]).push([[14719],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var s=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,s)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,s,n=function(e,t){if(null==e)return{};var r,s,n={},i=Object.keys(e);for(s=0;s<i.length;s++)r=i[s],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(s=0;s<i.length;s++)r=i[s],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=s.createContext({}),u=function(e){var t=s.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=u(e.components);return s.createElement(l.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},p=s.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),d=u(r),p=n,f=d["".concat(l,".").concat(p)]||d[p]||m[p]||i;return r?s.createElement(f,o(o({ref:t},c),{},{components:r})):s.createElement(f,o({ref:t},c))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=p;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a[d]="string"==typeof e?e:n,o[1]=a;for(var u=2;u<i;u++)o[u]=r[u];return s.createElement.apply(null,o)}return s.createElement.apply(null,r)}p.displayName="MDXCreateElement"},54986:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>a,toc:()=>u});var s=r(87462),n=(r(67294),r(3905));const i={id:"TrustedClaimIssuers",title:"Module: TrustedClaimIssuers",sidebar_label:"TrustedClaimIssuers"},o=void 0,a={unversionedId:"modules/API/Entities/Asset/Compliance/TrustedClaimIssuers/TrustedClaimIssuers",id:"version-19.1.x/modules/API/Entities/Asset/Compliance/TrustedClaimIssuers/TrustedClaimIssuers",title:"Module: TrustedClaimIssuers",description:"Classes",source:"@site/sdk-docs_versioned_docs/version-19.1.x/modules/API/Entities/Asset/Compliance/TrustedClaimIssuers/TrustedClaimIssuers.md",sourceDirName:"modules/API/Entities/Asset/Compliance/TrustedClaimIssuers",slug:"/modules/API/Entities/Asset/Compliance/TrustedClaimIssuers/",permalink:"/sdk-docs/19.1.x/modules/API/Entities/Asset/Compliance/TrustedClaimIssuers/",draft:!1,tags:[],version:"19.1.x",frontMatter:{id:"TrustedClaimIssuers",title:"Module: TrustedClaimIssuers",sidebar_label:"TrustedClaimIssuers"},sidebar:"defaultSidebar",previous:{title:"Requirements",permalink:"/sdk-docs/19.1.x/modules/API/Entities/Asset/Compliance/Requirements/"},next:{title:"CorporateActions",permalink:"/sdk-docs/19.1.x/modules/API/Entities/Asset/CorporateActions/"}},l={},u=[{value:"Classes",id:"classes",level:2}],c={toc:u};function d(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,s.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"classes"},"Classes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/sdk-docs/19.1.x/classes/API/Entities/Asset/Compliance/TrustedClaimIssuers/"},"TrustedClaimIssuers"))))}d.isMDXComponent=!0}}]);