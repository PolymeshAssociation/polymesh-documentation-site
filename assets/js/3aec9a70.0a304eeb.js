"use strict";(self.webpackChunkpolymesh_developer_documentation=self.webpackChunkpolymesh_developer_documentation||[]).push([[38651],{3905:(e,t,i)=>{i.d(t,{Zo:()=>d,kt:()=>h});var n=i(67294);function r(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function a(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function o(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?a(Object(i),!0).forEach((function(t){r(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):a(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function s(e,t){if(null==e)return{};var i,n,r=function(e,t){if(null==e)return{};var i,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||(r[i]=e[i]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var l=n.createContext({}),p=function(e){var t=n.useContext(l),i=t;return e&&(i="function"==typeof e?e(t):o(o({},t),e)),i},d=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var i=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=p(i),f=r,h=u["".concat(l,".").concat(f)]||u[f]||c[f]||a;return i?n.createElement(h,o(o({ref:t},d),{},{components:i})):n.createElement(h,o({ref:t},d))}));function h(e,t){var i=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=i.length,o=new Array(a);o[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:r,o[1]=s;for(var p=2;p<a;p++)o[p]=i[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,i)}f.displayName="MDXCreateElement"},96940:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var n=i(87462),r=(i(67294),i(3905));const a={id:"ConfigureDividendDistributionParams",title:"Interface: ConfigureDividendDistributionParams",sidebar_label:"ConfigureDividendDistributionParams"},o=void 0,s={unversionedId:"interfaces/API/Procedures/Types/ConfigureDividendDistributionParams/ConfigureDividendDistributionParams",id:"interfaces/API/Procedures/Types/ConfigureDividendDistributionParams/ConfigureDividendDistributionParams",title:"Interface: ConfigureDividendDistributionParams",description:"api/procedures/types.ConfigureDividendDistributionParams",source:"@site/sdk-docs/interfaces/API/Procedures/Types/ConfigureDividendDistributionParams/ConfigureDividendDistributionParams.md",sourceDirName:"interfaces/API/Procedures/Types/ConfigureDividendDistributionParams",slug:"/interfaces/API/Procedures/Types/ConfigureDividendDistributionParams/",permalink:"/polymesh-documentation-site/sdk-docs/23.0.0-alpha.18/interfaces/API/Procedures/Types/ConfigureDividendDistributionParams/",draft:!1,tags:[],version:"current",frontMatter:{id:"ConfigureDividendDistributionParams",title:"Interface: ConfigureDividendDistributionParams",sidebar_label:"ConfigureDividendDistributionParams"},sidebar:"defaultSidebar",previous:{title:"ClaimPercentageTransferRestrictionInput",permalink:"/polymesh-documentation-site/sdk-docs/23.0.0-alpha.18/interfaces/API/Procedures/Types/ClaimPercentageTransferRestrictionInput/"},next:{title:"ControllerTransferParams",permalink:"/polymesh-documentation-site/sdk-docs/23.0.0-alpha.18/interfaces/API/Procedures/Types/ControllerTransferParams/"}},l={},p=[{value:"Properties",id:"properties",level:2},{value:"checkpoint",id:"checkpoint",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"currency",id:"currency",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"declarationDate",id:"declarationdate",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"defaultTaxWithholding",id:"defaulttaxwithholding",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"description",id:"description",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"expiryDate",id:"expirydate",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"maxAmount",id:"maxamount",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"originPortfolio",id:"originportfolio",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"paymentDate",id:"paymentdate",level:3},{value:"Defined in",id:"defined-in-8",level:4},{value:"perShare",id:"pershare",level:3},{value:"Defined in",id:"defined-in-9",level:4},{value:"targets",id:"targets",level:3},{value:"Defined in",id:"defined-in-10",level:4},{value:"taxWithholdings",id:"taxwithholdings",level:3},{value:"Defined in",id:"defined-in-11",level:4}],d={toc:p};function u(e){let{components:t,...i}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/23.0.0-alpha.18/modules/API/Procedures/Types/"},"api/procedures/types"),".ConfigureDividendDistributionParams"),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("h3",{id:"checkpoint"},"checkpoint"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"checkpoint"),": ",(0,r.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/23.0.0-alpha.18/modules/API/Entities/Asset/Fungible/Checkpoints/Types/#inputcacheckpoint"},(0,r.kt)("inlineCode",{parentName:"a"},"InputCaCheckpoint"))),(0,r.kt)("p",null,"checkpoint to be used to calculate Dividends. If a Schedule is passed, the next Checkpoint it creates will be used.\nIf a Date is passed, a Checkpoint will be created at that date and used"),(0,r.kt)("h4",{id:"defined-in"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/b6f9fb883/src/api/procedures/types.ts#L806"},"api/procedures/types.ts:806")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"currency"},"currency"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"currency"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"ticker of the currency in which Dividends will be distributed"),(0,r.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/b6f9fb883/src/api/procedures/types.ts#L814"},"api/procedures/types.ts:814")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"declarationdate"},"declarationDate"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"declarationDate"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Date")),(0,r.kt)("p",null,"date at which the issuer publicly declared the Dividend Distribution. Optional, defaults to the current date"),(0,r.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/b6f9fb883/src/api/procedures/types.ts#L785"},"api/procedures/types.ts:785")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"defaulttaxwithholding"},"defaultTaxWithholding"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"defaultTaxWithholding"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"BigNumber")),(0,r.kt)("p",null,"default percentage (0-100) of the Benefits to be held for tax purposes"),(0,r.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/b6f9fb883/src/api/procedures/types.ts#L796"},"api/procedures/types.ts:796")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"description"},"description"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"description"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/b6f9fb883/src/api/procedures/types.ts#L786"},"api/procedures/types.ts:786")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"expirydate"},"expiryDate"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"expiryDate"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Date")),(0,r.kt)("p",null,"optional, defaults to never expiring"),(0,r.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/b6f9fb883/src/api/procedures/types.ts#L830"},"api/procedures/types.ts:830")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"maxamount"},"maxAmount"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"maxAmount"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"BigNumber")),(0,r.kt)("p",null,"maximum amount of ",(0,r.kt)("inlineCode",{parentName:"p"},"currency")," to distribute in total"),(0,r.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/b6f9fb883/src/api/procedures/types.ts#L822"},"api/procedures/types.ts:822")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"originportfolio"},"originPortfolio"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"originPortfolio"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"BigNumber")," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/23.0.0-alpha.18/classes/API/Entities/NumberedPortfolio/"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberedPortfolio"))),(0,r.kt)("p",null,"portfolio from which the Dividends will be distributed. Optional, defaults to the Dividend Distributions Agent's Default Portfolio"),(0,r.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/b6f9fb883/src/api/procedures/types.ts#L810"},"api/procedures/types.ts:810")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"paymentdate"},"paymentDate"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"paymentDate"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Date")),(0,r.kt)("p",null,"date from which Asset Holders can claim their Dividends"),(0,r.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/b6f9fb883/src/api/procedures/types.ts#L826"},"api/procedures/types.ts:826")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"pershare"},"perShare"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"perShare"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"BigNumber")),(0,r.kt)("p",null,"amount of ",(0,r.kt)("inlineCode",{parentName:"p"},"currency")," to distribute per each share of the Asset that a target holds"),(0,r.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/b6f9fb883/src/api/procedures/types.ts#L818"},"api/procedures/types.ts:818")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"targets"},"targets"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"targets"),": ",(0,r.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/23.0.0-alpha.18/modules/Types/#inputcorporateactiontargets"},(0,r.kt)("inlineCode",{parentName:"a"},"InputCorporateActionTargets"))),(0,r.kt)("p",null,"Asset Holder Identities to be included (or excluded) from the Dividend Distribution. Inclusion/exclusion is controlled by the ",(0,r.kt)("inlineCode",{parentName:"p"},"treatment"),"\nproperty. When the value is ",(0,r.kt)("inlineCode",{parentName:"p"},"Include"),", all Asset Holders not present in the array are excluded, and vice-versa. If no value is passed,\nthe default value for the Asset is used. If there is no default value, all Asset Holders will be part of the Dividend Distribution"),(0,r.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/b6f9fb883/src/api/procedures/types.ts#L792"},"api/procedures/types.ts:792")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"taxwithholdings"},"taxWithholdings"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"taxWithholdings"),": ",(0,r.kt)("a",{parentName:"p",href:"/polymesh-documentation-site/sdk-docs/23.0.0-alpha.18/modules/Types/#inputcorporateactiontaxwithholdings"},(0,r.kt)("inlineCode",{parentName:"a"},"InputCorporateActionTaxWithholdings"))),(0,r.kt)("p",null,"percentage (0-100) of the Benefits to be held for tax purposes from individual Asset Holder Identities.\nThis overrides the value of ",(0,r.kt)("inlineCode",{parentName:"p"},"defaultTaxWithholding")),(0,r.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/PolymeshAssociation/polymesh-sdk/blob/b6f9fb883/src/api/procedures/types.ts#L801"},"api/procedures/types.ts:801")))}u.isMDXComponent=!0}}]);